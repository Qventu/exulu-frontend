{"version":3,"file":"static/chunks/app/(application)/configuration/page-3aa96486933ae5dd.js","mappings":"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","sources":["webpack://_N_E/?bf1a","webpack://_N_E/./app/(application)/configuration/page.tsx","webpack://_N_E/./components/ui/card.tsx","webpack://_N_E/./components/ui/collapsible.tsx","webpack://_N_E/./components/ui/input.tsx","webpack://_N_E/./components/ui/label.tsx","webpack://_N_E/./components/ui/textarea.tsx","webpack://_N_E/./components/ui/use-toast.ts"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/daniel.claessen/Desktop/Projects/exulu/frontend/app/(application)/configuration/page.tsx\");\n","\"use client\";\n\nimport { useState, useEffect } from \"react\";\nimport { Card, CardContent, CardDescription, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Button } from \"@/components/ui/button\";\nimport { Textarea } from \"@/components/ui/textarea\";\nimport { Collapsible, CollapsibleContent, CollapsibleTrigger } from \"@/components/ui/collapsible\";\nimport { ChevronDown, CheckCircle2, RotateCcw } from \"lucide-react\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  GET_PLATFORM_CONFIGURATIONS,\n  CREATE_PLATFORM_CONFIGURATION,\n  UPDATE_PLATFORM_CONFIGURATION,\n} from \"@/queries/queries\";\n\nexport default function ConfigurationPage() {\n  const [lightTheme, setLightTheme] = useState({});\n  const [darkTheme, setDarkTheme] = useState({});\n  const [cssInput, setCssInput] = useState(\"\");\n  const [lightOpen, setLightOpen] = useState(false);\n  const [darkOpen, setDarkOpen] = useState(false);\n  const [isImporting, setIsImporting] = useState(false);\n  const [configId, setConfigId] = useState<string | null>(null);\n  const { toast } = useToast();\n\n  // Fetch all platform configurations\n  const { data, loading, refetch } = useQuery(GET_PLATFORM_CONFIGURATIONS);\n\n  const [createConfig] = useMutation(CREATE_PLATFORM_CONFIGURATION);\n  const [updateConfig] = useMutation(UPDATE_PLATFORM_CONFIGURATION);\n\n  // Load existing configuration when data is fetched\n  useEffect(() => {\n    if (data?.platform_configurationsPagination?.items) {\n      // Find the theme_config configuration\n      const themeConfig = data.platform_configurationsPagination.items.find(\n        (config: any) => config.config_key === \"theme_config\"\n      );\n\n      if (themeConfig) {\n        setConfigId(themeConfig.id);\n\n        if (themeConfig.config_value?.light) {\n          setLightTheme({ ...lightTheme, ...themeConfig.config_value.light });\n        }\n        if (themeConfig.config_value?.dark) {\n          setDarkTheme({ ...darkTheme, ...themeConfig.config_value.dark });\n        }\n      }\n    }\n  }, [data]);\n\n  const handleLightThemeChange = (key: string, value: string) => {\n    setLightTheme({ ...lightTheme, [key]: value });\n  };\n\n  const handleDarkThemeChange = (key: string, value: string) => {\n    setDarkTheme({ ...darkTheme, [key]: value });\n  };\n\n  const parseCssTheme = (css: string) => {\n    const light: Record<string, string> = {};\n    const dark: Record<string, string> = {};\n\n    // Extract :root block\n    const rootMatch = css.match(/:root\\s*\\{([^}]+)\\}/s);\n    if (rootMatch) {\n      const rootContent = rootMatch[1];\n      const variables = rootContent.match(/--[\\w-]+:\\s*[^;]+/g);\n      if (variables) {\n        variables.forEach((variable) => {\n          const [key, ...valueParts] = variable.split(\":\");\n          const value = valueParts.join(\":\").trim();\n          light[key.trim()] = value;\n        });\n      }\n    }\n\n    // Extract .dark block\n    const darkMatch = css.match(/\\.dark\\s*\\{([^}]+)\\}/s);\n    if (darkMatch) {\n      const darkContent = darkMatch[1];\n      const variables = darkContent.match(/--[\\w-]+:\\s*[^;]+/g);\n      if (variables) {\n        variables.forEach((variable) => {\n          const [key, ...valueParts] = variable.split(\":\");\n          const value = valueParts.join(\":\").trim();\n          dark[key.trim()] = value;\n        });\n      }\n    }\n\n    return { light, dark };\n  };\n\n  const handleImportCss = () => {\n    setIsImporting(true);\n    const parsed = parseCssTheme(cssInput);\n\n    setTimeout(() => {\n      if (Object.keys(parsed.light).length > 0) {\n        setLightTheme({ ...lightTheme, ...parsed.light });\n        setLightOpen(true);\n      }\n\n      if (Object.keys(parsed.dark).length > 0) {\n        setDarkTheme({ ...darkTheme, ...parsed.dark });\n        setDarkOpen(true);\n      }\n\n      setCssInput(\"\");\n      setIsImporting(false);\n\n      toast({\n        title: \"Theme imported successfully!\",\n        description: `Updated ${Object.keys(parsed.light).length + Object.keys(parsed.dark).length} variables.`,\n        duration: 3000,\n      });\n    }, 500);\n  };\n\n  const handleReset = () => {\n    setLightTheme({});\n    setDarkTheme({});\n    toast({\n      title: \"Theme reset\",\n      description: \"Both themes have been reset to default (empty).\",\n      duration: 3000,\n    });\n  };\n\n  const handleSave = async () => {\n    try {\n      const configData = {\n        config_key: \"theme_config\",\n        config_value: {\n          light: lightTheme,\n          dark: darkTheme,\n        },\n        description: \"Platform theme configuration\",\n      };\n\n      if (configId) {\n        // Update existing configuration\n        await updateConfig({\n          variables: {\n            id: configId,\n            data: configData,\n          },\n        });\n      } else {\n        // Create new configuration\n        const result = await createConfig({\n          variables: {\n            data: configData,\n          },\n        });\n        setConfigId(result.data?.platform_configurationsCreateOne?.item?.id);\n      }\n\n      await refetch();\n\n      toast({\n        title: \"Configuration saved\",\n        description: \"Theme configuration has been saved successfully.\",\n        duration: 3000,\n      });\n    } catch (error) {\n      console.error(\"Error saving configuration:\", error);\n      toast({\n        title: \"Error\",\n        description: \"Failed to save configuration. Please try again.\",\n        duration: 3000,\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  return (\n    <div className=\"h-full flex-1 flex-col space-y-8 p-8\">\n      <div className=\"flex items-center justify-between space-y-2\">\n        <div>\n          <h2 className=\"text-2xl font-bold tracking-tight\">IMP Configurations</h2>\n          <p className=\"text-muted-foreground\">\n            Manage platform-wide theme variables and styling.\n          </p>\n        </div>\n        <div className=\"flex gap-2\">\n          <Button onClick={handleReset} variant=\"outline\">\n            <RotateCcw className=\"mr-2 h-4 w-4\" />\n            Reset Theme\n          </Button>\n          <Button onClick={handleSave}>Save Configuration</Button>\n        </div>\n      </div>\n\n      <Card>\n        <CardHeader>\n          <CardTitle>Import Theme CSS</CardTitle>\n          <CardDescription>\n            Paste your CSS theme code below to automatically populate all fields\n          </CardDescription>\n        </CardHeader>\n        <CardContent className=\"space-y-4\">\n          <Textarea\n            placeholder=\"Paste your CSS theme here (including :root and .dark blocks)...\"\n            value={cssInput}\n            onChange={(e) => setCssInput(e.target.value)}\n            className=\"font-mono text-xs min-h-[200px]\"\n          />\n          <Button\n            onClick={handleImportCss}\n            disabled={!cssInput.trim() || isImporting}\n            className=\"relative\"\n          >\n            {isImporting ? (\n              <>\n                <span className=\"opacity-0\">Import Theme</span>\n                <div className=\"absolute inset-0 flex items-center justify-center\">\n                  <div className=\"h-4 w-4 animate-spin rounded-full border-2 border-current border-t-transparent\" />\n                </div>\n              </>\n            ) : (\n              \"Import Theme\"\n            )}\n          </Button>\n        </CardContent>\n      </Card>\n\n      <div className=\"space-y-4\">\n        <Collapsible open={lightOpen} onOpenChange={setLightOpen}>\n          <Card>\n            <CollapsibleTrigger asChild>\n              <CardHeader className=\"cursor-pointer hover:bg-accent/50 transition-colors\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      Light Theme Variables\n                      {Object.keys(lightTheme).length > 0 && (\n                        <CheckCircle2 className=\"h-4 w-4 text-primary\" />\n                      )}\n                    </CardTitle>\n                    <CardDescription>\n                      Configure CSS variables for the light theme\n                    </CardDescription>\n                  </div>\n                  <ChevronDown className={`h-5 w-5 transition-transform ${lightOpen ? 'rotate-180' : ''}`} />\n                </div>\n              </CardHeader>\n            </CollapsibleTrigger>\n            <CollapsibleContent>\n              <CardContent className=\"grid gap-4 md:grid-cols-2 pt-0\">\n                {Object.entries(lightTheme).map(([key, value]) => (\n                  <div key={key} className=\"space-y-2\">\n                    <Label htmlFor={`light-${key}`} className=\"text-xs font-mono\">\n                      {key}\n                    </Label>\n                    <Input\n                      id={`light-${key}`}\n                      value={value as string}\n                      onChange={(e) => handleLightThemeChange(key, e.target.value)}\n                      className=\"font-mono text-xs\"\n                    />\n                  </div>\n                ))}\n              </CardContent>\n            </CollapsibleContent>\n          </Card>\n        </Collapsible>\n\n        <Collapsible open={darkOpen} onOpenChange={setDarkOpen}>\n          <Card>\n            <CollapsibleTrigger asChild>\n              <CardHeader className=\"cursor-pointer hover:bg-accent/50 transition-colors\">\n                <div className=\"flex items-center justify-between\">\n                  <div>\n                    <CardTitle className=\"flex items-center gap-2\">\n                      Dark Theme Variables\n                      {Object.keys(darkTheme).length > 0 && (\n                        <CheckCircle2 className=\"h-4 w-4 text-primary\" />\n                      )}\n                    </CardTitle>\n                    <CardDescription>\n                      Configure CSS variables for the dark theme\n                    </CardDescription>\n                  </div>\n                  <ChevronDown className={`h-5 w-5 transition-transform ${darkOpen ? 'rotate-180' : ''}`} />\n                </div>\n              </CardHeader>\n            </CollapsibleTrigger>\n            <CollapsibleContent>\n              <CardContent className=\"grid gap-4 md:grid-cols-2 pt-0\">\n                {Object.entries(darkTheme).map(([key, value]) => (\n                  <div key={key} className=\"space-y-2\">\n                    <Label htmlFor={`dark-${key}`} className=\"text-xs font-mono\">\n                      {key}\n                    </Label>\n                    <Input\n                      id={`dark-${key}`}\n                      value={value as string}\n                      onChange={(e) => handleDarkThemeChange(key, e.target.value)}\n                      className=\"font-mono text-xs\"\n                    />\n                  </div>\n                ))}\n              </CardContent>\n            </CollapsibleContent>\n          </Card>\n        </Collapsible>\n      </div>\n    </div>\n  );\n}\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className,\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n","\"use client\";\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\";\n\nconst Collapsible = CollapsiblePrimitive.Root;\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger;\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent;\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent };\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n","\"use client\";\n\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface TextareaProps\n  extends React.TextareaHTMLAttributes<HTMLTextAreaElement> {}\n\nconst Textarea = React.forwardRef<HTMLTextAreaElement, TextareaProps>(\n  ({ className, ...props }, ref) => {\n    return (\n      <textarea\n        className={cn(\n          \"flex min-h-[80px] w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nTextarea.displayName = \"Textarea\";\n\nexport { Textarea };\n","\"use client\";\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\";\n\nimport type { ToastActionElement, ToastProps } from \"@/components/ui/toast\";\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t,\n        ),\n      };\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t,\n        ),\n      };\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, \"id\">;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    });\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id });\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss();\n      },\n    },\n  });\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  };\n}\n\nexport { useToast, toast };\n"],"names":["Promise","resolve","then","__webpack_require__","bind","ConfigurationPage","lightTheme","setLightTheme","useState","darkTheme","setDarkTheme","cssInput","setCssInput","lightOpen","setLightOpen","darkOpen","setDarkOpen","isImporting","setIsImporting","configId","setConfigId","toast","useToast","data","loading","refetch","useQuery","GET_PLATFORM_CONFIGURATIONS","createConfig","useMutation","CREATE_PLATFORM_CONFIGURATION","updateConfig","UPDATE_PLATFORM_CONFIGURATION","useEffect","themeConfig","platform_configurationsPagination","items","find","config","config_key","id","config_value","light","dark","handleLightThemeChange","key","value","handleDarkThemeChange","parseCssTheme","rootMatch","css","match","RegExp","variables","rootContent","forEach","valueParts","variable","split","join","trim","darkMatch","darkContent","handleSave","configData","description","result","platform_configurationsCreateOne","item","title","duration","error","console","variant","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","jsx","h2","p","Button","onClick","RotateCcw","Card","CardHeader","CardTitle","CardDescription","CardContent","Textarea","placeholder","onChange","e","target","parsed","setTimeout","Object","keys","length","concat","disabled","Fragment","span","Collapsible","open","onOpenChange","CollapsibleTrigger","asChild","CheckCircle2","ChevronDown","CollapsibleContent","entries","map","param","Label","htmlFor","Input","React","ref","props","cn","displayName","h3","CardFooter","CollapsiblePrimitive","type","input","labelVariants","cva","LabelPrimitive","textarea","count","toastTimeouts","Map","addToRemoveQueue","has","toastId","timeout","delete","dispatch","set","reducer","state","action","toasts","slice","t","undefined","filter","listeners","memoryState","listener","Number","MAX_SAFE_INTEGER","toString","dismiss","update","setState","push","index","indexOf","splice"],"sourceRoot":""}