{"version":3,"file":"static/chunks/app/(application)/dashboard/page-2436e355871758ba.js","mappings":"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","sources":["webpack://_N_E/?1ce9","webpack://_N_E/./components/dashboard/summary-cards.tsx","webpack://_N_E/./app/(application)/dashboard/page.tsx","webpack://_N_E/./components/ui/calendar.tsx","webpack://_N_E/./components/dashboard/date-range-selector.tsx","webpack://_N_E/./components/dashboard/donut-chart.tsx","webpack://_N_E/./components/dashboard/time-series-chart.tsx","webpack://_N_E/./components/ui/card.tsx","webpack://_N_E/./components/ui/chart.tsx","webpack://_N_E/./components/ui/popover.tsx","webpack://_N_E/./components/ui/select.tsx","webpack://_N_E/./components/ui/skeleton.tsx","webpack://_N_E/./components/ui/use-toast.ts","webpack://_N_E/./types/enums/statistics.ts"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/daniel.claessen/Desktop/Projects/exulu/frontend/app/(application)/dashboard/page.tsx\");\n","\"use client\";\n\nimport { DocumentNode, useQuery } from \"@apollo/client\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { subDays, subHours } from \"date-fns\";\nimport { TrendingUp, TrendingDown, Minus } from \"lucide-react\";\nimport { useMemo } from \"react\";\n\ninterface SummaryCardProps {\n  title: string;\n  currentValue: number;\n  previousValue: number;\n  isLoading?: boolean;\n}\n\nfunction SummaryCardElement({ title, currentValue, previousValue, isLoading }: SummaryCardProps) {\n  if (isLoading) {\n    return (\n      <Card className=\"animate-pulse\">\n        <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-3\">\n          <CardTitle className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">{title}</CardTitle>\n          <div className=\"p-2 rounded-full\">\n            <div className=\"h-4 w-4 rounded\" />\n          </div>\n        </CardHeader>\n        <CardContent>\n          <Skeleton className=\"h-8 w-24 mb-3\" />\n          <div className=\"space-y-1\">\n            <Skeleton className=\"h-3 w-28\" />\n            <Skeleton className=\"h-3 w-20\" />\n          </div>\n        </CardContent>\n      </Card>\n    );\n  }\n\n  const percentageChange = previousValue > 0 ? ((currentValue - previousValue) / previousValue) * 100 : 0;\n  const isPositive = percentageChange > 0;\n  const isNeutral = percentageChange === 0;\n\n  const TrendIcon = isNeutral ? Minus : isPositive ? TrendingUp : TrendingDown;\n  const trendColor = isNeutral ? \"text-muted-foreground\" : isPositive ? \"text-green-600\" : \"text-red-600\";\n\n  return (\n    <Card className=\"hover:shadow-lg transition-all duration-300 hover:-translate-y-1\">\n      <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-3\">\n        <CardTitle className=\"text-sm font-medium text-slate-700 dark:text-slate-300\">{title}</CardTitle>\n        <div className={`p-2 rounded-full ${isNeutral ? 'bg-gray-200 dark:bg-gray-700' : isPositive ? 'bg-green-100 dark:bg-green-900/30' : 'bg-red-100 dark:bg-red-900/30'}`}>\n          <TrendIcon className={`h-4 w-4 ${trendColor}`} />\n        </div>\n      </CardHeader>\n      <CardContent>\n        <div className=\"text-3xl font-bold bg-gradient-to-r from-slate-900 to-slate-700 dark:from-slate-100 dark:to-slate-300 bg-clip-text text-transparent mb-2\">\n          {currentValue.toLocaleString()}\n        </div>\n        <p className=\"text-xs text-slate-600 dark:text-slate-400\">\n          <span className={`font-medium ${trendColor}`}>\n            {isNeutral ? \"No change\" : `${Math.abs(percentageChange).toFixed(1)}% ${isPositive ? \"increase\" : \"decrease\"}`}\n          </span>\n          <br />\n          <span className=\"text-slate-500 dark:text-slate-500\">\n            vs 7-day avg: {previousValue.toLocaleString()}\n          </span>\n        </p>\n      </CardContent>\n    </Card>\n  );\n}\n\nexport function SummaryCard({\n  query,\n  entity,\n  title\n}: {\n  query: DocumentNode,\n  entity: \"agent_sessions\" | \"jobs\" | \"tracking\",\n  title: string\n}) {\n  // Stabilize dates to prevent constant re-renders\n  const dates = useMemo(() => {\n    const now = new Date();\n    return {\n      now: now.toISOString(),\n      twentyFourHoursAgo: subHours(now, 24).toISOString(),\n      sevenDaysAgo: subDays(now, 7).toISOString()\n    };\n  }, []); // Empty dependency array means this only runs once\n\n  // 24h data\n  const { data: data24h, loading: loading24h } = useQuery(query, {\n    variables: { from: dates.twentyFourHoursAgo, to: dates.now }\n  });\n\n  // 7-day data (for average calculation)\n  const { data: data7d, loading: loading7d } = useQuery(query, {\n    variables: { from: dates.sevenDaysAgo, to: dates.now }\n  });\n\n\n  // Calculate totals\n  const getTotal = (data: any) => {\n    if (!data || !Array.isArray(data)) return 0;\n    return data.reduce((sum: number, item: any) => sum + (item.count || 0), 0);\n  };\n\n  const twentyFourHourTotal = getTotal(data24h?.[`${entity}Statistics`]);\n\n  // Calculate 7-day averages (divide by 7 for daily average)\n  const sevenDayAverage = Math.round(getTotal(data7d?.[`${entity}Statistics`]) / 7);\n\n  const isLoading = \n    loading24h\n    loading7d\n\n  return (\n      <SummaryCardElement\n        title={`${title} (24h)`}\n        currentValue={twentyFourHourTotal}\n        previousValue={sevenDayAverage}\n        isLoading={isLoading}\n      />\n  );\n}","\"use client\";\n\nimport { subDays } from \"date-fns\";\nimport * as React from \"react\";\nimport { useState } from \"react\";\nimport { DateRange } from \"react-day-picker\";\nimport { STATISTICS_TYPE, STATISTICS_TYPE_ENUM } from \"@/types/enums/statistics\";\nimport { SummaryCard } from \"@/components/dashboard/summary-cards\";\nimport { DateRangeSelector } from \"@/components/dashboard/date-range-selector\";\nimport { TimeSeriesChart } from \"@/components/dashboard/time-series-chart\";\nimport { DonutChart } from \"@/components/dashboard/donut-chart\";\nimport {\n    GET_AGENT_SESSIONS_STATISTICS,\n    GET_WORKFLOW_RUNS_STATISTICS,\n    GET_AGENT_RUN_STATISTICS,\n    GET_FUNCTION_CALLS_STATISTICS,\n    GET_TOKEN_USAGE_STATISTICS\n} from \"@/queries/queries\";\n\nexport const dynamic = \"force-dynamic\";\n\nexport default function DashboardPage() {\n    const [dateRange, setDateRange] = useState<DateRange | undefined>({\n        from: subDays(new Date(), 14),\n        to: new Date()\n    });\n\n    const [selectedType, setSelectedType] = useState<STATISTICS_TYPE>(\"AGENT_RUN\");\n    const [unit, setUnit] = useState<\"tokens\" | \"count\">(\"count\");\n    const [groupBy, setGroupBy] = useState<string>(\"label\");\n\n    return (\n        <div className=\"flex-1 flex flex-col p-8 pt-6 h-screen\">\n            {/* Header Section */}\n            <div className=\"flex items-center justify-between mb-8\">\n                <div className=\"space-y-2\">\n                    <h2 className=\"text-4xl font-bold tracking-tight bg-clip-text\">\n                        Analytics Dashboard\n                    </h2>\n                    <p className=\"text-lg\">\n                        Monitor your AI workflows and performance metrics.\n                    </p>\n                </div>\n\n                {/* Date Range Selector - moved to header */}\n                <div className=\"flex items-center space-x-2\">\n                    <DateRangeSelector\n                        dateRange={dateRange}\n                        onDateRangeChange={setDateRange}\n                        maxDays={30}\n                    />\n                </div>\n            </div>\n\n            {/* Summary Cards - Enhanced with better spacing */}\n            <div className=\"mb-8\">\n                <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-5\">\n                    <SummaryCard query={GET_AGENT_SESSIONS_STATISTICS} entity=\"agent_sessions\" title=\"Agent Sessions\" />\n                    <SummaryCard query={GET_AGENT_RUN_STATISTICS} entity=\"tracking\" title=\"Agent Calls\" />\n                    <SummaryCard query={GET_TOKEN_USAGE_STATISTICS} entity=\"tracking\" title=\"Token Usage\" />\n                    <SummaryCard query={GET_WORKFLOW_RUNS_STATISTICS} entity=\"jobs\" title=\"Workflow Runs\" />\n                    <SummaryCard query={GET_FUNCTION_CALLS_STATISTICS} entity=\"tracking\" title=\"Function Calls\" />\n                </div>\n            </div>\n\n            {/* Charts Grid - Improved layout and spacing */}\n            <div className=\"flex-1 grid gap-6 md:grid-cols-3 min-h-0\">\n                <div className=\"rounded-lg border md:col-span-2 p-6 flex flex-col\">\n                    <TimeSeriesChart\n                        dateRange={dateRange}\n                        selectedType={selectedType}\n                        onTypeChange={setSelectedType}\n                        onUnitChange={setUnit}\n                        unit={unit}\n                        dataTypes={[\n                            STATISTICS_TYPE_ENUM.CONTEXT_RETRIEVE,\n                            STATISTICS_TYPE_ENUM.SOURCE_UPDATE,\n                            STATISTICS_TYPE_ENUM.EMBEDDER_UPSERT,\n                            STATISTICS_TYPE_ENUM.EMBEDDER_GENERATE,\n                            STATISTICS_TYPE_ENUM.EMBEDDER_DELETE,\n                            STATISTICS_TYPE_ENUM.WORKFLOW_RUN,\n                            STATISTICS_TYPE_ENUM.CONTEXT_UPSERT,\n                            STATISTICS_TYPE_ENUM.TOOL_CALL,\n                            STATISTICS_TYPE_ENUM.AGENT_RUN\n                        ]}\n                    />\n                </div>\n                <div className=\"rounded-lg border p-6 flex flex-col\">\n                    <DonutChart\n                        groupByOptions={[\n                            { value: 'label', label: 'Label' },\n                            { value: 'user', label: 'User' },\n                            { value: 'role', label: 'Role' }\n                        ]}\n                        dateRange={dateRange}\n                        selectedType={selectedType}\n                        groupBy={groupBy}\n                        onGroupByChange={setGroupBy}\n                    />\n                </div>\n            </div>\n        </div>\n    );\n}\n","\"use client\";\n\nimport { ChevronLeft, ChevronRight } from \"lucide-react\";\nimport * as React from \"react\";\nimport { DayPicker } from \"react-day-picker\";\n\nimport { buttonVariants } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\nexport type CalendarProps = React.ComponentProps<typeof DayPicker>;\n\nfunction Calendar({\n  className,\n  classNames,\n  showOutsideDays = true,\n  ...props\n}: CalendarProps) {\n  return (\n    <DayPicker\n      showOutsideDays={showOutsideDays}\n      className={cn(\"p-3\", className)}\n      classNames={{\n        months: \"flex flex-col sm:flex-row space-y-4 sm:space-x-4 sm:space-y-0\",\n        month: \"space-y-4\",\n        caption: \"flex justify-center pt-1 relative items-center\",\n        caption_label: \"text-sm font-medium\",\n        nav: \"space-x-1 flex items-center\",\n        nav_button: cn(\n          buttonVariants({ variant: \"outline\" }),\n          \"h-7 w-7 bg-transparent p-0 opacity-50 hover:opacity-100\",\n        ),\n        nav_button_previous: \"absolute left-1\",\n        nav_button_next: \"absolute right-1\",\n        table: \"w-full border-collapse space-y-1\",\n        head_row: \"flex\",\n        head_cell:\n          \"text-muted-foreground rounded-md w-9 font-normal text-[0.8rem]\",\n        row: \"flex w-full mt-2\",\n        cell: \"h-9 w-9 text-center text-sm p-0 relative [&:has([aria-selected].day-range-end)]:rounded-r-md [&:has([aria-selected].day-outside)]:bg-accent/50 [&:has([aria-selected])]:bg-accent first:[&:has([aria-selected])]:rounded-l-md last:[&:has([aria-selected])]:rounded-r-md focus-within:relative focus-within:z-20\",\n        day: cn(\n          buttonVariants({ variant: \"ghost\" }),\n          \"h-9 w-9 p-0 font-normal aria-selected:opacity-100\",\n        ),\n        day_range_end: \"day-range-end\",\n        day_selected:\n          \"bg-primary text-primary-foreground hover:bg-primary hover:text-primary-foreground focus:bg-primary focus:text-primary-foreground\",\n        day_today: \"bg-accent text-accent-foreground\",\n        day_outside:\n          \"day-outside text-muted-foreground opacity-50 aria-selected:bg-accent/50 aria-selected:text-muted-foreground aria-selected:opacity-30\",\n        day_disabled: \"text-muted-foreground opacity-50\",\n        day_range_middle:\n          \"aria-selected:bg-accent aria-selected:text-accent-foreground\",\n        day_hidden: \"invisible\",\n        ...classNames,\n      }}\n      components={{\n        IconLeft: ({ ...props }) => <ChevronLeft className=\"size-4\" />,\n        IconRight: ({ ...props }) => <ChevronRight className=\"size-4\" />,\n      }}\n      {...props}\n    />\n  );\n}\nCalendar.displayName = \"Calendar\";\n\nexport { Calendar };\n","\"use client\";\n\nimport * as React from \"react\";\nimport { CalendarIcon } from \"@radix-ui/react-icons\";\nimport { format, subDays, differenceInDays, addDays } from \"date-fns\";\nimport { DateRange } from \"react-day-picker\";\n\nimport { cn } from \"@/lib/utils\";\nimport { Button } from \"@/components/ui/button\";\nimport { Calendar } from \"@/components/ui/calendar\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport {\n  Popover,\n  PopoverContent,\n  PopoverTrigger,\n} from \"@/components/ui/popover\";\n\ninterface DateRangeSelectorProps {\n  dateRange: DateRange | undefined;\n  maxDays?: number;\n  onDateRangeChange: (dateRange: DateRange | undefined) => void;\n  className?: string;\n}\n\nexport function DateRangeSelector({ dateRange, onDateRangeChange, className, maxDays = 30 }: DateRangeSelectorProps) {\n  const { toast } = useToast();\n\n  const handleDateRangeChange = (newRange: DateRange | undefined) => {\n    if (newRange?.from && newRange?.to) {\n      const daysDifference = differenceInDays(newRange.to, newRange.from);\n      if (daysDifference > maxDays) {\n        // Show toast notification\n        toast({\n          title: \"Date range too large\",\n          description: `Please select a date range of ${maxDays} days or less.`,\n          variant: \"destructive\",\n        });\n        return;\n      }\n    }\n    onDateRangeChange(newRange);\n  };\n\n  // Disable dates that would create a range > maxDays\n  const disabledDays = React.useMemo(() => {\n    if (!dateRange?.from) return [];\n    \n    const fromDate = dateRange.from;\n    const minDate = addDays(fromDate, -maxDays);\n    const maxDate = addDays(fromDate, maxDays);\n    \n    return [\n      { before: minDate },\n      { after: maxDate }\n    ];\n  }, [dateRange?.from, maxDays]);\n\n  return (\n    <div className={cn(\"grid gap-2\", className)}>\n      <Popover>\n        <PopoverTrigger asChild>\n          <Button\n            id=\"date\"\n            variant={\"outline\"}\n            className={cn(\n              \"w-[260px] justify-start text-left font-normal\",\n              !dateRange && \"text-muted-foreground\"\n            )}\n          >\n            <CalendarIcon className=\"mr-2 h-4 w-4\" />\n            {dateRange?.from ? (\n              dateRange.to ? (\n                <>\n                  {format(dateRange.from, \"LLL dd, y\")} -{\" \"}\n                  {format(dateRange.to, \"LLL dd, y\")}\n                </>\n              ) : (\n                format(dateRange.from, \"LLL dd, y\")\n              )\n            ) : (\n              <span>Pick a date range</span>\n            )}\n          </Button>\n        </PopoverTrigger>\n        <PopoverContent className=\"w-auto p-0\" align=\"end\">\n          <Calendar\n            initialFocus\n            mode=\"range\"\n            defaultMonth={dateRange?.from}\n            selected={dateRange}\n            onSelect={handleDateRangeChange}\n            disabled={disabledDays}\n            numberOfMonths={2}\n          />\n          <div className=\"p-3 pt-0 text-xs text-muted-foreground border-t\">\n            Maximum range: {maxDays} days\n          </div>\n        </PopoverContent>\n      </Popover>\n    </div>\n  );\n}","\"use client\";\n\nimport * as React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { GET_DONUT_STATISTICS } from \"@/queries/queries\";\nimport { STATISTICS_TYPE } from \"@/types/enums/statistics\";\nimport { PieChart, Pie, Cell } from 'recharts';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent, type ChartConfig } from \"@/components/ui/chart\";\nimport { DateRange } from \"react-day-picker\";\n\ninterface DonutChartProps {\n  groupByOptions: { label: string, value: string }[];\n  dateRange: DateRange | undefined;\n  selectedType: STATISTICS_TYPE;\n  groupBy: string;\n  onGroupByChange: (groupBy: string) => void;\n}\n\nconst CHART_COLORS = [\n  \"hsl(var(--chart-1))\",\n  \"hsl(var(--chart-2))\",\n  \"hsl(var(--chart-3))\",\n  \"hsl(var(--chart-4))\",\n  \"hsl(var(--chart-5))\",\n  \"hsl(var(--chart-6))\",\n  \"hsl(var(--chart-7))\",\n  \"hsl(var(--chart-8))\",\n  \"hsl(var(--chart-9))\",\n  \"hsl(var(--chart-10))\"\n];\n\nfunction transformGroupValue(value: string): string {\n  if (!value) return 'Unknown';\n\n  // Handle various formats and make them user-friendly\n  return value\n    .replace(/_/g, ' ')\n    .split(' ')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    .join(' ');\n}\n\nexport function DonutChart({ groupByOptions, dateRange, selectedType, groupBy, onGroupByChange }: DonutChartProps) {\n  const { data, loading, error } = useQuery(GET_DONUT_STATISTICS, {\n    variables: {\n      type: selectedType,\n      groupBy,\n      from: dateRange?.from?.toISOString(),\n      to: dateRange?.to?.toISOString()\n    },\n    skip: !dateRange?.from || !dateRange?.to\n  });\n\n  const { chartData, chartConfig } = React.useMemo(() => {\n    if (!data?.trackingStatistics) return { chartData: [], chartConfig: {} };\n\n    const sortedData = data.trackingStatistics\n      .map((item: any, index: number) => ({\n        name: transformGroupValue(item.group),\n        value: item.count,\n        fill: CHART_COLORS[index % CHART_COLORS.length]\n      }))\n      .sort((a: any, b: any) => b.value - a.value); // Sort by count descending\n\n    const config: ChartConfig = sortedData.reduce((acc: any, item: any, index: number) => {\n      acc[item.name] = {\n        label: item.name,\n        color: CHART_COLORS[index % CHART_COLORS.length],\n      };\n      return acc;\n    }, {});\n\n    return { chartData: sortedData, chartConfig: config };\n  }, [data]);\n\n  const renderCustomLabel = ({ cx, cy, midAngle, innerRadius, outerRadius, percent, index }: any) => {\n    if (percent < 0.05) return null; // Don't show labels for slices less than 5%\n\n    const RADIAN = Math.PI / 180;\n    const radius = innerRadius + (outerRadius - innerRadius) * 0.5;\n    const x = cx + radius * Math.cos(-midAngle * RADIAN);\n    const y = cy + radius * Math.sin(-midAngle * RADIAN);\n\n    return (\n      <text\n        x={x}\n        y={y}\n        fill=\"black\"\n        textAnchor={x > cx ? 'start' : 'end'}\n        dominantBaseline=\"central\"\n        fontSize=\"12\"\n        fontWeight=\"600\"\n        paintOrder=\"stroke\"\n      >\n        {`${(percent * 100).toFixed(0)}%`}\n      </text>\n    );\n  };\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-xl font-semibold\">Distribution</h3>\n        {groupByOptions.length > 0 && (\n          <div className=\"w-full max-w-[150px]\">\n            <Select value={groupBy} onValueChange={onGroupByChange}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Group by\" />\n              </SelectTrigger>\n              <SelectContent>\n                {groupByOptions.map((option) => (\n                  <SelectItem key={option.value} value={option.value}>\n                    {option.label}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n        )}\n      </div>\n\n      <div className=\"flex-1 min-h-0\">\n        {loading ? (\n          <div className=\"space-y-4 h-full\">\n            <Skeleton className=\"h-full w-full\" />\n          </div>\n        ) : error ? (\n          <div className=\"flex items-center justify-center h-full text-red-500\">\n            Error loading distribution data: {error.message}\n          </div>\n        ) : chartData.length === 0 ? (\n          <div className=\"flex items-center justify-center h-full text-muted-foreground text-center\">\n            No data available for the selected date range, type, and grouping.\n          </div>\n        ) : (\n          <ChartContainer config={chartConfig} className=\"h-full w-full\">\n            <PieChart>\n              <defs>\n                {chartData.map((entry: any, index: number) => (\n                  <radialGradient\n                    key={`gradient-${index}`}\n                    id={`gradient-${entry.name.replace(/\\s+/g, '-')}`}\n                    cx=\"50%\"\n                    cy=\"50%\"\n                    r=\"50%\"\n                  >\n                    <stop\n                      offset=\"0%\"\n                      stopColor={entry.fill}\n                      stopOpacity={1}\n                    />\n                    <stop\n                      offset=\"100%\"\n                      stopColor={entry.fill}\n                      stopOpacity={0.8}\n                    />\n                  </radialGradient>\n                ))}\n              </defs>\n              <Pie\n                data={chartData}\n                cx=\"50%\"\n                cy=\"50%\"\n                labelLine={false}\n                label={renderCustomLabel}\n                outerRadius=\"75%\"\n                innerRadius=\"45%\"\n                dataKey=\"value\"\n                strokeWidth={3}\n              >\n                {chartData.map((entry: any, index: number) => (\n                  <Cell\n                    key={`cell-${index}`}\n                    fill={`url(#gradient-${entry.name.replace(/\\s+/g, '-')})`}\n                  />\n                ))}\n              </Pie>\n              <ChartTooltip\n                content={\n                  <ChartTooltipContent\n                    nameKey=\"name\"\n                    hideLabel\n                    formatter={(value: any, name: any) => [\n                      typeof value === 'number' ? value.toLocaleString() : value,\n                      \" \" + String(name)\n                    ]}\n                  />\n                }\n              />\n            </PieChart>\n          </ChartContainer>\n        )}\n      </div>\n    </div>\n  );\n}","\"use client\";\n\nimport * as React from \"react\";\nimport { useQuery } from \"@apollo/client\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { GET_TIME_SERIES_STATISTICS } from \"@/queries/queries\";\nimport { STATISTICS_TYPE } from \"@/types/enums/statistics\";\nimport { XAxis, YAxis, CartesianGrid, Area, AreaChart } from 'recharts';\nimport { ChartContainer, ChartTooltip, ChartTooltipContent, ChartLegend, ChartLegendContent, type ChartConfig } from \"@/components/ui/chart\";\nimport { format, eachDayOfInterval, startOfDay } from \"date-fns\";\nimport { DateRange } from \"react-day-picker\";\n\ninterface TimeSeriesChartProps {\n  dateRange: DateRange | undefined;\n  selectedType: STATISTICS_TYPE;\n  onTypeChange: (type: STATISTICS_TYPE) => void;\n  onUnitChange: (unit: 'tokens' | 'count') => void;\n  dataTypes: string[];\n  unit: 'tokens' | 'count';\n}\n\nfunction transformEnumToLabel(enumValue: string): string {\n  return enumValue\n    .split('_')\n    .map(word => word.charAt(0).toUpperCase() + word.slice(1).toLowerCase())\n    .join(' ');\n}\n\nconst chartConfig = {\n  count: {\n    label: \"Count\",\n    color: \"hsl(var(--muted-foreground))\",\n  },\n} satisfies ChartConfig\n\nexport function TimeSeriesChart({ dataTypes, dateRange, selectedType, onTypeChange, onUnitChange, unit }: TimeSeriesChartProps) {\n  const { data, loading, error } = useQuery(GET_TIME_SERIES_STATISTICS, {\n    variables: {\n      type: selectedType,\n      name: unit,\n      from: dateRange?.from?.toISOString(),\n      to: dateRange?.to?.toISOString()\n    },\n    skip: !dateRange?.from || !dateRange?.to\n  });\n\n  const chartData = React.useMemo(() => {\n    if (!data?.trackingStatistics || !dateRange?.from || !dateRange?.to) return [];\n\n    // Transform API data into a map for quick lookup\n    const dataMap = new Map();\n    data.trackingStatistics.forEach((item: any) => {\n      const dateObj = new Date(typeof item.group === 'number' ? item.group : Number(item.group));\n      const dateKey = format(startOfDay(dateObj), 'yyyy-MM-dd');\n      dataMap.set(dateKey, item.count);\n    });\n\n    // Generate all dates in the range\n    const allDates = eachDayOfInterval({\n      start: startOfDay(dateRange.from),\n      end: startOfDay(dateRange.to)\n    });\n\n    // Fill gaps with zero values\n    return allDates.map(date => {\n      const dateKey = format(date, 'yyyy-MM-dd');\n      const count = dataMap.get(dateKey) || 0;\n\n      return {\n        date: date.getTime(),\n        count: count,\n        formattedDate: format(date, 'MMM dd'),\n        dateObj: date\n      };\n    });\n  }, [data, dateRange]);\n\n  return (\n    <div className=\"flex flex-col h-full\">\n      <div className=\"flex items-center justify-between mb-4\">\n        <h3 className=\"text-xl font-semibold\">Time Series Analytics</h3>\n        <div className=\"flex items-center gap-2\">\n          <div className=\"w-[150px]\">\n            <Select value={selectedType} onValueChange={(value) => onTypeChange(value as STATISTICS_TYPE)}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select data type\" />\n              </SelectTrigger>\n              <SelectContent>\n                {dataTypes?.map((type) => (\n                  <SelectItem key={type} value={type}>\n                    {transformEnumToLabel(type) + \" \"}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>\n          <div className=\"w-[150px]\">\n            <Select value={unit} onValueChange={(value) => onUnitChange(value as 'tokens' | 'count')}>\n              <SelectTrigger>\n                <SelectValue placeholder=\"Select unit\" />\n              </SelectTrigger>\n              <SelectContent>\n                <SelectItem value=\"count\">Count</SelectItem>\n                <SelectItem value=\"tokens\">Tokens</SelectItem>\n              </SelectContent>\n            </Select>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"flex-1 min-h-0\">\n        {loading ? (\n          <div className=\"space-y-4 h-full\">\n            <Skeleton className=\"h-full w-full\" />\n          </div>\n        ) : error ? (\n          <div className=\"flex items-center justify-center h-full text-red-500\">\n            Error loading time series data: {error.message}\n          </div>\n        ) : chartData.length === 0 ? (\n          <div className=\"flex items-center justify-center h-full text-muted-foreground\">\n            No data available for the selected date range and type\n          </div>\n        ) : (\n          <ChartContainer config={chartConfig} className=\"h-full w-full\">\n            <AreaChart data={chartData}>\n              <defs>\n                <linearGradient id=\"fillCount\" x1=\"0\" y1=\"0\" x2=\"0\" y2=\"1\">\n                  <stop\n                    offset=\"5%\"\n                    stopColor=\"hsl(var(--muted-foreground))\"\n                    stopOpacity={0.3}\n                  />\n                  <stop\n                    offset=\"95%\"\n                    stopColor=\"hsl(var(--muted-foreground))\"\n                    stopOpacity={0.05}\n                  />\n                </linearGradient>\n                <linearGradient id=\"strokeCount\" x1=\"0\" y1=\"0\" x2=\"1\" y2=\"0\">\n                  <stop\n                    offset=\"0%\"\n                    stopColor=\"hsl(var(--muted-foreground))\"\n                    stopOpacity={0.8}\n                  />\n                  <stop\n                    offset=\"100%\"\n                    stopColor=\"hsl(var(--muted-foreground))\"\n                    stopOpacity={0.6}\n                  />\n                </linearGradient>\n              </defs>\n              <CartesianGrid\n                strokeDasharray=\"3 3\"\n                stroke=\"hsl(var(--muted-foreground))\"\n                strokeOpacity={0.3}\n                vertical={false}\n              />\n              <XAxis\n                dataKey=\"formattedDate\"\n                tick={{ fontSize: 12, fill: \"hsl(var(--muted-foreground))\" }}\n                tickLine={{ stroke: \"hsl(var(--muted-foreground))\", strokeOpacity: 0.5 }}\n                axisLine={{ stroke: \"hsl(var(--muted-foreground))\", strokeOpacity: 0.5 }}\n              />\n              <YAxis\n                tick={{ fontSize: 12, fill: \"hsl(var(--muted-foreground))\" }}\n                tickLine={{ stroke: \"hsl(var(--muted-foreground))\", strokeOpacity: 0.5 }}\n                axisLine={{ stroke: \"hsl(var(--muted-foreground))\", strokeOpacity: 0.5 }}\n              />\n              <ChartTooltip\n                labelFormatter={(label: any, payload: any) => {\n                  if (payload && payload[0]) {\n                    return format(payload[0].payload.dateObj, 'PPP') + \" \";\n                  }\n                  return label;\n                }}\n                content={<ChartTooltipContent\n                  nameKey=\"name\"\n                  hideLabel\n                  formatter={(value: any, name: any) => [\n                    typeof value === 'number' ? value.toLocaleString() : value,\n                    \" \" + String(name)\n                  ]}\n                />}\n              />\n              <ChartLegend content={<ChartLegendContent />} />\n              <Area\n                type=\"monotone\"\n                dataKey=\"count\"\n                stroke=\"url(#strokeCount)\"\n                strokeWidth={3}\n                fill=\"url(#fillCount)\"\n                fillOpacity={0.6}\n                dot={{\n                  fill: \"hsl(var(--muted-foreground))\",\n                  strokeWidth: 2,\n                  r: 4,\n                  strokeOpacity: 0.8\n                }}\n                activeDot={{\n                  r: 6,\n                  strokeWidth: 2,\n                  fill: \"hsl(var(--background))\",\n                  stroke: \"hsl(var(--muted-foreground))\",\n                  strokeOpacity: 1\n                }}\n                name={transformEnumToLabel(selectedType)}\n              />\n            </AreaChart>\n          </ChartContainer>\n        )}\n      </div>\n    </div>\n  );\n}","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className,\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n","\"use client\"\n\nimport * as React from \"react\"\nimport * as RechartsPrimitive from \"recharts\"\n\nimport { cn } from \"@/lib/utils\"\n\n// Format: { THEME_NAME: CSS_SELECTOR }\nconst THEMES = { light: \"\", dark: \".dark\" } as const\n\nexport type ChartConfig = {\n  [k in string]: {\n    label?: React.ReactNode\n    icon?: React.ComponentType\n  } & (\n    | { color?: string; theme?: never }\n    | { color?: never; theme: Record<keyof typeof THEMES, string> }\n  )\n}\n\ntype ChartContextProps = {\n  config: ChartConfig\n}\n\nconst ChartContext = React.createContext<ChartContextProps | null>(null)\n\nfunction useChart() {\n  const context = React.useContext(ChartContext)\n\n  if (!context) {\n    throw new Error(\"useChart must be used within a <ChartContainer />\")\n  }\n\n  return context\n}\n\nconst ChartContainer = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> & {\n    config: ChartConfig\n    children: React.ComponentProps<\n      typeof RechartsPrimitive.ResponsiveContainer\n    >[\"children\"]\n  }\n>(({ id, className, children, config, ...props }, ref) => {\n  const uniqueId = React.useId()\n  const chartId = `chart-${id || uniqueId.replace(/:/g, \"\")}`\n\n  return (\n    <ChartContext.Provider value={{ config }}>\n      <div\n        data-chart={chartId}\n        ref={ref}\n        className={cn(\n          \"flex aspect-video justify-center text-xs [&_.recharts-cartesian-axis-tick_text]:fill-muted-foreground [&_.recharts-cartesian-grid_line[stroke='#ccc']]:stroke-border/50 [&_.recharts-curve.recharts-tooltip-cursor]:stroke-border [&_.recharts-dot[stroke='#fff']]:stroke-transparent [&_.recharts-layer]:outline-none [&_.recharts-polar-grid_[stroke='#ccc']]:stroke-border [&_.recharts-radial-bar-background-sector]:fill-muted [&_.recharts-rectangle.recharts-tooltip-cursor]:fill-muted [&_.recharts-reference-line_[stroke='#ccc']]:stroke-border [&_.recharts-sector[stroke='#fff']]:stroke-transparent [&_.recharts-sector]:outline-none [&_.recharts-surface]:outline-none\",\n          className\n        )}\n        {...props}\n      >\n        <ChartStyle id={chartId} config={config} />\n        <RechartsPrimitive.ResponsiveContainer>\n          {children}\n        </RechartsPrimitive.ResponsiveContainer>\n      </div>\n    </ChartContext.Provider>\n  )\n})\nChartContainer.displayName = \"Chart\"\n\nconst ChartStyle = ({ id, config }: { id: string; config: ChartConfig }) => {\n  const colorConfig = Object.entries(config).filter(\n    ([, config]) => config.theme || config.color\n  )\n\n  if (!colorConfig.length) {\n    return null\n  }\n\n  return (\n    <style\n      dangerouslySetInnerHTML={{\n        __html: Object.entries(THEMES)\n          .map(\n            ([theme, prefix]) => `\n${prefix} [data-chart=${id}] {\n${colorConfig\n  .map(([key, itemConfig]) => {\n    const color =\n      itemConfig.theme?.[theme as keyof typeof itemConfig.theme] ||\n      itemConfig.color\n    return color ? `  --color-${key}: ${color};` : null\n  })\n  .join(\"\\n\")}\n}\n`\n          )\n          .join(\"\\n\"),\n      }}\n    />\n  )\n}\n\nconst ChartTooltip = RechartsPrimitive.Tooltip\n\nconst ChartTooltipContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<typeof RechartsPrimitive.Tooltip> &\n    React.ComponentProps<\"div\"> & {\n      hideLabel?: boolean\n      hideIndicator?: boolean\n      indicator?: \"line\" | \"dot\" | \"dashed\"\n      nameKey?: string\n      labelKey?: string\n    }\n>(\n  (\n    {\n      active,\n      payload,\n      className,\n      indicator = \"dot\",\n      hideLabel = false,\n      hideIndicator = false,\n      label,\n      labelFormatter,\n      labelClassName,\n      formatter,\n      color,\n      nameKey,\n      labelKey,\n    },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    const tooltipLabel = React.useMemo(() => {\n      if (hideLabel || !payload?.length) {\n        return null\n      }\n\n      const [item] = payload\n      const key = `${labelKey || item?.dataKey || item?.name || \"value\"}`\n      const itemConfig = getPayloadConfigFromPayload(config, item, key)\n      const value =\n        !labelKey && typeof label === \"string\"\n          ? config[label as keyof typeof config]?.label || label\n          : itemConfig?.label\n\n      if (labelFormatter) {\n        return (\n          <div className={cn(\"font-medium\", labelClassName)}>\n            {labelFormatter(value, payload)}\n          </div>\n        )\n      }\n\n      if (!value) {\n        return null\n      }\n\n      return <div className={cn(\"font-medium\", labelClassName)}>{value}</div>\n    }, [\n      label,\n      labelFormatter,\n      payload,\n      hideLabel,\n      labelClassName,\n      config,\n      labelKey,\n    ])\n\n    if (!active || !payload?.length) {\n      return null\n    }\n\n    const nestLabel = payload.length === 1 && indicator !== \"dot\"\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"grid min-w-[8rem] items-start gap-1.5 rounded-lg border border-border/50 bg-background px-2.5 py-1.5 text-xs shadow-xl\",\n          className\n        )}\n      >\n        {!nestLabel ? tooltipLabel : null}\n        <div className=\"grid gap-1.5\">\n          {payload.map((item, index) => {\n            const key = `${nameKey || item.name || item.dataKey || \"value\"}`\n            const itemConfig = getPayloadConfigFromPayload(config, item, key)\n            const indicatorColor = color || item.payload.fill || item.color\n\n            return (\n              <div\n                key={item.dataKey}\n                className={cn(\n                  \"flex w-full flex-wrap items-stretch gap-2 [&>svg]:h-2.5 [&>svg]:w-2.5 [&>svg]:text-muted-foreground\",\n                  indicator === \"dot\" && \"items-center\"\n                )}\n              >\n                {formatter && item?.value !== undefined && item.name ? (\n                  formatter(item.value, item.name, item, index, item.payload)\n                ) : (\n                  <>\n                    {itemConfig?.icon ? (\n                      <itemConfig.icon />\n                    ) : (\n                      !hideIndicator && (\n                        <div\n                          className={cn(\n                            \"shrink-0 rounded-[2px] border-[--color-border] bg-[--color-bg]\",\n                            {\n                              \"h-2.5 w-2.5\": indicator === \"dot\",\n                              \"w-1\": indicator === \"line\",\n                              \"w-0 border-[1.5px] border-dashed bg-transparent\":\n                                indicator === \"dashed\",\n                              \"my-0.5\": nestLabel && indicator === \"dashed\",\n                            }\n                          )}\n                          style={\n                            {\n                              \"--color-bg\": indicatorColor,\n                              \"--color-border\": indicatorColor,\n                            } as React.CSSProperties\n                          }\n                        />\n                      )\n                    )}\n                    <div\n                      className={cn(\n                        \"flex flex-1 justify-between leading-none\",\n                        nestLabel ? \"items-end\" : \"items-center\"\n                      )}\n                    >\n                      <div className=\"grid gap-1.5\">\n                        {nestLabel ? tooltipLabel : null}\n                        <span className=\"text-muted-foreground\">\n                          {itemConfig?.label || item.name}\n                        </span>\n                      </div>\n                      {item.value && (\n                        <span className=\"font-mono font-medium tabular-nums text-foreground\">\n                          {item.value.toLocaleString()}\n                        </span>\n                      )}\n                    </div>\n                  </>\n                )}\n              </div>\n            )\n          })}\n        </div>\n      </div>\n    )\n  }\n)\nChartTooltipContent.displayName = \"ChartTooltip\"\n\nconst ChartLegend = RechartsPrimitive.Legend\n\nconst ChartLegendContent = React.forwardRef<\n  HTMLDivElement,\n  React.ComponentProps<\"div\"> &\n    Pick<RechartsPrimitive.LegendProps, \"payload\" | \"verticalAlign\"> & {\n      hideIcon?: boolean\n      nameKey?: string\n    }\n>(\n  (\n    { className, hideIcon = false, payload, verticalAlign = \"bottom\", nameKey },\n    ref\n  ) => {\n    const { config } = useChart()\n\n    if (!payload?.length) {\n      return null\n    }\n\n    return (\n      <div\n        ref={ref}\n        className={cn(\n          \"flex items-center justify-center gap-4\",\n          verticalAlign === \"top\" ? \"pb-3\" : \"pt-3\",\n          className\n        )}\n      >\n        {payload.map((item) => {\n          const key = `${nameKey || item.dataKey || \"value\"}`\n          const itemConfig = getPayloadConfigFromPayload(config, item, key)\n\n          return (\n            <div\n              key={item.value}\n              className={cn(\n                \"flex items-center gap-1.5 [&>svg]:h-3 [&>svg]:w-3 [&>svg]:text-muted-foreground\"\n              )}\n            >\n              {itemConfig?.icon && !hideIcon ? (\n                <itemConfig.icon />\n              ) : (\n                <div\n                  className=\"h-2 w-2 shrink-0 rounded-[2px]\"\n                  style={{\n                    backgroundColor: item.color,\n                  }}\n                />\n              )}\n              {itemConfig?.label}\n            </div>\n          )\n        })}\n      </div>\n    )\n  }\n)\nChartLegendContent.displayName = \"ChartLegend\"\n\n// Helper to extract item config from a payload.\nfunction getPayloadConfigFromPayload(\n  config: ChartConfig,\n  payload: unknown,\n  key: string\n) {\n  if (typeof payload !== \"object\" || payload === null) {\n    return undefined\n  }\n\n  const payloadPayload =\n    \"payload\" in payload &&\n    typeof payload.payload === \"object\" &&\n    payload.payload !== null\n      ? payload.payload\n      : undefined\n\n  let configLabelKey: string = key\n\n  if (\n    key in payload &&\n    typeof payload[key as keyof typeof payload] === \"string\"\n  ) {\n    configLabelKey = payload[key as keyof typeof payload] as string\n  } else if (\n    payloadPayload &&\n    key in payloadPayload &&\n    typeof payloadPayload[key as keyof typeof payloadPayload] === \"string\"\n  ) {\n    configLabelKey = payloadPayload[\n      key as keyof typeof payloadPayload\n    ] as string\n  }\n\n  return configLabelKey in config\n    ? config[configLabelKey]\n    : config[key as keyof typeof config]\n}\n\nexport {\n  ChartContainer,\n  ChartTooltip,\n  ChartTooltipContent,\n  ChartLegend,\n  ChartLegendContent,\n  ChartStyle,\n}\n","\"use client\";\n\nimport * as PopoverPrimitive from \"@radix-ui/react-popover\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Popover = PopoverPrimitive.Root;\n\nconst PopoverTrigger = PopoverPrimitive.Trigger;\n\nconst PopoverContent = React.forwardRef<\n  React.ElementRef<typeof PopoverPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof PopoverPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <PopoverPrimitive.Portal>\n    <PopoverPrimitive.Content\n      ref={ref}\n      align={align}\n      sideOffset={sideOffset}\n      className={cn(\n        \"z-50 w-72 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        className,\n      )}\n      {...props}\n    />\n  </PopoverPrimitive.Portal>\n));\nPopoverContent.displayName = PopoverPrimitive.Content.displayName;\n\nexport { Popover, PopoverTrigger, PopoverContent };\n","\"use client\";\n\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"size-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className,\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"size-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className,\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"size-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\",\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex size-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"size-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n","import { cn } from \"@/lib/utils\";\n\nfunction Skeleton({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) {\n  return (\n    <div\n      className={cn(\"animate-pulse rounded-md bg-muted\", className)}\n      {...props}\n    />\n  );\n}\n\nexport { Skeleton };\n","\"use client\";\n\n// Inspired by react-hot-toast library\nimport * as React from \"react\";\n\nimport type { ToastActionElement, ToastProps } from \"@/components/ui/toast\";\n\nconst TOAST_LIMIT = 1;\nconst TOAST_REMOVE_DELAY = 1000000;\n\ntype ToasterToast = ToastProps & {\n  id: string;\n  title?: React.ReactNode;\n  description?: React.ReactNode;\n  action?: ToastActionElement;\n};\n\nconst actionTypes = {\n  ADD_TOAST: \"ADD_TOAST\",\n  UPDATE_TOAST: \"UPDATE_TOAST\",\n  DISMISS_TOAST: \"DISMISS_TOAST\",\n  REMOVE_TOAST: \"REMOVE_TOAST\",\n} as const;\n\nlet count = 0;\n\nfunction genId() {\n  count = (count + 1) % Number.MAX_SAFE_INTEGER;\n  return count.toString();\n}\n\ntype ActionType = typeof actionTypes;\n\ntype Action =\n  | {\n      type: ActionType[\"ADD_TOAST\"];\n      toast: ToasterToast;\n    }\n  | {\n      type: ActionType[\"UPDATE_TOAST\"];\n      toast: Partial<ToasterToast>;\n    }\n  | {\n      type: ActionType[\"DISMISS_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    }\n  | {\n      type: ActionType[\"REMOVE_TOAST\"];\n      toastId?: ToasterToast[\"id\"];\n    };\n\ninterface State {\n  toasts: ToasterToast[];\n}\n\nconst toastTimeouts = new Map<string, ReturnType<typeof setTimeout>>();\n\nconst addToRemoveQueue = (toastId: string) => {\n  if (toastTimeouts.has(toastId)) {\n    return;\n  }\n\n  const timeout = setTimeout(() => {\n    toastTimeouts.delete(toastId);\n    dispatch({\n      type: \"REMOVE_TOAST\",\n      toastId: toastId,\n    });\n  }, TOAST_REMOVE_DELAY);\n\n  toastTimeouts.set(toastId, timeout);\n};\n\nexport const reducer = (state: State, action: Action): State => {\n  switch (action.type) {\n    case \"ADD_TOAST\":\n      return {\n        ...state,\n        toasts: [action.toast, ...state.toasts].slice(0, TOAST_LIMIT),\n      };\n\n    case \"UPDATE_TOAST\":\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === action.toast.id ? { ...t, ...action.toast } : t,\n        ),\n      };\n\n    case \"DISMISS_TOAST\": {\n      const { toastId } = action;\n\n      // ! Side effects ! - This could be extracted into a dismissToast() action,\n      // but I'll keep it here for simplicity\n      if (toastId) {\n        addToRemoveQueue(toastId);\n      } else {\n        state.toasts.forEach((toast) => {\n          addToRemoveQueue(toast.id);\n        });\n      }\n\n      return {\n        ...state,\n        toasts: state.toasts.map((t) =>\n          t.id === toastId || toastId === undefined\n            ? {\n                ...t,\n                open: false,\n              }\n            : t,\n        ),\n      };\n    }\n    case \"REMOVE_TOAST\":\n      if (action.toastId === undefined) {\n        return {\n          ...state,\n          toasts: [],\n        };\n      }\n      return {\n        ...state,\n        toasts: state.toasts.filter((t) => t.id !== action.toastId),\n      };\n  }\n};\n\nconst listeners: Array<(state: State) => void> = [];\n\nlet memoryState: State = { toasts: [] };\n\nfunction dispatch(action: Action) {\n  memoryState = reducer(memoryState, action);\n  listeners.forEach((listener) => {\n    listener(memoryState);\n  });\n}\n\ntype Toast = Omit<ToasterToast, \"id\">;\n\nfunction toast({ ...props }: Toast) {\n  const id = genId();\n\n  const update = (props: ToasterToast) =>\n    dispatch({\n      type: \"UPDATE_TOAST\",\n      toast: { ...props, id },\n    });\n  const dismiss = () => dispatch({ type: \"DISMISS_TOAST\", toastId: id });\n\n  dispatch({\n    type: \"ADD_TOAST\",\n    toast: {\n      ...props,\n      id,\n      open: true,\n      onOpenChange: (open) => {\n        if (!open) dismiss();\n      },\n    },\n  });\n\n  return {\n    id: id,\n    dismiss,\n    update,\n  };\n}\n\nfunction useToast() {\n  const [state, setState] = React.useState<State>(memoryState);\n\n  React.useEffect(() => {\n    listeners.push(setState);\n    return () => {\n      const index = listeners.indexOf(setState);\n      if (index > -1) {\n        listeners.splice(index, 1);\n      }\n    };\n  }, [state]);\n\n  return {\n    ...state,\n    toast,\n    dismiss: (toastId?: string) => dispatch({ type: \"DISMISS_TOAST\", toastId }),\n  };\n}\n\nexport { useToast, toast };\n","export type STATISTICS_TYPE = \"CONTEXT_RETRIEVE\" | \"SOURCE_UPDATE\" | \"EMBEDDER_UPSERT\" | \"EMBEDDER_GENERATE\" | \"EMBEDDER_DELETE\" | \"WORKFLOW_RUN\" | \"CONTEXT_UPSERT\" | \"TOOL_CALL\" | \"AGENT_RUN\";\n\nexport const STATISTICS_TYPE_ENUM = {\n    CONTEXT_RETRIEVE: \"CONTEXT_RETRIEVE\",\n    SOURCE_UPDATE: \"SOURCE_UPDATE\",\n    EMBEDDER_UPSERT: \"EMBEDDER_UPSERT\",\n    EMBEDDER_GENERATE: \"EMBEDDER_GENERATE\",\n    EMBEDDER_DELETE: \"EMBEDDER_DELETE\",\n    WORKFLOW_RUN: \"WORKFLOW_RUN\",\n    CONTEXT_UPSERT: \"CONTEXT_UPSERT\",\n    TOOL_CALL: \"TOOL_CALL\",\n    AGENT_RUN: \"AGENT_RUN\"\n};\n"],"names":["Promise","resolve","then","__webpack_require__","bind","SummaryCardElement","param","title","currentValue","previousValue","isLoading","jsx_runtime","jsxs","Card","className","CardHeader","jsx","CardTitle","div","CardContent","Skeleton","percentageChange","isPositive","isNeutral","TrendIcon","Minus","TrendingUp","TrendingDown","trendColor","concat","toLocaleString","p","span","Math","abs","toFixed","br","SummaryCard","query","entity","dates","useMemo","now","Date","toISOString","twentyFourHoursAgo","subHours","sevenDaysAgo","subDays","data","data24h","loading","loading24h","useQuery","variables","from","to","data7d","loading7d","getTotal","Array","isArray","reduce","sum","item","count","twentyFourHourTotal","sevenDayAverage","round","dynamic","DashboardPage","dateRange","setDateRange","useState","selectedType","setSelectedType","unit","setUnit","groupBy","setGroupBy","h2","DateRangeSelector","onDateRangeChange","maxDays","GET_AGENT_SESSIONS_STATISTICS","GET_AGENT_RUN_STATISTICS","GET_TOKEN_USAGE_STATISTICS","GET_WORKFLOW_RUNS_STATISTICS","GET_FUNCTION_CALLS_STATISTICS","TimeSeriesChart","onTypeChange","onUnitChange","dataTypes","STATISTICS_TYPE_ENUM","CONTEXT_RETRIEVE","SOURCE_UPDATE","EMBEDDER_UPSERT","EMBEDDER_GENERATE","EMBEDDER_DELETE","WORKFLOW_RUN","CONTEXT_UPSERT","TOOL_CALL","AGENT_RUN","DonutChart","groupByOptions","value","label","onGroupByChange","Calendar","classNames","showOutsideDays","props","DayPicker","cn","months","month","caption","caption_label","nav","nav_button","buttonVariants","variant","nav_button_previous","nav_button_next","table","head_row","head_cell","row","cell","day","day_range_end","day_selected","day_today","day_outside","day_disabled","day_range_middle","day_hidden","components","IconLeft","ChevronLeft","IconRight","ChevronRight","displayName","toast","useToast","disabledDays","React","fromDate","before","addDays","after","Popover","PopoverTrigger","asChild","Button","id","CalendarIcon","Fragment","format","PopoverContent","align","initialFocus","mode","defaultMonth","selected","onSelect","newRange","daysDifference","differenceInDays","description","disabled","numberOfMonths","CHART_COLORS","error","GET_DONUT_STATISTICS","type","skip","chartData","chartConfig","trackingStatistics","sortedData","map","index","name","group","replace","split","word","charAt","toUpperCase","slice","toLowerCase","join","fill","length","sort","a","b","config","acc","color","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","h3","Select","onValueChange","SelectTrigger","SelectValue","placeholder","SelectContent","SelectItem","option","message","ChartContainer","PieChart","defs","entry","radialGradient","cx","cy","r","stop","offset","stopColor","stopOpacity","Pie","labelLine","midAngle","innerRadius","outerRadius","percent","RADIAN","PI","radius","x","cos","text","y","sin","textAnchor","dominantBaseline","fontSize","fontWeight","paintOrder","dataKey","strokeWidth","Cell","ChartTooltip","content","ChartTooltipContent","nameKey","hideLabel","formatter","String","transformEnumToLabel","enumValue","GET_TIME_SERIES_STATISTICS","dataMap","Map","forEach","dateObj","Number","dateKey","startOfDay","set","allDates","eachDayOfInterval","start","end","date","get","getTime","formattedDate","AreaChart","linearGradient","x1","y1","x2","y2","CartesianGrid","strokeDasharray","stroke","strokeOpacity","vertical","XAxis","tick","tickLine","axisLine","YAxis","labelFormatter","payload","ChartLegend","ChartLegendContent","Area","fillOpacity","dot","activeDot","ref","CardDescription","CardFooter","THEMES","light","dark","ChartContext","useChart","context","children","uniqueId","chartId","Provider","data-chart","ChartStyle","RechartsPrimitive","colorConfig","Object","entries","filter","theme","style","dangerouslySetInnerHTML","__html","prefix","itemConfig","key","active","indicator","hideIndicator","labelClassName","labelKey","tooltipLabel","getPayloadConfigFromPayload","nestLabel","indicatorColor","undefined","icon","hideIcon","verticalAlign","backgroundColor","payloadPayload","configLabelKey","PopoverPrimitive","sideOffset","SelectPrimitive","ChevronDown","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","position","SelectLabel","Check","SelectSeparator","toastTimeouts","addToRemoveQueue","has","toastId","timeout","setTimeout","delete","dispatch","reducer","state","action","toasts","t","open","listeners","memoryState","listener","MAX_SAFE_INTEGER","toString","dismiss","onOpenChange","update","setState","push","indexOf","splice"],"sourceRoot":""}