{"version":3,"file":"static/chunks/app/(application)/chat/[agent]/[session]/page-fb7ea4dc4cdb350b.js","mappings":"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","sources":["webpack://_N_E/?bb9c","webpack://_N_E/./components/ai-elements/loader.tsx","webpack://_N_E/./components/ui/hover-card.tsx","webpack://_N_E/./components/ui/progress.tsx","webpack://_N_E/./components/ai-elements/context.tsx","webpack://_N_E/./components/ai-elements/tool.tsx","webpack://_N_E/./components/lottie.tsx","webpack://_N_E/./app/(application)/chat/[agent]/[session]/chat.tsx","webpack://_N_E/./app/(application)/chat/[agent]/[session]/page.tsx","webpack://_N_E/./components/ui/switch.tsx","webpack://_N_E/./lib/check-chat-session-write-access.ts"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/daniel.claessen/Desktop/Projects/exulu/frontend/app/(application)/chat/[agent]/[session]/page.tsx\");\n","import { cn } from '@/lib/utils';\nimport type { HTMLAttributes } from 'react';\n\ntype LoaderIconProps = {\n  size?: number;\n};\n\nconst LoaderIcon = ({ size = 16 }: LoaderIconProps) => (\n  <svg\n    height={size}\n    strokeLinejoin=\"round\"\n    style={{ color: 'currentcolor' }}\n    viewBox=\"0 0 16 16\"\n    width={size}\n  >\n    <title>Loader</title>\n    <g clipPath=\"url(#clip0_2393_1490)\">\n      <path d=\"M8 0V4\" stroke=\"currentColor\" strokeWidth=\"1.5\" />\n      <path\n        d=\"M8 16V12\"\n        opacity=\"0.5\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n      <path\n        d=\"M3.29773 1.52783L5.64887 4.7639\"\n        opacity=\"0.9\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n      <path\n        d=\"M12.7023 1.52783L10.3511 4.7639\"\n        opacity=\"0.1\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n      <path\n        d=\"M12.7023 14.472L10.3511 11.236\"\n        opacity=\"0.4\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n      <path\n        d=\"M3.29773 14.472L5.64887 11.236\"\n        opacity=\"0.6\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n      <path\n        d=\"M15.6085 5.52783L11.8043 6.7639\"\n        opacity=\"0.2\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n      <path\n        d=\"M0.391602 10.472L4.19583 9.23598\"\n        opacity=\"0.7\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n      <path\n        d=\"M15.6085 10.4722L11.8043 9.2361\"\n        opacity=\"0.3\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n      <path\n        d=\"M0.391602 5.52783L4.19583 6.7639\"\n        opacity=\"0.8\"\n        stroke=\"currentColor\"\n        strokeWidth=\"1.5\"\n      />\n    </g>\n    <defs>\n      <clipPath id=\"clip0_2393_1490\">\n        <rect fill=\"white\" height=\"16\" width=\"16\" />\n      </clipPath>\n    </defs>\n  </svg>\n);\n\nexport type LoaderProps = HTMLAttributes<HTMLDivElement> & {\n  size?: number;\n};\n\nexport const Loader = ({ className, size = 16, ...props }: LoaderProps) => (\n  <div\n    className={cn(\n      'inline-flex animate-spin items-center justify-center',\n      className\n    )}\n    {...props}\n  >\n    <LoaderIcon size={size} />\n  </div>\n);\n","\"use client\";\n\nimport * as HoverCardPrimitive from \"@radix-ui/react-hover-card\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst HoverCard = HoverCardPrimitive.Root;\n\nconst HoverCardTrigger = HoverCardPrimitive.Trigger;\n\nconst HoverCardContent = React.forwardRef<\n  React.ElementRef<typeof HoverCardPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof HoverCardPrimitive.Content>\n>(({ className, align = \"center\", sideOffset = 4, ...props }, ref) => (\n  <HoverCardPrimitive.Content\n    ref={ref}\n    align={align}\n    sideOffset={sideOffset}\n    className={cn(\n      \"z-50 w-64 rounded-md border bg-popover p-4 text-popover-foreground shadow-md outline-none data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n      className,\n    )}\n    {...props}\n  />\n));\nHoverCardContent.displayName = HoverCardPrimitive.Content.displayName;\n\nexport { HoverCard, HoverCardTrigger, HoverCardContent };\n","\"use client\";\n\nimport * as ProgressPrimitive from \"@radix-ui/react-progress\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Progress = React.forwardRef<\n  React.ElementRef<typeof ProgressPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof ProgressPrimitive.Root>\n>(({ className, value, ...props }, ref) => (\n  <ProgressPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"relative h-4 w-full overflow-hidden rounded-full bg-secondary\",\n      className,\n    )}\n    {...props}\n  >\n    <ProgressPrimitive.Indicator\n      className=\"size-full flex-1 bg-primary transition-all\"\n      style={{ transform: `translateX(-${100 - (value || 0)}%)` }}\n    />\n  </ProgressPrimitive.Root>\n));\nProgress.displayName = ProgressPrimitive.Root.displayName;\n\nexport { Progress };\n","\"use client\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  HoverCard,\n  HoverCardContent,\n  HoverCardTrigger,\n} from \"@/components/ui/hover-card\";\nimport { Progress } from \"@/components/ui/progress\";\nimport { cn } from \"@/lib/utils\";\nimport type { LanguageModelUsage } from \"ai\";\nimport { type ComponentProps, createContext, useContext } from \"react\";\nimport { estimateCost, type ModelId } from \"tokenlens\";\n\nconst PERCENT_MAX = 100;\nconst ICON_RADIUS = 10;\nconst ICON_VIEWBOX = 24;\nconst ICON_CENTER = 12;\nconst ICON_STROKE_WIDTH = 2;\n\ntype ContextSchema = {\n  usedTokens: number;\n  maxTokens: number;\n  usage?: LanguageModelUsage;\n  modelId?: ModelId;\n};\n\nconst ContextContext = createContext<ContextSchema | null>(null);\n\nconst useContextValue = () => {\n  const context = useContext(ContextContext);\n\n  if (!context) {\n    throw new Error(\"Context components must be used within Context\");\n  }\n\n  return context;\n};\n\nexport type ContextProps = ComponentProps<typeof HoverCard> & ContextSchema;\n\nexport const Context = ({\n  usedTokens,\n  maxTokens,\n  usage,\n  modelId,\n  ...props\n}: ContextProps) => (\n  <ContextContext.Provider\n    value={{\n      usedTokens,\n      maxTokens,\n      usage,\n      modelId,\n    }}\n  >\n    <HoverCard closeDelay={0} openDelay={0} {...props} />\n  </ContextContext.Provider>\n);\n\nconst ContextIcon = () => {\n  const { usedTokens, maxTokens } = useContextValue();\n  const circumference = 2 * Math.PI * ICON_RADIUS;\n  const usedPercent = usedTokens / maxTokens;\n  const dashOffset = circumference * (1 - usedPercent);\n\n  return (\n    <svg\n      aria-label=\"Model context usage\"\n      height=\"20\"\n      role=\"img\"\n      style={{ color: \"currentcolor\" }}\n      viewBox={`0 0 ${ICON_VIEWBOX} ${ICON_VIEWBOX}`}\n      width=\"20\"\n    >\n      <circle\n        cx={ICON_CENTER}\n        cy={ICON_CENTER}\n        fill=\"none\"\n        opacity=\"0.25\"\n        r={ICON_RADIUS}\n        stroke=\"currentColor\"\n        strokeWidth={ICON_STROKE_WIDTH}\n      />\n      <circle\n        cx={ICON_CENTER}\n        cy={ICON_CENTER}\n        fill=\"none\"\n        opacity=\"0.7\"\n        r={ICON_RADIUS}\n        stroke=\"currentColor\"\n        strokeDasharray={`${circumference} ${circumference}`}\n        strokeDashoffset={dashOffset}\n        strokeLinecap=\"round\"\n        strokeWidth={ICON_STROKE_WIDTH}\n        style={{ transformOrigin: \"center\", transform: \"rotate(-90deg)\" }}\n      />\n    </svg>\n  );\n};\n\nexport type ContextTriggerProps = ComponentProps<typeof Button>;\n\nexport const ContextTrigger = ({ children, ...props }: ContextTriggerProps) => {\n  const { usedTokens, maxTokens } = useContextValue();\n  const usedPercent = usedTokens / maxTokens;\n  const renderedPercent = new Intl.NumberFormat(\"en-US\", {\n    style: \"percent\",\n    maximumFractionDigits: 1,\n  }).format(usedPercent);\n\n  return (\n    <HoverCardTrigger asChild>\n      {children ?? (\n        <Button type=\"button\" variant=\"ghost\" {...props}>\n          <span className=\"font-medium text-muted-foreground\">\n            {renderedPercent}\n          </span>\n          <ContextIcon />\n        </Button>\n      )}\n    </HoverCardTrigger>\n  );\n};\n\nexport type ContextContentProps = ComponentProps<typeof HoverCardContent>;\n\nexport const ContextContent = ({\n  className,\n  ...props\n}: ContextContentProps) => (\n  <HoverCardContent\n    className={cn(\"min-w-[240px] divide-y overflow-hidden p-0\", className)}\n    {...props}\n  />\n);\n\nexport type ContextContentHeader = ComponentProps<\"div\">;\n\nexport const ContextContentHeader = ({\n  children,\n  className,\n  ...props\n}: ContextContentHeader) => {\n  const { usedTokens, maxTokens } = useContextValue();\n  const usedPercent = usedTokens / maxTokens;\n  const displayPct = new Intl.NumberFormat(\"en-US\", {\n    style: \"percent\",\n    maximumFractionDigits: 1,\n  }).format(usedPercent);\n  const used = new Intl.NumberFormat(\"en-US\", {\n    notation: \"compact\",\n  }).format(usedTokens);\n  const total = new Intl.NumberFormat(\"en-US\", {\n    notation: \"compact\",\n  }).format(maxTokens);\n\n  return (\n    <div className={cn(\"w-full space-y-2 p-3\", className)} {...props}>\n      {children ?? (\n        <>\n          <div className=\"flex items-center justify-between gap-3 text-xs\">\n            <p>{displayPct}</p>\n            <p className=\"font-mono text-muted-foreground\">\n              {used} / {total}\n            </p>\n          </div>\n          <div className=\"space-y-2\">\n            <Progress className=\"bg-muted\" value={usedPercent * PERCENT_MAX} />\n          </div>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport type ContextContentBody = ComponentProps<\"div\">;\n\nexport const ContextContentBody = ({\n  children,\n  className,\n  ...props\n}: ContextContentBody) => (\n  <div className={cn(\"w-full p-3\", className)} {...props}>\n    {children}\n  </div>\n);\n\nexport type ContextContentFooter = ComponentProps<\"div\">;\n\nexport const ContextContentFooter = ({\n  children,\n  className,\n  ...props\n}: ContextContentFooter) => {\n  const { modelId, usage } = useContextValue();\n  const costUSD = modelId\n    ? estimateCost({\n        modelId,\n        usage: {\n          input: usage?.inputTokens ?? 0,\n          output: usage?.outputTokens ?? 0,\n        },\n      }).totalUSD\n    : undefined;\n  const totalCost = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  }).format(costUSD ?? 0);\n\n  return (\n    <div\n      className={cn(\n        \"flex w-full items-center justify-between gap-3 bg-secondary p-3 text-xs\",\n        className\n      )}\n      {...props}\n    >\n      {children ?? (\n        <>\n          <span className=\"text-muted-foreground\">Total cost</span>\n          <span>{totalCost}</span>\n        </>\n      )}\n    </div>\n  );\n};\n\nexport type ContextInputUsageProps = ComponentProps<\"div\">;\n\nexport const ContextInputUsage = ({\n  className,\n  children,\n  ...props\n}: ContextInputUsageProps) => {\n  const { usage, modelId } = useContextValue();\n  const inputTokens = usage?.inputTokens ?? 0;\n\n  if (children) {\n    return children;\n  }\n\n  if (!inputTokens) {\n    return null;\n  }\n\n  const inputCost = modelId\n    ? estimateCost({\n        modelId,\n        usage: { input: inputTokens, output: 0 },\n      }).totalUSD\n    : undefined;\n  const inputCostText = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  }).format(inputCost ?? 0);\n\n  return (\n    <div\n      className={cn(\"flex items-center justify-between text-xs\", className)}\n      {...props}\n    >\n      <span className=\"text-muted-foreground\">Input</span>\n      <TokensWithCost costText={inputCostText} tokens={inputTokens} />\n    </div>\n  );\n};\n\nexport type ContextOutputUsageProps = ComponentProps<\"div\">;\n\nexport const ContextOutputUsage = ({\n  className,\n  children,\n  ...props\n}: ContextOutputUsageProps) => {\n  const { usage, modelId } = useContextValue();\n  const outputTokens = usage?.outputTokens ?? 0;\n\n  if (children) {\n    return children;\n  }\n\n  if (!outputTokens) {\n    return null;\n  }\n\n  const outputCost = modelId\n    ? estimateCost({\n        modelId,\n        usage: { input: 0, output: outputTokens },\n      }).totalUSD\n    : undefined;\n  const outputCostText = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  }).format(outputCost ?? 0);\n\n  return (\n    <div\n      className={cn(\"flex items-center justify-between text-xs\", className)}\n      {...props}\n    >\n      <span className=\"text-muted-foreground\">Output</span>\n      <TokensWithCost costText={outputCostText} tokens={outputTokens} />\n    </div>\n  );\n};\n\nexport type ContextReasoningUsageProps = ComponentProps<\"div\">;\n\nexport const ContextReasoningUsage = ({\n  className,\n  children,\n  ...props\n}: ContextReasoningUsageProps) => {\n  const { usage, modelId } = useContextValue();\n  const reasoningTokens = usage?.reasoningTokens ?? 0;\n\n  if (children) {\n    return children;\n  }\n\n  if (!reasoningTokens) {\n    return null;\n  }\n\n  const reasoningCost = modelId\n    ? estimateCost({\n        modelId,\n        usage: { reasoningTokens },\n      }).totalUSD\n    : undefined;\n  const reasoningCostText = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  }).format(reasoningCost ?? 0);\n\n  return (\n    <div\n      className={cn(\"flex items-center justify-between text-xs\", className)}\n      {...props}\n    >\n      <span className=\"text-muted-foreground\">Reasoning</span>\n      <TokensWithCost costText={reasoningCostText} tokens={reasoningTokens} />\n    </div>\n  );\n};\n\nexport type ContextCacheUsageProps = ComponentProps<\"div\">;\n\nexport const ContextCacheUsage = ({\n  className,\n  children,\n  ...props\n}: ContextCacheUsageProps) => {\n  const { usage, modelId } = useContextValue();\n  const cacheTokens = usage?.cachedInputTokens ?? 0;\n\n  if (children) {\n    return children;\n  }\n\n  if (!cacheTokens) {\n    return null;\n  }\n\n  const cacheCost = modelId\n    ? estimateCost({\n        modelId,\n        usage: { cacheReads: cacheTokens, input: 0, output: 0 },\n      }).totalUSD\n    : undefined;\n  const cacheCostText = new Intl.NumberFormat(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\",\n  }).format(cacheCost ?? 0);\n\n  return (\n    <div\n      className={cn(\"flex items-center justify-between text-xs\", className)}\n      {...props}\n    >\n      <span className=\"text-muted-foreground\">Cache</span>\n      <TokensWithCost costText={cacheCostText} tokens={cacheTokens} />\n    </div>\n  );\n};\n\nconst TokensWithCost = ({\n  tokens,\n  costText,\n}: {\n  tokens?: number;\n  costText?: string;\n}) => (\n  <span>\n    {tokens === undefined\n      ? \"—\"\n      : new Intl.NumberFormat(\"en-US\", {\n          notation: \"compact\",\n        }).format(tokens)}\n    {costText ? (\n      <span className=\"ml-2 text-muted-foreground\">• {costText}</span>\n    ) : null}\n  </span>\n);\n","'use client';\n\nimport { Badge } from '@/components/ui/badge';\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from '@/components/ui/collapsible';\nimport { cn } from '@/lib/utils';\nimport type { ToolUIPart } from 'ai';\nimport {\n  CheckCircleIcon,\n  ChevronDownIcon,\n  CircleIcon,\n  ClockIcon,\n  WrenchIcon,\n  XCircleIcon,\n} from 'lucide-react';\nimport type { ComponentProps, ReactNode } from 'react';\nimport { CodeBlock } from './code-block';\n\nexport type ToolProps = ComponentProps<typeof Collapsible>;\n\nexport const Tool = ({ className, ...props }: ToolProps) => (\n  <Collapsible\n    className={cn('not-prose mb-4 w-full rounded-md border', className)}\n    {...props}\n  />\n);\n\nexport type ToolHeaderProps = {\n  type: ToolUIPart['type'];\n  state: ToolUIPart['state'];\n  className?: string;\n};\n\nconst getStatusBadge = (status: ToolUIPart['state']) => {\n  const labels = {\n    'input-streaming': 'Pending',\n    'input-available': 'Running',\n    'output-available': 'Completed',\n    'output-error': 'Error',\n  } as const;\n\n  const icons = {\n    'input-streaming': <CircleIcon className=\"size-4 mr-2\" />,\n    'input-available': <ClockIcon className=\"size-4 animate-pulse mr-2\" />,\n    'output-available': <CheckCircleIcon className=\"size-4 text-green-600 mr-2\" />,\n    'output-error': <XCircleIcon className=\"size-4 text-red-600 mr-2\" />,\n  } as const;\n\n  return (\n    <Badge className=\"rounded-full text-xs\" variant=\"secondary\">\n      {icons[status]}\n      {labels[status]}\n    </Badge>\n  );\n};\n\nexport const ToolHeader = ({\n  className,\n  type,\n  state,\n  ...props\n}: ToolHeaderProps) => (\n  <CollapsibleTrigger\n    className={cn(\n      'flex w-full items-center justify-between gap-4 p-3',\n      className\n    )}\n    {...props}\n  >\n    <div className=\"flex items-center gap-2\">\n      <WrenchIcon className=\"size-4 text-muted-foreground\" />\n      <span className=\"font-medium text-sm\">{type}</span>\n      {getStatusBadge(state)}\n    </div>\n    <ChevronDownIcon className=\"size-4 text-muted-foreground transition-transform group-data-[state=open]:rotate-180\" />\n  </CollapsibleTrigger>\n);\n\nexport type ToolContentProps = ComponentProps<typeof CollapsibleContent>;\n\nexport const ToolContent = ({ className, ...props }: ToolContentProps) => (\n  <CollapsibleContent\n    className={cn(\n      'data-[state=closed]:fade-out-0 data-[state=closed]:slide-out-to-top-2 data-[state=open]:slide-in-from-top-2 text-popover-foreground outline-none data-[state=closed]:animate-out data-[state=open]:animate-in',\n      className\n    )}\n    {...props}\n  />\n);\n\nexport type ToolInputProps = ComponentProps<'div'> & {\n  input: ToolUIPart['input'];\n};\n\nexport const ToolInput = ({ className, input, ...props }: ToolInputProps) => (\n  <div className={cn('space-y-2 overflow-hidden p-4', className)} {...props}>\n    <h4 className=\"font-medium text-muted-foreground text-xs uppercase tracking-wide\">\n      Parameters\n    </h4>\n    <div className=\"rounded-md bg-muted/50\">\n      <CodeBlock code={JSON.stringify(input, null, 2)} language=\"json\" />\n    </div>\n  </div>\n);\n\nexport type ToolOutputProps = ComponentProps<'div'> & {\n  output: ReactNode;\n  errorText: ToolUIPart['errorText'];\n};\n\nexport const ToolOutput = ({\n  className,\n  output,\n  errorText,\n  ...props\n}: ToolOutputProps): JSX.Element => {\n  if (!(output || errorText)) {\n    return <></>;\n  }\n\n  return (\n    <div className={cn('space-y-2 p-4', className)} {...props}>\n      <h4 className=\"font-medium text-muted-foreground text-xs tracking-wide\">\n        {errorText ? 'Error' : 'Result'}\n      </h4>\n      <div\n        className={cn(\n          'overflow-x-auto rounded-md text-xs [&_table]:w-full p-5',\n          errorText\n            ? 'bg-destructive/10 text-destructive'\n            : 'bg-muted/50 text-foreground'\n        )}\n      >\n        {errorText && <div>{errorText}</div>}\n        {output && <div>{output}</div>}\n      </div>\n    </div>\n  );\n};\n","\"use client\";\n\nimport { Agent } from \"@/types/models/agent\";\nimport * as agentIdle from \"../public/agent-idle.json\";\nimport * as agentResponding from \"../public/agent-responding.json\";\nimport { useLottie } from \"lottie-react\";\n\nconst AgentVisual = ({ agent, status }: { agent: Agent, status: 'submitted' | 'streaming' | 'ready' | 'error' }) => {\n\n  if (!agentIdle && agent.image) {\n    return <img\n      src={agent.image}\n      alt={`${agent.name} agent`}\n      className=\"w-[100px] h-[100px] object-cover rounded-full mx-auto my-3\"\n    />\n  }\n\n  if (!agentIdle) {\n    return <div className=\"text-3xl font-bold text-primary text-center\">\n      {agent.name?.charAt(0).toUpperCase() || 'A'}\n    </div>\n  }\n\n  return <div className=\"text-3xl font-bold text-primary text-center\">\n    {agent.name?.charAt(0).toUpperCase() || 'A'}\n  </div>\n\n  return <LottieVisual agent={agent} status={status} />\n\n};\n\nconst LottieVisual = ({ agent, status }: { agent: Agent, status: 'submitted' | 'streaming' | 'ready' | 'error' }) => {\n  // Map status to animation configuration\n  const getAnimationOptions = () => {\n    switch (status) {\n      case 'submitted':\n        return {\n          animationData: agentIdle,\n          loop: true,\n          autoplay: true,\n        };\n      case 'streaming':\n        return {\n          animationData: agentResponding || agentIdle,\n          loop: true,\n          autoplay: true,\n        };\n      case 'ready':\n        return {\n\n          animationData: agentIdle,\n          loop: true,\n          autoplay: true,\n        };\n      case 'error':\n        return {\n          animationData: agentIdle,\n          loop: true,\n          autoplay: true,\n        };\n      default:\n        return {\n          animationData: agentIdle,\n          loop: true,\n          autoplay: true,\n        };\n    }\n  };\n\n  const { View } = useLottie(getAnimationOptions());\n\n  return (\n    <>\n      <div className=\"\">\n        <div className=\"w-80\">{View}</div>\n      </div>\n    </>\n  );\n}\n\nexport default AgentVisual;","\"use client\"\n\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { ChatRequestOptions, DefaultChatTransport, DynamicToolUIPart, FileUIPart, lastAssistantMessageIsCompleteWithToolCalls, UIMessage } from \"ai\";\nimport { useChat } from '@ai-sdk/react';\nimport * as React from \"react\";\nimport { useContext, useEffect, useState, useMemo } from \"react\";\nimport { UserContext } from \"@/app/(application)/authenticated\";\nimport { StopIcon } from \"@radix-ui/react-icons\";\nimport { AgentMessage, AgentSession } from \"@EXULU_SHARED/models/agent-session\";\nimport { Loader } from '@/components/ai-elements/loader';\nimport TextareaAutosize from \"react-textarea-autosize\";\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from \"@/components/ui/tooltip\";\nimport {\n  GET_AGENT_MESSAGES,\n  GET_USER_BY_ID,\n  UPDATE_AGENT_SESSION_RBAC,\n} from \"@/queries/queries\";\nimport { getToken } from \"@/util/api\"\nimport { Agent } from \"@EXULU_SHARED/models/agent\";\nimport Image from \"next/image\";\nimport { ConfigContext } from \"@/components/config-context\";\nimport { Workflow, Plus, ArrowUp, ChevronsUpDown } from \"lucide-react\";\nimport { useToast } from \"@/components/ui/use-toast\"\nimport { SaveWorkflowModal } from \"@/components/save-workflow-modal\";\nimport { Button } from \"@/components/ui/button\";\nimport { Switch } from \"@/components/ui/switch\";\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { Conversation, ConversationContent } from \"@/components/ai-elements/conversation\";\nimport { useIsMobile } from \"@/hooks/use-mobile\";\nimport { RBACControl } from \"@/components/rbac\";\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from \"@/components/ui/collapsible\";\nimport { Loading } from \"@/components/ui/loading\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { checkChatSessionWriteAccess } from \"@/lib/check-chat-session-write-access\";\nimport UppyDashboard, { FileItem, getPresignedUrl } from \"@/components/uppy-dashboard\";\nimport { Item } from \"@/types/models/item\";\nimport { ExclamationTriangleIcon } from \"@radix-ui/react-icons\";\nimport {\n  Context,\n  ContextTrigger,\n  ContextContent,\n  ContextContentHeader,\n  ContextContentBody,\n  ContextInputUsage,\n  ContextOutputUsage,\n  ContextReasoningUsage,\n  ContextCacheUsage,\n} from '@/components/ai-elements/context';\nimport { Progress } from \"@/components/ui/progress\";\nimport {\n  Tool,\n  ToolContent,\n  ToolHeader,\n  ToolOutput,\n  ToolInput,\n} from '@/components/ai-elements/tool';\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { MessageRenderer } from \"@/components/message-renderer\";\nimport { Response } from '@/components/ai-elements/response';\nimport AgentVisual from \"@/components/lottie\";\n\nexport interface ChatProps {\n  chatId?: string;\n  agentId?: string;\n  messages?: UIMessage[];\n  input?: string;\n  handleInputChange?: (e: React.ChangeEvent<HTMLTextAreaElement>) => void;\n  addToolResult?: any\n  handleSubmit?: (\n    e: React.FormEvent<HTMLFormElement>,\n    chatRequestOptions?: ChatRequestOptions,\n  ) => void;\n  isLoading: boolean;\n  onFilesSelected: (file: any[]) => void;\n  error?: undefined | Error;\n  stop?: () => void;\n}\n\nexport function ChatLayout({ session, agent }: { session: AgentSession, agent: Agent }) {\n\n  const [error, setError] = useState<string | null>(null);\n  const configContext = React.useContext(ConfigContext);\n  const isMobile = useIsMobile();\n  const [files, setFiles] = useState<FileUIPart[] | null>(null);\n  const [items, setItems] = useState<string[] | null>(null);\n  const { user } = useContext(UserContext);\n  const [copyingTableId, setCopyingTableId] = useState<string | null>(null);\n  const [showSaveWorkflowModal, setShowSaveWorkflowModal] = useState(false);\n  const [input, setInput] = useState('');\n  const [disabledTools, setDisabledTools] = useState<string[]>([]);\n  const inputRef = React.useRef<HTMLTextAreaElement>(null);\n  const { toast } = useToast()\n\n  const [rbac, setRbac] = useState({\n    rights_mode: session?.rights_mode || 'private',\n    users: session?.RBAC?.users || [],\n    roles: session?.RBAC?.roles || [],\n    projects: session?.RBAC?.projects || []\n  })\n\n  const creatorQuery = useQuery(GET_USER_BY_ID, {\n    variables: { id: session.created_by },\n    skip: !session.created_by\n  })\n\n\n  const [updateAgentSessionRbac, updateAgentSessionRbacResult] = useMutation(UPDATE_AGENT_SESSION_RBAC);\n  const [tokenCounts, setTokenCounts] = useState<MessageMetadata>({\n    totalTokens: 0,\n    reasoningTokens: 0,\n    inputTokens: 0,\n    outputTokens: 0,\n    cachedInputTokens: 0\n  });\n\n  useQuery<{\n    agent_messagesPagination: {\n      items: AgentMessage[]\n    };\n  }>(GET_AGENT_MESSAGES, {\n    returnPartialData: true,\n    fetchPolicy: \"network-only\",\n    nextFetchPolicy: \"network-only\",\n    variables: {\n      page: 1,\n      limit: 50,\n      filters: {\n        session: {\n          eq: session.id\n        }\n      },\n    },\n    onCompleted: (data) => {\n      if (data?.agent_messagesPagination) {\n        const messages = data?.agent_messagesPagination.items.map((item) => (JSON.parse(item.content)))\n        setMessages(messages as any[]);\n      }\n    },\n  });\n\n  const {\n    messages,\n    sendMessage,\n    status,\n    stop,\n    regenerate,\n    setMessages,\n    addToolResult\n  } = useChat({\n    sendAutomaticallyWhen: lastAssistantMessageIsCompleteWithToolCalls,\n    // Throttle the messages and data updates to 50ms:\n    experimental_throttle: 50,\n    async onToolCall({ toolCall }) {\n      // Check if it's a dynamic tool first for proper type narrowing\n      if (toolCall.dynamic) {\n        return;\n      }\n\n      if (toolCall.toolName === 'getLocation') {\n        const cities = ['New York', 'Los Angeles', 'Chicago', 'San Francisco'];\n\n        // No await - avoids potential deadlocks\n        addToolResult({\n          tool: 'confirm-tool-call',\n          toolCallId: toolCall.toolCallId,\n          output: cities[Math.floor(Math.random() * cities.length)],\n        });\n      }\n    },\n    onError: (error) => {\n      console.log(\"error!!\", error?.message)\n      try {\n        const { message } = JSON.parse(error?.message)\n        setError(message)\n      } catch (x) {\n        setError(error.message)\n      }\n    },\n    transport: new DefaultChatTransport({\n      api: `${configContext?.backend}${agent.slug}/${agent.id}`,\n      // only send the last message to the server: we load\n      // the history from the database.\n      prepareSendMessagesRequest: async ({ messages, id: chatId, body }) => {\n        const token = await getToken()\n        if (!token) {\n          throw new Error(\"No valid session token available.\")\n        }\n        return {\n          body: {\n            ...body,\n            message: messages[messages.length - 1],\n            id: chatId,\n            session: session.id,\n          }, headers: {\n            User: user.id,\n            Session: session.id,\n            Authorization: `Bearer ${token}`,\n            Stream: \"true\"\n          }\n        };\n      },\n    })\n  });\n\n  type MessageMetadata = {\n    totalTokens: number;\n    reasoningTokens: number;\n    inputTokens: number;\n    outputTokens: number;\n    cachedInputTokens: number;\n  }\n\n  useEffect(() => {\n    const totalCount = messages?.reduce((acc, message) => {\n      const messageMetadata: MessageMetadata = message.metadata as any;\n      return acc + (messageMetadata?.totalTokens || 0);\n    }, 0);\n    const reasoningCount = messages?.reduce((acc, message) => {\n      const messageMetadata: MessageMetadata = message.metadata as any;\n      return acc + (messageMetadata?.reasoningTokens || 0);\n    }, 0);\n    const inputCount = messages?.reduce((acc, message) => {\n      const messageMetadata: MessageMetadata = message.metadata as any;\n      return acc + (messageMetadata?.inputTokens || 0);\n    }, 0);\n    const outputCount = messages?.reduce((acc, message) => {\n      const messageMetadata: MessageMetadata = message.metadata as any;\n      return acc + (messageMetadata?.outputTokens || 0);\n    }, 0);\n    const cachedInputCount = messages?.reduce((acc, message) => {\n      const messageMetadata: MessageMetadata = message.metadata as any;\n      return acc + (messageMetadata?.cachedInputTokens || 0);\n    }, 0);\n    setTokenCounts({\n      totalTokens: totalCount,\n      reasoningTokens: reasoningCount,\n      inputTokens: inputCount,\n      outputTokens: outputCount,\n      cachedInputTokens: cachedInputCount\n    })\n  }, [messages])\n\n  // Check if conversation has enough content for a workflow\n  const canCreateWorkflow = useMemo(() => {\n    const userMessages = messages?.filter(m => m.role === 'user') || [];\n    const assistantMessages = messages?.filter(m => m.role === 'assistant') || [];\n    return userMessages.length >= 1 && assistantMessages.length >= 1;\n  }, [messages]);\n\n  const convertTableToCSV = (tableElement: HTMLTableElement): string => {\n    const rows = Array.from(tableElement.querySelectorAll('tr'));\n    const csvRows: string[] = [];\n\n    rows.forEach(row => {\n      const cells = Array.from(row.querySelectorAll('th, td'));\n      const csvRow = cells.map(cell => {\n        // Escape quotes and wrap in quotes if contains comma, newline, or quote\n        let text = cell.textContent || '';\n        text = text.replace(/\"/g, '\"\"');\n        if (text.includes(',') || text.includes('\\n') || text.includes('\"')) {\n          text = `\"${text}\"`;\n        }\n        return text;\n      });\n      csvRows.push(csvRow.join(','));\n    });\n\n    return csvRows.join('\\n');\n  };\n\n  const copyTableAsCSV = async (tableElement: HTMLTableElement, tableId: string) => {\n    setCopyingTableId(tableId);\n\n    try {\n      const csv = convertTableToCSV(tableElement);\n      await navigator.clipboard.writeText(csv);\n\n      toast({\n        title: \"Table copied!\",\n        description: \"Table data has been copied to clipboard as CSV\",\n      });\n\n      // Reset the copying state after a short delay\n      setTimeout(() => {\n        setCopyingTableId(null);\n      }, 2000);\n    } catch (err) {\n      toast({\n        title: \"Copy failed\",\n        description: \"Failed to copy table to clipboard\",\n        variant: \"destructive\",\n      });\n      setCopyingTableId(null);\n    }\n  };\n\n  const onSubmit = async (\n    e: React.FormEvent,\n    options?: ChatRequestOptions,\n  ) => {\n    e.preventDefault();\n    sendMessage({\n      text: input,\n      files: files || []\n    }, {\n      body: {\n        disabledTools: disabledTools,\n      },\n    });\n    setInput('');\n  };\n\n  const handleKeyPress = (e: React.KeyboardEvent<HTMLTextAreaElement>) => {\n    if (e.key === \"Enter\" && !e.shiftKey) {\n      e.preventDefault();\n      onSubmit(e as unknown as React.FormEvent<HTMLFormElement>);\n    }\n  };\n\n  const toggleTool = (id: string) => {\n    setDisabledTools(prev =>\n      prev.includes(id)\n        ? prev.filter(name => name !== id)\n        : [...prev, id]\n    );\n  };\n\n  const writeAccess = checkChatSessionWriteAccess(session, user);\n\n  const updateMessageFiles = async (items: Item[]) => {\n    const files = await Promise.all(items.map(async (item) => {\n\n      if (!item.s3key) {\n        // Take all item fields and turn into a data url\n        let content = \"\";\n        Object.entries(item).forEach(([key, value]) => {\n          content += `${key}: ${value}\\n`\n        })\n        return {\n          type: \"file\" as const,\n          mediaType: item.type,\n          filename: item.name,\n          url: `data:text/plain;base64,${btoa(content)}`\n        }\n      }\n\n      return {\n        type: \"file\" as const,\n        mediaType: item.type,\n        filename: item.name,\n        url: await getPresignedUrl(item.s3key)\n      }\n\n    }))\n    setFiles(files)\n  }\n\n  useEffect(() => {\n    if (!items) {\n      setFiles(null)\n      return;\n    }\n    updateMessageFiles(items.map(item => ({\n      s3key: item,\n      name: item,\n      type: \"file\"\n    })))\n  }, [items])\n\n  return (\n    <div className=\"flex flex-col w-full\">\n      <div className=\"mx-auto relative size-full\">\n        <div className=\"flex h-full w-full\">\n          {/* Main conversation area */}\n          <div className=\"flex flex-col flex-1 pb-6\">\n            {/* @ts-ignore */}\n            <Conversation className=\"overflow-y-hidden\">\n              {/* Save as Workflow button - appears when conversation has content */}\n              {canCreateWorkflow ? (\n                <div className=\"flex justify-between absolute top-0 left-0 right-0 items-center px-4 py-2 border-b z-10 dark:bg-black bg-white\">\n                  <div className=\"flex items-center gap-2 text-sm text-muted-foreground\">\n                    <Workflow className=\"w-4 h-4\" />\n                    Turn this conversation into a reusable workflow\n                  </div>\n                  <Button\n                    variant=\"outline\"\n                    size=\"sm\"\n                    onClick={() => setShowSaveWorkflowModal(true)}\n                  >\n                    <Plus className=\"w-4 h-4 mr-2\" />\n                    Save as Workflow\n                  </Button>\n                </div>\n              ) : null}\n              {\n                /* Show a bar that fills up depending on the total tokens used */\n                agent.maxContextLength ? (\n                <TooltipProvider>\n                  <Tooltip>\n                    <TooltipTrigger asChild>\n                      <div className={`absolute w-full ${canCreateWorkflow ? 'top-10' : 'top-0'}`}>\n                        <Progress className=\"w-full rounded-none\" value={tokenCounts.totalTokens / agent.maxContextLength * 100} />\n                        <div className=\"justify-between flex felx-row\">\n                          <div></div>\n                          <Context\n                            maxTokens={agent.maxContextLength || 0}\n                            usedTokens={tokenCounts.totalTokens}\n                            usage={{\n                              inputTokens: tokenCounts.inputTokens,\n                              outputTokens: tokenCounts.outputTokens,\n                              totalTokens: tokenCounts.totalTokens,\n                              cachedInputTokens: tokenCounts.cachedInputTokens,\n                              reasoningTokens: tokenCounts.reasoningTokens,\n                            }}>\n                            <ContextTrigger />\n                            <ContextContent>\n                              <ContextContentHeader />\n                              <ContextContentBody>\n                                {/* @ts-ignore */}\n                                <ContextInputUsage />\n                                {/* @ts-ignore */}\n                                <ContextOutputUsage />\n                                {/* @ts-ignore */}\n                                <ContextReasoningUsage />\n                                {/* @ts-ignore */}\n                                <ContextCacheUsage />\n                              </ContextContentBody>\n                            </ContextContent>\n                          </Context>\n                        </div>\n                      </div>\n                    </TooltipTrigger>\n                    <TooltipContent>\n                      <p>{Intl.NumberFormat('en-US').format(tokenCounts.totalTokens)} / {Intl.NumberFormat('en-US').format(agent.maxContextLength)} tokens in the context window used.</p>\n                    </TooltipContent>\n                  </Tooltip>\n                </TooltipProvider>\n              ) : null}\n              {messages?.length === 0 ?\n                <div className=\"size-full flex justify-center items-center\">\n                  <div className=\"flex flex-col gap-4 items-center max-w-2xl w-full px-4 my-auto\">\n                    <img\n                      src={configContext?.backend + \"/logo.png\"}\n                      alt=\"AI\"\n                      width={120}\n                      height={120}\n                      className=\"h-30 w-40 object-contain\" /*invert dark:invert-0*/\n                    />\n                    <p className=\"text-center text-lg text-muted-foreground\">\n                      How can I help you today?\n                    </p>\n\n                    <AgentVisual agent={agent} status={status} />\n\n                    {/* Workflow Banner for new users */}\n                    <Card className=\"w-full mb-6\">\n                      <CardHeader className=\"text-center\">\n                        <CardTitle className=\"flex items-center justify-center gap-2\">\n                          <Workflow className=\"w-5 h-5\" />\n                          Create Reusable Workflows\n                        </CardTitle>\n                        <CardDescription>\n                          Turn your conversations into templates that can be reused with different inputs. Perfect for recurring tasks and processes.\n                        </CardDescription>\n                      </CardHeader>\n                      <CardContent className=\"text-center\">\n                        <Button\n                          variant=\"outline\"\n                          size=\"sm\"\n                          disabled\n                          className=\"text-muted-foreground\"\n                        >\n                          <Plus className=\"w-4 h-4 mr-2\" />\n                          Save as Workflow\n                          <span className=\"ml-2 text-xs\">(Available after chatting)</span>\n                        </Button>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </div> : null}\n              {/* @ts-ignore */}\n              <ConversationContent className=\"px-6\">\n                {messages?.length > 0 && (\n                  <MessageRenderer\n                    messages={messages}\n                    config={{\n                      marginTopFirstMessage: 'mt-12'\n                    }}\n                    status={status}\n                    onRegenerate={regenerate}\n                    onAddToolResult={addToolResult}\n                    UntypedToolPartComponent={UntypedToolPart}\n                    addToContext={(item) => {\n                      setItems([...(items || []), item])\n                    }}\n                    writeAccess={writeAccess}\n                  />\n                )}\n\n                {status === \"streaming\" ? <Loader /> : null}\n\n              </ConversationContent>\n            </Conversation>\n            {\n              !writeAccess && (\n                <div className=\"px-6 mx-auto mt-3\">\n                  <Badge variant=\"outline\">Read access only</Badge>\n                </div>\n              )\n            }\n            {error && (\n              <div className=\"mx-5\">\n                <Alert className=\"mb-3\" variant=\"destructive\">\n                  <ExclamationTriangleIcon className=\"size-4\" />\n                  <AlertTitle>Error</AlertTitle>\n                  <AlertDescription>\n                    {error}\n                  </AlertDescription>\n                </Alert>\n              </div>\n            )}\n            {writeAccess && (\n              <form\n                onSubmit={onSubmit}\n                className=\"px-6 border-input border rounded flex mx-5 p-5 flex-col gap-2\">\n                <div className=\"items-center flex relative gap-2 w-full\">\n                  <UppyDashboard\n                    id={`chat-${session.id}`}\n                    selectionLimit={10}\n                    allowedFileTypes={[\n                      ...agent.capabilities?.audio || [],\n                      ...agent.capabilities?.video || [],\n                      ...agent.capabilities?.files || [],\n                      ...agent.capabilities?.images || [],\n                    ]}\n                    dependencies={[]}\n                    onConfirm={(items) => {\n                      setItems(items)\n                    }}\n                  />\n                  <TextareaAutosize\n                    autoComplete=\"off\"\n                    autoFocus={true}\n                    minRows={1}\n                    value={input}\n                    ref={inputRef}\n                    onKeyDown={handleKeyPress}\n                    onChange={(e) => setInput(e.target.value)}\n                    name=\"message\"\n                    placeholder={`Ask me anything...`}\n                    className=\"max-h-40 px-3 py-2 text-sm shadow-sm placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-1 focus-visible:ring-ring disabled:cursor-not-allowed disabled:opacity-50 w-full items-center h-28 resize-none overflow-hidden dark:bg-card/35\"\n                  />\n                  {status !== \"streaming\" ? (\n                    <Button\n                      className=\"shrink-0\"\n                      variant=\"secondary\"\n                      size=\"icon\"\n                      disabled={status === \"submitted\" || !input?.trim()}\n                    >\n                      <ArrowUp className=\" size-6 text-muted-foreground\" />\n                    </Button>\n                  ) : (\n                    <Button\n                      className=\"shrink-0\"\n                      variant=\"secondary\"\n                      size=\"icon\"\n                      onClick={stop}\n                    >\n                      <StopIcon className=\"size-6 text-muted-foreground\" />\n                    </Button>\n                  )}\n                </div>\n                <div className=\"grid grid-cols-3 sm:grid-cols-4 gap-3\">\n                  {/* Show  selected files */}\n                  {items?.map((item) => (\n                    <FileItem s3Key={item} disabled={true} active={false} onRemove={() => {\n                      setItems(items?.filter((i) => i !== item))\n                    }} />\n                  ))}\n                </div>\n              </form>\n            )}\n            {/* Save Workflow Modal */}\n            <SaveWorkflowModal\n              isOpen={showSaveWorkflowModal}\n              onClose={() => setShowSaveWorkflowModal(false)}\n              messages={messages || []}\n              sessionTitle={session.title}\n            />\n          </div>\n\n          {/* Agent Details Sidebar */}\n          {writeAccess && (\n            <div className=\"w-80 border-l bg-muted/20 p-4 space-y-4\">\n              {\n                messages?.length > 0 && (\n                  <div>\n                    <AgentVisual agent={agent} status={status} />\n                  </div>\n                )\n              }\n              <div>\n                <p className=\"text-sm font-medium text-center\">{agent.name}</p>\n              </div>\n              {agent.description && (\n                <p className=\"text-xs text-muted-foreground mt-1\">\n                  {agent.description}\n                </p>\n              )}\n              <hr className=\"my-2\" />\n              <div className=\"mt-1\">\n                <div className=\"border rounded\">\n                  {\n                    creatorQuery.loading && (\n                      <div className=\"flex flex-row justify-between p-3\">\n                        <p className=\"text-sm font-medium\">Session created by</p>\n                        <Loading className=\"ml-2\" />\n                      </div>\n                    )\n                  }\n                  {creatorQuery.data?.userById && !creatorQuery.loading && (\n                    <div className=\"flex flex-row justify-between p-3\">\n                      <p className=\"text-sm font-medium\">Session created by</p>\n                      <div className=\"flex items-center gap-2 text-xs text-muted-foreground\">\n                        <p className=\"text-sm font-medium capitalize\">{creatorQuery.data.userById.name}</p>\n                      </div>\n                    </div>\n                  )}\n                </div>\n              </div>\n              <div>\n                <p className=\"text-xs font-medium text-muted-foreground pt-2\">\n                  You can disable tools for individual messages in this session by clicking the switch:</p>\n                <TooltipProvider>\n                  <div className=\"space-y-1 pt-2\">\n                    {agent.tools && agent.tools.length > 0 ? (\n                      agent.tools.map((tool) => {\n                        const isEnabled = !disabledTools.includes(tool.id);\n                        return (\n                          <Tooltip key={tool.name}>\n                            <TooltipTrigger asChild>\n                              <div className=\"p-2 rounded-md border text-xs bg-background flex items-center justify-between\">\n                                <p className=\"font-medium flex items-center gap-2\">\n                                  {tool.name}\n                                </p>\n                                <Switch\n                                  checked={isEnabled}\n                                  onCheckedChange={() => toggleTool(tool.id)}\n                                />\n                              </div>\n                            </TooltipTrigger>\n                            <TooltipContent>\n                              <p className=\"max-w-[200px] text-wrap\">{tool.description}</p>\n                            </TooltipContent>\n                          </Tooltip>\n                        );\n                      })\n                    ) : (\n                      <p className=\"text-xs text-muted-foreground\">No tools enabled.</p>\n                    )}\n                  </div>\n                </TooltipProvider>\n              </div>\n              <div className=\"mt-1\">\n                <Collapsible className=\"border rounded\">\n                  <CardHeader className=\"px-3 py-1\">\n                    <div className=\"flex items-center justify-between\">\n                      <div className=\"flex flex-col\">\n                        <p className=\"text-sm font-medium\">\n                          Access control ({session.rights_mode})\n                        </p>\n                      </div>\n                      <CollapsibleTrigger asChild>\n                        <Button variant=\"ghost\" size=\"icon\" className=\"size-8\">\n                          <ChevronsUpDown className=\"size-4\" />\n                          <span className=\"sr-only\">Toggle</span>\n                        </Button>\n                      </CollapsibleTrigger>\n                    </div>\n                  </CardHeader>\n                  <CollapsibleContent>\n                    <CardContent className=\"space-y-4 p-3\">\n                      <RBACControl\n                        allowedModes={['private', 'users', 'roles', 'projects']}\n                        initialRightsMode={session.rights_mode}\n                        initialUsers={session.RBAC?.users}\n                        initialRoles={session.RBAC?.roles}\n                        initialProjects={session.RBAC?.projects}\n                        onChange={(rights_mode, users, roles, projects) => {\n                          setRbac({\n                            rights_mode,\n                            users,\n                            roles,\n                            projects\n                          })\n                        }}\n                      />\n                      <Button disabled={updateAgentSessionRbacResult.loading} onClick={() => {\n                        updateAgentSessionRbac({\n                          variables: {\n                            id: session.id,\n                            rights_mode: rbac.rights_mode,\n                            RBAC: {\n                              users: rbac.users,\n                              roles: rbac.roles,\n                              projects: rbac.projects\n                            }\n                          }\n                        })\n                      }}>Save access rights {updateAgentSessionRbacResult.loading && <Loading className=\"ml-2\" />} </Button>\n                    </CardContent>\n                  </CollapsibleContent>\n                </Collapsible>\n              </div>\n            </div>\n          )}\n        </div>\n      </div>\n    </div>\n  );\n}\n\n\nconst UntypedToolPart = ({ untypedToolPart, callId, addToContext }: { untypedToolPart: DynamicToolUIPart, callId: string, addToContext: (item: string) => void }) => {\n\n  const output = untypedToolPart.output as any;\n  console.log(\"output\", output)\n  // Replace - and _, replace 'tool-' prefix\n  let styleToolName = untypedToolPart.type?.replace(/ /g, \"-\")\n  styleToolName = styleToolName?.replace(/tool-/g, \"\")\n  styleToolName = styleToolName?.replace(/_/g, \" \")\n  styleToolName = styleToolName?.charAt(0).toUpperCase() + styleToolName?.slice(1)\n\n  return <Tool key={callId} className=\"mt-3\" defaultOpen={false}>\n    <ToolHeader className=\"capitalize\" type={styleToolName as `tool-${string}`} state={untypedToolPart.state} />\n    <ToolContent>\n      <ToolInput input={untypedToolPart.input} />\n      {\n        output?.items?.length ? <div className=\"grid grid-cols-3 sm:grid-cols-4 gap-3 px-4 pb-4\">\n          {output.items.map((item) => <FileItem addToContext={(item) => {\n            addToContext(item)\n          }} s3Key={item} disabled={true} active={false} />)}\n        </div> :\n          <ToolOutput\n            output={\n              output ?\n                <Response>\n                  {typeof output === 'string' ?\n                    output : JSON.stringify(output, null, 2)\n                  }\n                </Response>\n                : !untypedToolPart.errorText && <Skeleton className=\"h-4 w-full\" />\n            }\n            errorText={untypedToolPart.errorText}\n          />\n      }\n    </ToolContent>\n  </Tool>\n}","\"use client\"\n\nimport * as React from \"react\";\nimport { ChatLayout } from \"@/app/(application)/chat/[agent]/[session]/chat\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\nimport { ExclamationTriangleIcon } from \"@radix-ui/react-icons\";\nimport { Agent } from \"@EXULU_SHARED/models/agent\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_AGENT_BY_ID, GET_AGENT_SESSION_BY_ID } from \"@/queries/queries\";\nimport { AgentSession } from \"@/types/models/agent-session\";\n\nexport const dynamic = \"force-dynamic\";\n\nexport default function SessionsPage({\n  params,\n}: {\n  params: { session: string, agent: string };\n}) {\n\n  const { data: agentData, loading: agentLoading, error: agentError } = useQuery<{\n    agentById: Agent\n  }>(GET_AGENT_BY_ID, {\n    variables: {\n      id: params.agent,\n    },\n  });\n\n  const { data: sessionData, loading: sessionLoading, error: sessionError } = useQuery<{\n    agent_sessionById: AgentSession;\n  }>(GET_AGENT_SESSION_BY_ID, {\n    returnPartialData: true,\n    fetchPolicy: \"network-only\",\n    nextFetchPolicy: \"network-only\",\n    variables: {\n      id: params.session\n    },\n  });\n\n  if (sessionLoading || agentLoading) {\n    return <div>\n      <Skeleton className=\"w-full h-full\" />\n    </div>\n  }\n\n  if (sessionError || agentError) {\n    return <Alert variant=\"destructive\">\n      <ExclamationTriangleIcon className=\"size-4\" />\n      <AlertTitle>Error</AlertTitle>\n      <AlertDescription>\n        Error loading agent {agentError?.message || sessionError?.message}.\n      </AlertDescription>\n    </Alert>\n  }\n\n  if (!agentData?.agentById || !sessionData?.agent_sessionById) {\n    return <Alert variant=\"destructive\">\n      <ExclamationTriangleIcon className=\"size-4\" />\n      <AlertTitle>Error</AlertTitle>\n      <AlertDescription>\n        Agent or session not found.\n      </AlertDescription>\n    </Alert>\n  }\n\n  return <ChatLayout session={sessionData?.agent_sessionById} agent={agentData.agentById} />;\n}\n","\"use client\";\n\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className,\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\",\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n","import { AgentSession } from \"@/types/models/agent-session\";\nimport { UserWithRole } from \"@/types/models/user\";\n\nexport const checkChatSessionWriteAccess = (session: AgentSession, user: UserWithRole) => {\n    const isPrivate = session.rights_mode === 'private';\n    const isPublic = session.rights_mode === 'public';\n    const byUsers = session.rights_mode === 'users';\n    const byRoles = session.rights_mode === 'roles';\n    const isAdmin = user.super_admin;\n    const isCreator = session.created_by === user.id.toString();\n  \n    let writeAccess = false;\n    if (isPrivate && isCreator) {\n      writeAccess = true;\n    }\n    if (isPublic) {\n      writeAccess = true;\n    }\n    if (byUsers) {\n      writeAccess = session.RBAC?.users?.find(u => u.id === user.id)?.rights === 'write';\n    }\n    if (byRoles) {\n      writeAccess = session.RBAC?.roles?.find(r => r.id === user.role?.id)?.rights === 'write';\n    }\n    if (isAdmin) {\n      writeAccess = true;\n    }\n    return writeAccess;\n}"],"names":["Promise","resolve","then","__webpack_require__","bind","LoaderIcon","size","param","jsx_runtime","jsxs","svg","height","strokeLinejoin","style","color","viewBox","width","jsx","title","g","clipPath","path","d","stroke","strokeWidth","opacity","defs","id","rect","fill","Loader","className","props","div","cn","HoverCard","HoverCardPrimitive","HoverCardTrigger","HoverCardContent","React","ref","align","sideOffset","displayName","Progress","value","ProgressPrimitive","transform","concat","ContextContext","createContext","useContextValue","context","useContext","Context","usedTokens","maxTokens","usage","modelId","Provider","closeDelay","openDelay","ContextIcon","circumference","Math","PI","aria-label","role","ICON_VIEWBOX","circle","cx","cy","r","strokeDasharray","strokeDashoffset","usedPercent","strokeLinecap","transformOrigin","ContextTrigger","children","renderedPercent","Intl","NumberFormat","maximumFractionDigits","format","asChild","Button","type","variant","span","ContextContent","ContextContentHeader","displayPct","used","notation","total","Fragment","p","ContextContentBody","ContextInputUsage","inputTokens","inputCost","estimateCost","input","output","totalUSD","undefined","inputCostText","currency","TokensWithCost","costText","tokens","ContextOutputUsage","outputTokens","outputCost","outputCostText","ContextReasoningUsage","reasoningTokens","reasoningCost","reasoningCostText","ContextCacheUsage","cacheTokens","cachedInputTokens","cacheCost","cacheReads","cacheCostText","Tool","Collapsible","getStatusBadge","icons","CircleIcon","ClockIcon","CheckCircleIcon","XCircleIcon","Badge","status","labels","ToolHeader","state","CollapsibleTrigger","WrenchIcon","ChevronDownIcon","ToolContent","CollapsibleContent","ToolInput","h4","CodeBlock","code","JSON","stringify","language","ToolOutput","errorText","lottie","agent","agentIdle","image","img","src","alt","name","charAt","toUpperCase","ChatLayout","session","creatorQuery","error","setError","useState","configContext","ConfigContext","useIsMobile","files","setFiles","items","setItems","user","UserContext","copyingTableId","setCopyingTableId","showSaveWorkflowModal","setShowSaveWorkflowModal","setInput","disabledTools","setDisabledTools","inputRef","toast","useToast","rbac","setRbac","rights_mode","users","RBAC","roles","projects","useQuery","GET_USER_BY_ID","variables","created_by","skip","updateAgentSessionRbac","updateAgentSessionRbacResult","useMutation","UPDATE_AGENT_SESSION_RBAC","tokenCounts","setTokenCounts","totalTokens","GET_AGENT_MESSAGES","returnPartialData","fetchPolicy","nextFetchPolicy","page","limit","filters","eq","onCompleted","data","agent_messagesPagination","setMessages","map","parse","item","content","messages","sendMessage","stop","regenerate","addToolResult","useChat","sendAutomaticallyWhen","lastAssistantMessageIsCompleteWithToolCalls","experimental_throttle","onToolCall","toolCall","dynamic","toolName","cities","tool","toolCallId","floor","random","length","onError","console","log","message","x","transport","DefaultChatTransport","api","backend","slug","prepareSendMessagesRequest","chatId","body","token","getToken","headers","User","Session","Authorization","Stream","useEffect","totalCount","reduce","acc","messageMetadata","metadata","reasoningCount","canCreateWorkflow","useMemo","userMessages","filter","m","assistantMessages","onSubmit","e","options","preventDefault","text","toggleTool","prev","includes","writeAccess","checkChatSessionWriteAccess","updateMessageFiles","all","s3key","Object","entries","forEach","key","mediaType","filename","url","btoa","getPresignedUrl","Conversation","Workflow","onClick","Plus","maxContextLength","TooltipProvider","Tooltip","TooltipTrigger","TooltipContent","AgentVisual","Card","CardHeader","CardTitle","CardDescription","CardContent","disabled","ConversationContent","MessageRenderer","config","marginTopFirstMessage","onRegenerate","onAddToolResult","UntypedToolPartComponent","UntypedToolPart","addToContext","Alert","ExclamationTriangleIcon","AlertTitle","AlertDescription","form","UppyDashboard","selectionLimit","allowedFileTypes","capabilities","audio","video","images","dependencies","onConfirm","TextareaAutosize","autoComplete","autoFocus","minRows","onKeyDown","shiftKey","onChange","target","placeholder","trim","ArrowUp","StopIcon","FileItem","s3Key","active","onRemove","i","SaveWorkflowModal","isOpen","onClose","sessionTitle","description","hr","loading","Loading","userById","tools","isEnabled","Switch","checked","onCheckedChange","ChevronsUpDown","RBACControl","allowedModes","initialRightsMode","initialUsers","initialRoles","initialProjects","untypedToolPart","callId","styleToolName","replace","slice","defaultOpen","Response","Skeleton","SessionsPage","params","agentData","agentLoading","agentError","GET_AGENT_BY_ID","sessionData","sessionLoading","sessionError","GET_AGENT_SESSION_BY_ID","agentById","agent_sessionById","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","SwitchPrimitives","isPrivate","isPublic","byUsers","byRoles","isAdmin","super_admin","isCreator","toString","find","u","rights"],"sourceRoot":""}