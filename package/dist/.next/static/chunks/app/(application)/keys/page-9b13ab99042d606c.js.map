{"version":3,"file":"static/chunks/app/(application)/keys/page-9b13ab99042d606c.js","mappings":"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","sources":["webpack://_N_E/ignored|/Users/daniel.claessen/Desktop/Projects/exulu/frontend/node_modules/bcryptjs|crypto","webpack://_N_E/?ae9b","webpack://_N_E/./app/(application)/keys/page.tsx","webpack://_N_E/./components/ui/alert.tsx","webpack://_N_E/./components/ui/badge.tsx","webpack://_N_E/./components/ui/card.tsx","webpack://_N_E/./components/ui/input.tsx"],"sourcesContent":["/* (ignored) */","import(/* webpackMode: \"eager\" */ \"/Users/daniel.claessen/Desktop/Projects/exulu/frontend/app/(application)/keys/page.tsx\");\n","\"use client\"\nimport { useState } from \"react\"\nimport { Copy, Key, Loader2, Plus, Trash2 } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport { Input } from \"@/components/ui/input\"\nimport { format } from \"date-fns\"\nimport { Card, CardContent, CardDescription, CardFooter, CardHeader, CardTitle } from \"@/components/ui/card\"\nimport { Table, TableBody, TableCell, TableHead, TableHeader, TableRow } from \"@/components/ui/table\"\nimport {\n    Dialog,\n    DialogContent,\n    DialogDescription,\n    DialogFooter,\n    DialogHeader,\n    DialogTitle,\n    DialogTrigger,\n} from \"@/components/ui/dialog\"\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\"\nimport { Badge } from \"@/components/ui/badge\"\nimport { toast } from \"@/components/ui/use-toast\"\nimport { RoleSelector } from \"@/components/ui/role-selector\"\nimport {useMutation, useQuery} from \"@apollo/client\";\nimport {CREATE_API_USER, GET_USERS, REMOVE_USER_BY_ID, UPDATE_USER_BY_ID} from \"@/queries/queries\";\nimport bcrypt from \"bcryptjs\";\nconst SALT_ROUNDS = 12;\n// we dont decrypt, as we only show the key once to the user\n\n// Type for API key\ninterface ApiKey {\n    id: string\n    name: string\n    key: string\n    createdAt: Date\n    last_used?: Date\n}\n\nexport default function ApiKeyManagement() {\n\n    const [newKeyName, setNewKeyName] = useState(\"\")\n    const [selectedRole, setSelectedRole] = useState<string>(\"\")\n    const [isGenerating, setIsGenerating] = useState(false)\n    const [newlyGeneratedKey, setNewlyGeneratedKey] = useState<ApiKey | null>(null)\n    const [deleteKeyId, setDeleteKeyId] = useState<string | null>(null)\n\n    const { loading, error, data, refetch, previousData } = useQuery(GET_USERS, {\n        fetchPolicy: \"cache-first\",\n        nextFetchPolicy: \"network-only\",\n        variables: {\n            page: 1,\n            limit: 10,\n            filters: [{\n                type: { eq: \"api\"}\n            }],\n        },\n        pollInterval: 30000, // polls every 30 seconds for updates on users\n    });\n\n    console.log(\"data\", data)\n\n    // Generate new API key\n    const generateApiKey = async () => {\n        if (!newKeyName.trim()) {\n            toast({\n                title: \"Error\",\n                description: \"Please enter a name for your API key\",\n                variant: \"destructive\",\n            })\n            return\n        }\n\n        setIsGenerating(true)\n\n        const plainKey = `sk_${Math.random().toString(36).substring(2, 15)}_${Math.random().toString(36).substring(2, 15)}`;\n        const postFix = `/${newKeyName.toLowerCase().trim().replaceAll(\" \", \"_\")}`\n        const encryptedKey = await bcrypt.hash(plainKey, SALT_ROUNDS);\n        const response = await createApiUser({\n            variables: {\n                firstname: `${newKeyName}`,\n                type: \"api\",\n                apikey: `${encryptedKey}${postFix}`,\n                email: `${encryptedKey}@exulu-api-user.com`,\n                role: selectedRole || undefined\n            }\n        })\n\n        console.log(\"response\", response)\n        setNewlyGeneratedKey({\n            id: `${response.data?.usersCreateOne?.item?.id}`,\n            name: newKeyName,\n            key: `${plainKey}${postFix}`,\n            createdAt: new Date()\n        })\n        setNewKeyName(\"\")\n        setSelectedRole(\"\")\n        setIsGenerating(false)\n    }\n\n    const [removeApiUser, removeApiUserResult] = useMutation(REMOVE_USER_BY_ID, {\n        refetchQueries: [\n            GET_USERS,\n            \"GetUsers\",\n        ],\n    });\n\n    const [ createApiUser, createApiUserResult] = useMutation(CREATE_API_USER, {\n        refetchQueries: [\n            GET_USERS, \n            \"GetUsers\",\n        ],\n    });\n\n    const [ updateUser, updateUserResult] = useMutation(UPDATE_USER_BY_ID, {\n        refetchQueries: [\n            GET_USERS, \n            \"GetUsers\",\n        ],\n    });\n\n    // Copy API key to clipboard\n    const copyToClipboard = (text: string) => {\n        navigator.clipboard.writeText(text)\n        toast({\n            title: \"Copied!\",\n            description: \"API key copied to clipboard\",\n        })\n    }\n\n    // Delete API key\n    const deleteApiKey = async (id: string) => {\n        await removeApiUser({\n            variables: {\n                id\n            }\n        })\n        setDeleteKeyId(null)\n        toast({\n            title: \"Deleted\",\n            description: \"API key has been deleted\",\n        })\n    }\n\n    // Update API key role\n    const updateApiKeyRole = async (userId: string, roleId: string) => {\n        try {\n            await updateUser({\n                variables: {\n                    id: userId,\n                    role: roleId || null\n                }\n            })\n            toast({\n                title: \"Updated\",\n                description: \"API key role has been updated\",\n            })\n        } catch (error) {\n            toast({\n                title: \"Error\",\n                description: \"Failed to update API key role\",\n                variant: \"destructive\",\n            })\n        }\n    }\n\n    return (\n        <div className=\"container mx-auto py-6 space-y-8 max-w-5xl\">\n            <div className=\"flex flex-col gap-2\">\n                <h1 className=\"text-3xl font-bold tracking-tight\">API Keys</h1>\n                <p className=\"text-muted-foreground\">\n                    Manage your API keys for accessing the Exulu IMP API. Keep your keys secure - they have full access to your account.\n                </p>\n            </div>\n\n            {/* Create new API key */}\n            <Card>\n                <CardHeader>\n                    <CardTitle>Create API Key</CardTitle>\n                    <CardDescription>\n                        Generate a new API key for your applications. API keys provide full access to your account.\n                    </CardDescription>\n                </CardHeader>\n                <CardContent>\n                    <div className=\"flex flex-col gap-4\">\n                        <div className=\"flex flex-col gap-4 sm:flex-row\">\n                            <Input\n                                placeholder=\"API Key Name (e.g. Production, Development)\"\n                                value={newKeyName}\n                                onChange={(e) => setNewKeyName(e.target.value)}\n                                className=\"flex-1\"\n                            />\n                            <div className=\"sm:w-64\">\n                                <RoleSelector\n                                    value={selectedRole}\n                                    onChange={setSelectedRole}\n                                    placeholder=\"Select role\"\n                                />\n                            </div>\n                        </div>\n                        <Button\n                            onClick={generateApiKey}\n                            disabled={isGenerating || !newKeyName.trim()}\n                            className=\"whitespace-nowrap self-start\"\n                        >\n                            {isGenerating ? (\n                                <>\n                                    <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" />\n                                    Generating...\n                                </>\n                            ) : (\n                                <>\n                                    <Plus className=\"mr-2 h-4 w-4\" />\n                                    Generate API Key\n                                </>\n                            )}\n                        </Button>\n                    </div>\n                </CardContent>\n            </Card>\n\n            {/* Newly generated key alert */}\n            {newlyGeneratedKey && (\n                <Alert className=\"border-green-500 bg-green-50 dark:bg-green-950 dark:border-green-900\">\n                    <Key className=\"h-4 w-4 text-green-600 dark:text-green-400\" />\n                    <AlertTitle className=\"text-green-600 dark:text-green-400\">New API Key Generated</AlertTitle>\n                    <AlertDescription className=\"mt-4\">\n                        <div className=\"mb-2 text-sm text-muted-foreground\">\n                            <strong>Important:</strong> This key will only be displayed once. Please copy it now and store it\n                            securely.\n                        </div>\n                        <div className=\"flex items-center gap-2 mt-2\">\n                            <code className=\"relative rounded bg-muted px-[0.5rem] py-[0.3rem] font-mono text-sm font-semibold overflow-x-auto max-w-[calc(100%-40px)]\">\n                                {newlyGeneratedKey.key}\n                            </code>\n                            <Button\n                                variant=\"outline\"\n                                size=\"icon\"\n                                onClick={() => copyToClipboard(newlyGeneratedKey.key)}\n                                className=\"h-8 w-8 flex-shrink-0\"\n                            >\n                                <Copy className=\"h-4 w-4\" />\n                            </Button>\n                        </div>\n                        <Button\n                            variant=\"link\"\n                            className=\"mt-2 h-auto p-0 text-green-600 dark:text-green-400\"\n                            onClick={() => setNewlyGeneratedKey(null)}\n                        >\n                            Dismiss\n                        </Button>\n                    </AlertDescription>\n                </Alert>\n            )}\n\n            {/* API keys list */}\n            <Card>\n                <CardHeader>\n                    <CardTitle>Your API Keys</CardTitle>\n                    <CardDescription>\n                        Manage your existing API keys. For security, API keys are never displayed in full after creation.\n                    </CardDescription>\n                </CardHeader>\n                <CardContent>\n                    {data?.usersPagination?.items?.length === 0 ? (\n                        <div className=\"text-center py-6 text-muted-foreground\">\n                            No API keys found. Generate your first key above.\n                        </div>\n                    ) : (\n                        <div className=\"overflow-x-auto\">\n                            <Table>\n                                <TableHeader>\n                                    <TableRow>\n                                        <TableHead>Name</TableHead>\n                                        <TableHead>Key</TableHead>\n                                        <TableHead>Role</TableHead>\n                                        <TableHead>Created</TableHead>\n                                        <TableHead>Last Used</TableHead>\n                                        <TableHead className=\"text-right\">Actions</TableHead>\n                                    </TableRow>\n                                </TableHeader>\n                                <TableBody>\n                                    {data?.usersPagination?.items?.map((user: any) => (\n                                        <TableRow key={user.id}>\n                                            <TableCell className=\"font-medium\">{user.name || user.firstname}</TableCell>\n                                            <TableCell>\n                                                <div className=\"flex items-center gap-2\">\n                                                    <code className=\"bg-muted px-1 py-0.5 rounded text-xs\">****************</code>\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>\n                                                <div className=\"w-48\">\n                                                    <RoleSelector\n                                                        value={user.role}\n                                                        onChange={(roleId) => updateApiKeyRole(user.id, roleId)}\n                                                        placeholder=\"No role assigned\"\n                                                    />\n                                                </div>\n                                            </TableCell>\n                                            <TableCell>{format(new Date(user.createdAt), \"PP hh:mm\")}</TableCell>\n                                            <TableCell>\n                                                {user.last_used ? (format(new Date(user.last_used), \"PP hh:mm\")) : (\n                                                    <Badge variant=\"outline\" className=\"text-xs\">\n                                                        Never\n                                                    </Badge>\n                                                )}\n                                            </TableCell>\n                                            <TableCell className=\"text-right\">\n                                                <Dialog\n                                                    open={deleteKeyId === user.id}\n                                                    onOpenChange={(open) => {\n                                                        if (!open) setDeleteKeyId(null)\n                                                        if (open) setDeleteKeyId(user.id)\n                                                    }}>\n                                                    <DialogTrigger asChild>\n                                                        <Button\n                                                            variant=\"ghost\"\n                                                            size=\"icon\"\n                                                            className=\"h-8 w-8 text-red-500 hover:text-red-600 hover:bg-red-50 dark:hover:bg-red-950\"\n                                                        >\n                                                            <Trash2 className=\"h-4 w-4\" />\n                                                        </Button>\n                                                    </DialogTrigger>\n                                                    <DialogContent>\n                                                        <DialogHeader>\n                                                            <DialogTitle>Delete API Key</DialogTitle>\n                                                            <DialogDescription>\n                                                                Are you sure you want to delete the API key \"{user.name || user.firstname}\"? This action cannot be\n                                                                undone.\n                                                            </DialogDescription>\n                                                        </DialogHeader>\n                                                        <DialogFooter>\n                                                            <Button variant=\"outline\" onClick={() => setDeleteKeyId(null)}>\n                                                                Cancel\n                                                            </Button>\n                                                            <Button variant=\"destructive\" onClick={() => deleteApiKey(user.id)}>\n                                                                Delete API Key\n                                                            </Button>\n                                                        </DialogFooter>\n                                                    </DialogContent>\n                                                </Dialog>\n                                            </TableCell>\n                                        </TableRow>\n                                    ))}\n                                </TableBody>\n                            </Table>\n                        </div>\n                    )}\n                </CardContent>\n                <CardFooter className=\"text-xs text-muted-foreground border-t pt-4\">\n                    API keys grant full access to your account. Keep them secure and rotate them regularly.\n                </CardFooter>\n            </Card>\n        </div>\n    )\n}\n","import { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        info: \"border-info/50 text-info dark:border-info [&>svg]:text-info\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n));\nAlert.displayName = \"Alert\";\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nAlertTitle.displayName = \"AlertTitle\";\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n));\nAlertDescription.displayName = \"AlertDescription\";\n\nexport { Alert, AlertTitle, AlertDescription };\n","import { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst badgeVariants = cva(\n  \"inline-flex items-center rounded-full border px-2.5 py-0.5 text-xs font-semibold transition-colors focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2\",\n  {\n    variants: {\n      variant: {\n        default:\n          \"border-transparent bg-primary text-primary-foreground hover:bg-primary/80\",\n        secondary:\n          \"border-transparent bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        destructive:\n          \"border-transparent bg-destructive text-destructive-foreground hover:bg-destructive/80\",\n        outline: \"text-foreground\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nexport interface BadgeProps\n  extends React.HTMLAttributes<HTMLDivElement>,\n    VariantProps<typeof badgeVariants> {}\n\nfunction Badge({ className, variant, ...props }: BadgeProps) {\n  return (\n    <div className={cn(badgeVariants({ variant }), className)} {...props} />\n  );\n}\n\nexport { Badge, badgeVariants };\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className,\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nexport interface InputProps\n  extends React.InputHTMLAttributes<HTMLInputElement> {}\n\nconst Input = React.forwardRef<HTMLInputElement, InputProps>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n          className,\n        )}\n        ref={ref}\n        {...props}\n      />\n    );\n  },\n);\nInput.displayName = \"Input\";\n\nexport { Input };\n"],"names":["Promise","resolve","then","__webpack_require__","bind","ApiKeyManagement","data","newKeyName","setNewKeyName","useState","selectedRole","setSelectedRole","isGenerating","setIsGenerating","newlyGeneratedKey","setNewlyGeneratedKey","deleteKeyId","setDeleteKeyId","loading","error","refetch","previousData","useQuery","GET_USERS","fetchPolicy","nextFetchPolicy","variables","page","limit","filters","type","eq","pollInterval","console","log","generateApiKey","response","trim","toast","title","description","variant","plainKey","Math","random","toString","substring","concat","postFix","toLowerCase","replaceAll","encryptedKey","bcrypt","createApiUser","firstname","apikey","email","role","undefined","id","usersCreateOne","item","name","key","createdAt","Date","removeApiUser","removeApiUserResult","useMutation","REMOVE_USER_BY_ID","refetchQueries","createApiUserResult","CREATE_API_USER","updateUser","updateUserResult","UPDATE_USER_BY_ID","copyToClipboard","navigator","clipboard","writeText","text","deleteApiKey","updateApiKeyRole","userId","roleId","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","div","className","jsx","h1","p","Card","CardHeader","CardTitle","CardDescription","CardContent","Input","placeholder","value","onChange","e","target","RoleSelector","Button","onClick","disabled","Fragment","Loader2","Plus","Alert","Key","AlertTitle","AlertDescription","strong","code","size","Copy","usersPagination","items","length","Table","TableHeader","TableRow","TableHead","TableBody","map","TableCell","user","format","last_used","Badge","Dialog","open","onOpenChange","DialogTrigger","asChild","Trash2","DialogContent","DialogHeader","DialogTitle","DialogDescription","DialogFooter","CardFooter","alertVariants","cva","variants","default","destructive","info","defaultVariants","React","param","ref","props","cn","displayName","h5","badgeVariants","secondary","outline","h3","input"],"sourceRoot":""}