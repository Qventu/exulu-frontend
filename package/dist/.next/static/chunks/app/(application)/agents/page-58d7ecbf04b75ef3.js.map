{"version":3,"file":"static/chunks/app/(application)/agents/page-58d7ecbf04b75ef3.js","mappings":"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","sources":["webpack://_N_E/?7451","webpack://_N_E/./app/(application)/agents/components/agent-card.tsx","webpack://_N_E/./app/(application)/agents/components/agent-backend-selector.tsx","webpack://_N_E/./app/(application)/agents/components/create-new-agent.tsx","webpack://_N_E/./app/(application)/agents/components/create-new-agent-card.tsx","webpack://_N_E/./app/(application)/agents/page.tsx","webpack://_N_E/./components/ui/alert.tsx","webpack://_N_E/./components/ui/card.tsx","webpack://_N_E/./components/ui/checkbox.tsx","webpack://_N_E/./components/ui/label.tsx","webpack://_N_E/./components/ui/loading.tsx","webpack://_N_E/./components/ui/select.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/daniel.claessen/Desktop/Projects/exulu/frontend/app/(application)/agents/page.tsx\");\n","\"use client\";\n\nimport { Agent } from \"@EXULU_SHARED//models/agent\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Card,\n  CardDescription,\n  CardHeader,\n  CardTitle,\n} from \"@/components/ui/card\";\nimport { Info } from \"lucide-react\";\n\ninterface AgentCardProps {\n  agent: Agent;\n  onSelect?: (agent: Agent) => void;\n  showDetails: (agent: Agent) => void;\n}\n\nexport function AgentCard({ agent, onSelect, showDetails }: AgentCardProps) {\n\n  const handleCardClick = () => {\n    if (onSelect) {\n      onSelect(agent);\n    }\n  };\n\n  const handleDetailsClick = (e: React.MouseEvent) => {\n    e.stopPropagation();\n    showDetails(agent);\n  };\n\n  // Truncate description to 200 characters\n  const truncatedDescription = agent.description\n    ? agent.description.length > 200\n      ? agent.description.substring(0, 200) + \"...\"\n      : agent.description\n    : \"No description available\";\n\n  return (\n    <>\n      <Card\n        className=\"cursor-pointer hover:shadow-md transition-shadow duration-200 h-full flex flex-col pb-3\"\n        onClick={handleCardClick}\n      >\n        <CardHeader className=\"pb-3\">\n          <div className=\"flex items-start gap-3\">\n            {/* Agent Profile Image */}\n            <div className=\"w-20 h-20 bg-gradient-to-br from-primary/20 to-primary/5 rounded-full flex items-center justify-center flex-shrink-0 overflow-hidden\">\n              {agent.image ? (\n                <img\n                  src={agent.image}\n                  alt={`${agent.name} agent`}\n                  className=\"w-full h-full object-cover rounded-full\"\n                />\n              ) : (\n                <div className=\"text-lg font-bold text-primary\">\n                  {agent.name?.charAt(0).toUpperCase() || 'A'}\n                </div>\n              )}\n            </div>\n\n            {/* Agent Info */}\n            <div className=\"flex-1 min-w-0\">\n              <div className=\"flex items-center justify-between mb-2\">\n                <CardTitle className=\"text-lg line-clamp-1 flex-1 min-w-0\">{agent.name}</CardTitle>\n                <div className=\"flex items-center gap-1 flex-shrink-0\">\n                  <Button\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    onClick={handleDetailsClick}\n                    className=\"p-1 h-auto\"\n                  >\n                    <Info className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n\n              <CardDescription className=\"text-sm line-clamp-2\">\n                {truncatedDescription}\n              </CardDescription>\n\n              <Badge\n                variant={agent.active ? \"default\" : \"secondary\"}\n                className=\"text-xs mt-2\"\n              >\n                {agent.active ? \"Active\" : \"Inactive\"}\n              </Badge>\n\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n    </>\n  );\n}","\"use client\";\n\nimport * as React from \"react\";\nimport { AgentBackend } from \"@EXULU_SHARED/models/agent-backend\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { useQuery } from \"@apollo/client\";\nimport { GET_PROVIDERS } from \"@/queries/queries\";\nimport { Input } from \"@/components/ui/input\";\n\nexport function AgentBackendSelector({\n  onSelect,\n}: any & { onSelect: (id) => void}) {\n\n  const [selected, setSelected] = React.useState<AgentBackend | undefined>();\n  const [searchTerm, setSearchTerm] = React.useState(\"\");\n  const searchInputRef = React.useRef<HTMLInputElement>(null);\n  const { loading: isLoading, error, data, refetch, previousData } = useQuery(GET_PROVIDERS, {\n    fetchPolicy: \"no-cache\",\n    nextFetchPolicy: \"network-only\",\n  });\n\n  let providers: AgentBackend[] = []\n  providers = data?.providers?.items || [];\n\n  const filteredProviders = providers.filter((provider) =>\n    `${provider.provider} - ${provider.name}`.toLowerCase().includes(searchTerm.toLowerCase())\n  );\n\n  return (\n    <Select\n      onOpenChange={(open) => {\n        if (open) {\n          setTimeout(() => searchInputRef.current?.focus(), 0);\n        }\n      }}\n      onValueChange={(value) => {\n        setSelected(providers?.find((agent) => agent.id === value))\n        onSelect(value);\n      }}\n    >\n      <SelectTrigger>\n        <SelectValue placeholder={selected?.name || `Select an agent backend`} />\n      </SelectTrigger>\n      <SelectContent>\n        <div className=\"p-2\">\n          <Input\n            ref={searchInputRef}\n            placeholder=\"Search providers...\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n            onKeyDown={(e) => e.stopPropagation()}\n            className=\"h-8\"\n          />\n        </div>\n        {\n          isLoading ? (\n            <SelectItem key=\"loading\" value=\"loading\">\n              Loading...\n            </SelectItem>\n          ) :\n            filteredProviders?.map((agent) => (\n              <SelectItem key={agent.id} value={agent.id}>\n                {agent.provider + \" - \" + agent.name}\n              </SelectItem>\n            ))\n        }\n      </SelectContent>\n    </Select>\n  );\n}\n","import { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { Loading } from \"@/components/ui/loading\";\nimport { AgentBackendSelector } from \"@/app/(application)/agents/components/agent-backend-selector\";\nimport { Select, SelectContent, SelectItem, SelectTrigger, SelectValue } from \"@/components/ui/select\";\nimport { Alert, AlertDescription } from \"@/components/ui/alert\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { agents, ImageStyle } from \"@/util/api\";\nimport { toast } from \"sonner\";\n\nexport function CreateNewAgent({ createAgent, createAgentResult, company, children }) {\n\n  const [name, setName] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [backend, setBackend] = useState(\"\");\n  const [generateImage, setGenerateImage] = useState(true);\n  const [generatedImages, setGeneratedImages] = useState<string[]>([]);\n  const [selectedImage, setSelectedImage] = useState<string | null>(null);\n  const [imageGenerating, setImageGenerating] = useState(false);\n  const [imageGenerationProgress, setImageGenerationProgress] = useState(0);\n  const [imageStyle, setImageStyle] = useState<ImageStyle>(\"app_icon\");\n\n  const imageStyles = [\n    { value: \"origami\", label: \"Origami\" },\n    { value: \"anime\", label: \"Anime\" },\n    { value: \"japanese_anime\", label: \"Japanese Anime\" },\n    { value: \"vaporwave\", label: \"Vaporwave\" },\n    { value: \"lego\", label: \"Lego\" },\n    { value: \"paper_cut\", label: \"Paper Cut\" },\n    { value: \"felt_puppet\", label: \"Felt Puppet\" },\n    { value: \"3d\", label: \"3D\" },\n    { value: \"app_icon\", label: \"App Icon\" },\n    { value: \"pixel_art\", label: \"Pixel Art\" },\n    { value: \"isometric\", label: \"Isometric\" },\n  ];\n\n  return (\n    <Dialog>\n      <DialogTrigger asChild>\n        {children || <Button variant=\"secondary\">Create new agent</Button>}\n      </DialogTrigger>\n      <DialogContent className=\"sm:max-w-[475px]\">\n        <DialogHeader>\n          <DialogTitle>Create a new agent</DialogTitle>\n          <DialogDescription>\n            Give your new agent a name and a description (optional).\n          </DialogDescription>\n        </DialogHeader>\n        {\n          !generateImage && (<div className=\"h-32 bg-gradient-to-br from-primary/20 to-primary/5 rounded-lg flex items-center justify-center\">\n            <div className=\"text-4xl font-bold text-primary\">\n              {name?.charAt(0).toUpperCase() || 'A'}\n            </div>\n          </div>)\n        }\n        {\n          (imageGenerating) && (\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"w-full mb-4\">\n                <div className=\"space-y-4\">\n                  <div className=\"text-center\">\n                    <h3 className=\"text-lg font-semibold mb-2\">Generating your agent images...</h3>\n                    <p className=\"text-sm text-muted-foreground mb-4\">Creating {imageGenerationProgress}/4 image options</p>\n                    <div className=\"w-32 h-2 bg-muted rounded-full overflow-hidden mx-auto\">\n                      <div\n                        className=\"h-full bg-primary transition-all duration-300 ease-out\"\n                        style={{ width: `${(imageGenerationProgress / 4) * 100}%` }}\n                      />\n                    </div>\n                  </div>\n                  <div className=\"grid grid-cols-2 gap-3\">\n                    {Array.from({ length: 4 }, (_, index) => (\n                      <div key={index} className=\"relative h-32 rounded-lg overflow-hidden border-2 border-dashed border-muted-foreground/30\">\n                        <div className=\"w-full h-full bg-gradient-to-br from-muted/50 to-muted/20 flex flex-col items-center justify-center\">\n                          {index < imageGenerationProgress ? (\n                            <div className=\"text-green-500\">\n                              <svg className=\"w-8 h-8\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                                <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                              </svg>\n                            </div>\n                          ) : (\n                            <Loading className=\"w-6 h-6 text-muted-foreground\" />\n                          )}\n                          <span className=\"text-xs text-muted-foreground mt-2\">\n                            {index < imageGenerationProgress ? 'Complete' : 'Generating...'}\n                          </span>\n                        </div>\n                      </div>\n                    ))}\n                  </div>\n                </div>\n              </div>\n            </div>\n          )\n        }\n\n        {generatedImages.length > 0 && (\n          <div className=\"grid\">\n            <div className=\"space-y-4\">\n              <div className=\"grid grid-cols-2 gap-3\">\n                {generatedImages.map((image, index) => (\n                  <button\n                    key={index}\n                    onClick={() => setSelectedImage(image)}\n                    className={`relative h-32 rounded-lg overflow-hidden border-2 transition-all hover:scale-105 ${selectedImage === image ? 'border-primary ring-2 ring-primary/20' : 'border-border hover:border-primary/50'\n                      }`}\n                  >\n                    <img src={image} alt={`Generated option ${index + 1}`} className=\"w-full h-full object-cover\" />\n                    {selectedImage === image && (\n                      <div className=\"absolute inset-0 bg-primary/10 flex items-center justify-center\">\n                        <div className=\"w-6 h-6 rounded-full bg-primary flex items-center justify-center\">\n                          <svg className=\"w-4 h-4 text-primary-foreground\" fill=\"currentColor\" viewBox=\"0 0 20 20\">\n                            <path fillRule=\"evenodd\" d=\"M16.707 5.293a1 1 0 010 1.414l-8 8a1 1 0 01-1.414 0l-4-4a1 1 0 011.414-1.414L8 12.586l7.293-7.293a1 1 0 011.414 0z\" clipRule=\"evenodd\" />\n                          </svg>\n                        </div>\n                      </div>\n                    )}\n                  </button>\n                ))}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {\n          !imageGenerating && generatedImages.length <= 0 && (\n            <div className=\"grid gap-4 py-4\">\n              <div className=\"w-full mb-4\">\n                <div className=\"grid gap-2\">\n                  <Label htmlFor=\"name\">Name</Label>\n                  <Input\n                    onChange={(e) => {\n                      setName(e.target.value);\n                    }}\n                    id=\"name\"\n                    autoFocus\n                  />\n                </div>\n                <div className=\"grid gap-2 mt-3\">\n                  <Label htmlFor=\"description\">Description</Label>\n                  <Input\n                    onChange={(e) => {\n                      setDescription(e.target.value);\n                    }}\n                    id=\"description\"\n                  />\n                </div>\n                <div className=\"grid gap-2 mt-3\">\n                  <Label htmlFor=\"backend\">Backend</Label>\n                  <AgentBackendSelector onSelect={(id) => {\n                    setBackend(id)\n                  }} />\n                </div>\n                <div className=\"flex items-center space-x-2 mt-2\">\n                  <Checkbox\n                    id=\"generateImage\"\n                    checked={generateImage}\n                    onCheckedChange={(checked) => setGenerateImage(checked === true)}\n                  />\n                  <Label htmlFor=\"generateImage\" className=\"text-sm font-normal\">\n                    Generate AI image for this agent\n                  </Label>\n                </div>\n                {generateImage && (\n                  <div className=\"grid gap-2 mt-3\">\n                    <Label htmlFor=\"imageStyle\">Image Style</Label>\n                    <Select onValueChange={(value) => setImageStyle(value as typeof imageStyle)} defaultValue={imageStyle}>\n                      <SelectTrigger>\n                        <SelectValue placeholder=\"Select image style\" />\n                      </SelectTrigger>\n                      <SelectContent>\n                        {imageStyles.map((style) => (\n                          <SelectItem key={style.value} value={style.value}>\n                            {style.label}\n                          </SelectItem>\n                        ))}\n                      </SelectContent>\n                    </Select>\n                  </div>\n                )}\n                <Alert variant=\"info\" className=\"mt-3\">\n                  <AlertDescription>\n                    Exulu can generate a cool image for your agent if an <strong>OPENAI_IMAGE_GENERATION_API_KEY</strong> has been added to your{\" \"}\n                    <a href=\"/variables\" className=\"text-primary hover:underline\">\n                      variables page\n                    </a>\n                    .\n                  </AlertDescription>\n                </Alert>\n              </div>\n            </div>\n          )\n        }\n\n        <DialogFooter>\n          <Button\n            disabled={createAgentResult.loading || imageGenerating}\n            onClick={async () => {\n              try {\n                // If we have generated images, create the agent with selected image\n                if (generatedImages.length > 0 && selectedImage) {\n                  createAgent({\n                    variables: {\n                      name,\n                      description,\n                      rights_mode: \"private\",\n                      backend,\n                      image: selectedImage\n                    },\n                  });\n                  return;\n                }\n\n                // Validate required fields\n                if (!name) {\n                  toast.error(\"Please fill in all fields\");\n                  return;\n                }\n\n                // If not generating images, create agent without image\n                if (!generateImage) {\n                  createAgent({\n                    variables: {\n                      name,\n                      description,\n                      rights_mode: \"private\",\n                      backend,\n                    },\n                  });\n                  return;\n                }\n\n                // Start image generation process\n                if (generateImage && generatedImages.length === 0) {\n                  setImageGenerating(true);\n                  setImageGenerationProgress(0);\n\n                  try {\n                    // Generate 4 images simultaneously\n                    const promises = Array.from({ length: 4 }, async () => {\n                      const response = await agents.image.generate({ name, description, style: imageStyle });\n                      const result = await response.json();\n                      setImageGenerationProgress(prev => prev + 1);\n                      return result.image;\n                    });\n\n                    const results = await Promise.all(promises);\n                    const images = results.filter(Boolean);\n                    setGeneratedImages(images);\n\n                    if (images.length > 0) {\n                      setSelectedImage(images[0]); // Auto-select first image\n                    }\n                  } catch (error) {\n                    console.error(\"Failed to generate images:\", error);\n                    toast.error(\"Failed to generate images. Please try again.\");\n                  } finally {\n                    setImageGenerating(false);\n                  }\n                }\n\n              } catch (error) {\n                console.error(\"Failed to create agent:\", error);\n                toast.error(\"Failed to create agent. Please try again.\");\n              }\n            }}\n            type=\"submit\">\n            {(generatedImages.length > 0 || !generateImage) ? 'Create Agent' : (imageGenerating ? 'Generating...' : 'Generate Images')} \n            {(createAgentResult.loading || imageGenerating) && <Loading className=\"ml-2\" />}\n          </Button>\n        </DialogFooter>\n      </DialogContent>\n    </Dialog >\n  );\n}\n","\"use client\";\n\nimport {\n  Card,\n  CardHeader,\n} from \"@/components/ui/card\";\nimport { CreateNewAgent } from \"./create-new-agent\";\n\ninterface CreateNewAgentCardProps {\n  createAgent: any;\n  createAgentResult: any;\n  company: any;\n}\n\nexport function CreateNewAgentCard({ createAgent, createAgentResult, company }: CreateNewAgentCardProps) {\n  return (\n    <CreateNewAgent\n      createAgent={createAgent}\n      createAgentResult={createAgentResult}\n      company={company}\n    >\n      <Card className=\"cursor-pointer hover:shadow-md transition-shadow duration-200 h-full flex flex-col border-dashed border-2 hover:border-primary/50\">\n        <CardHeader className=\"pb-3 h-full\">\n          <div className=\"w-full h-full rounded-lg flex items-center justify-center mb-4 flex-col\">\n            <div className=\"text-center text-muted-foreground\">\n              <p className=\"text-lg\">Create New Agent</p>\n            </div>\n          </div>\n        </CardHeader>\n      </Card>\n    </CreateNewAgent>\n  );\n}","\"use client\";\n\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { useRouter } from \"next/navigation\";\nimport * as React from \"react\";\nimport { useContext, useState, useMemo } from \"react\";\nimport { UserContext } from \"@/app/(application)/authenticated\";\nimport { AgentCard } from \"@/app/(application)/agents/components/agent-card\";\nimport { CreateNewAgentCard } from \"@/app/(application)/agents/components/create-new-agent-card\";\nimport { CREATE_AGENT, GET_AGENTS } from \"@/queries/queries\";\nimport { Agent } from \"@EXULU_SHARED//models/agent\";\nimport { Input } from \"@/components/ui/input\";\nimport { Search } from \"lucide-react\";\nimport { AgentDetailsSheet } from \"./components/agent-details-sheet\";\n\nexport const dynamic = \"force-dynamic\";\n\nexport default function AgentsPage() {\n  const router = useRouter();\n  const { user } = useContext(UserContext);\n  const company = user.company;\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [showDetails, setShowDetails] = useState<Agent | null>(null);\n\n  const { data, loading: isLoading, error } = useQuery<{\n    agentsPagination: {\n      items: Agent[]\n    }\n  }>(GET_AGENTS, {\n    variables: {\n      page: 1,\n      limit: 100,\n      filters: [],\n      sort: { field: \"updatedAt\", direction: \"DESC\" },\n    },\n  });\n\n  // Filter agents based on search query\n  const filteredAgents = useMemo(() => {\n    if (!data?.agentsPagination?.items) return [];\n    if (!searchQuery.trim()) return data.agentsPagination.items;\n\n    return data.agentsPagination.items.filter(agent =>\n      agent.name.toLowerCase().includes(searchQuery.toLowerCase())\n    );\n  }, [data, searchQuery]);\n\n  const [createAgent, createAgentResult] = useMutation(\n    CREATE_AGENT,\n    {\n      onCompleted: (data: {\n        agentsCreateOne: { item: { id: string, type: \"chat\" } };\n      }) => {\n        console.log(data);\n        router.push(`/agents/edit/${data?.agentsCreateOne?.item?.id}`, {\n          scroll: false,\n        });\n      },\n    },\n  );\n\n  const handleAgentSelect = (agent: Agent) => {\n    router.push(`/agents/edit/${agent.id}`, { scroll: false });\n  };\n\n\n  if (error) {\n    return (\n      <div className=\"container mx-auto py-12 text-center\">\n        <h1 className=\"text-2xl font-bold mb-4\">Error loading agents</h1>\n        <p className=\"text-muted-foreground\">\n          There was an error loading your agents. Please try again.\n        </p>\n      </div>\n    );\n  }\n\n  return (\n    <div className=\"container mx-auto py-12 px-6\">\n      <div className=\"mb-8\">\n        <h1 className=\"text-3xl font-bold mb-2\">Agents</h1>\n        <p className=\"text-muted-foreground mb-6\">\n          Manage your AI agents and create new ones.\n        </p>\n        {/* Search Bar */}\n        <div className=\"relative max-w-md\">\n          <Search className=\"absolute left-3 top-1/2 h-4 w-4 -translate-y-1/2 text-muted-foreground\" />\n          <Input\n            type=\"text\"\n            placeholder=\"Search agents...\"\n            value={searchQuery}\n            onChange={(e) => setSearchQuery(e.target.value)}\n            className=\"pl-10\"\n          />\n        </div>\n      </div>\n\n      {isLoading ? (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n          {/* Loading skeleton cards */}\n          {Array.from({ length: 8 }).map((_, i) => (\n            <div key={i} className=\"h-80 bg-muted animate-pulse rounded-lg\" />\n          ))}\n        </div>\n      ) : (\n        <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 xl:grid-cols-4 gap-6\">\n          {/* Create new agent card */}\n          <CreateNewAgentCard\n            createAgent={createAgent}\n            createAgentResult={createAgentResult}\n            company={company}\n          />\n\n          {/* Agent cards */}\n          {filteredAgents.map((agent: Agent) => (\n            <AgentCard\n              key={agent.id}\n              agent={agent}\n              onSelect={handleAgentSelect}\n              showDetails={setShowDetails}\n            />\n          ))}\n        </div>\n      )}\n\n\n      {showDetails && (\n        <AgentDetailsSheet\n          agentId={showDetails.id}\n          open={!!showDetails}\n          onOpenChange={() => setShowDetails(null)}\n        />\n      )}\n    </div>\n  );\n}\n","import { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        info: \"border-info/50 text-info dark:border-info [&>svg]:text-info\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n));\nAlert.displayName = \"Alert\";\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nAlertTitle.displayName = \"AlertTitle\";\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n));\nAlertDescription.displayName = \"AlertDescription\";\n\nexport { Alert, AlertTitle, AlertDescription };\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className,\n    )}\n    {...props}\n  />\n));\nCard.displayName = \"Card\";\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n));\nCardHeader.displayName = \"CardHeader\";\n\nconst CardTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h3\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className,\n    )}\n    {...props}\n  />\n));\nCardTitle.displayName = \"CardTitle\";\n\nconst CardDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <p\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nCardDescription.displayName = \"CardDescription\";\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n));\nCardContent.displayName = \"CardContent\";\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n));\nCardFooter.displayName = \"CardFooter\";\n\nexport {\n  Card,\n  CardHeader,\n  CardFooter,\n  CardTitle,\n  CardDescription,\n  CardContent,\n};\n","\"use client\";\n\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { Check } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className,\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"size-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","\"use client\";\n\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","import { cn } from \"@/lib/utils\";\n\nexport const Loading = ({ className }: { className?: null | string }) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      role=\"status\"\n      className={cn(\"inline w-4 h-4 text-white animate-spin fill-inherit\", className)}\n      viewBox=\"0 0 100 101\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n        className=\"fill-inherit opacity-20\"\n      ></path>\n      <path\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n        className=\"fill-inherit\"\n      ></path>\n    </svg>\n  );\n};\n","\"use client\";\n\nimport * as SelectPrimitive from \"@radix-ui/react-select\";\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Select = SelectPrimitive.Root;\n\nconst SelectGroup = SelectPrimitive.Group;\n\nconst SelectValue = SelectPrimitive.Value;\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className,\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"size-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n));\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName;\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className,\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"size-4\" />\n  </SelectPrimitive.ScrollUpButton>\n));\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName;\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className,\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"size-4\" />\n  </SelectPrimitive.ScrollDownButton>\n));\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName;\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className,\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\",\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n));\nSelectContent.displayName = SelectPrimitive.Content.displayName;\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n));\nSelectLabel.displayName = SelectPrimitive.Label.displayName;\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className,\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex size-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"size-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n));\nSelectItem.displayName = SelectPrimitive.Item.displayName;\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n));\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName;\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n};\n"],"names":["Promise","resolve","then","__webpack_require__","bind","AgentCard","param","agent","onSelect","showDetails","truncatedDescription","description","length","substring","jsx_runtime","jsx","Fragment","Card","className","onClick","CardHeader","jsxs","div","image","img","src","alt","concat","name","charAt","toUpperCase","CardTitle","Button","variant","size","e","stopPropagation","Info","CardDescription","Badge","active","AgentBackendSelector","data","selected","setSelected","React","searchTerm","setSearchTerm","searchInputRef","loading","isLoading","error","refetch","previousData","useQuery","GET_PROVIDERS","fetchPolicy","nextFetchPolicy","providers","filteredProviders","items","filter","provider","toLowerCase","includes","Select","onOpenChange","open","setTimeout","current","focus","onValueChange","find","id","value","SelectTrigger","SelectValue","placeholder","SelectContent","Input","ref","onChange","target","onKeyDown","SelectItem","map","CreateNewAgent","createAgent","createAgentResult","company","children","setName","useState","setDescription","backend","setBackend","generateImage","setGenerateImage","generatedImages","setGeneratedImages","selectedImage","setSelectedImage","imageGenerating","setImageGenerating","imageGenerationProgress","setImageGenerationProgress","imageStyle","setImageStyle","Dialog","DialogTrigger","asChild","DialogContent","DialogHeader","DialogTitle","DialogDescription","h3","p","style","width","Array","from","_","index","svg","fill","viewBox","path","fillRule","d","clipRule","Loading","span","button","Label","htmlFor","autoFocus","Checkbox","checked","onCheckedChange","defaultValue","imageStyles","label","Alert","AlertDescription","strong","a","href","DialogFooter","disabled","variables","rights_mode","toast","promises","response","agents","generate","result","json","prev","images","results","all","Boolean","console","type","CreateNewAgentCard","dynamic","AgentsPage","router","useRouter","user","useContext","UserContext","searchQuery","setSearchQuery","setShowDetails","GET_AGENTS","page","limit","filters","sort","field","direction","filteredAgents","useMemo","agentsPagination","trim","useMutation","CREATE_AGENT","onCompleted","log","push","agentsCreateOne","item","scroll","handleAgentSelect","h1","Search","i","AgentDetailsSheet","agentId","alertVariants","cva","variants","default","destructive","info","defaultVariants","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","role","cn","displayName","AlertTitle","h5","CardContent","CardFooter","CheckboxPrimitive","Check","labelVariants","LabelPrimitive","aria-hidden","xmlns","SelectPrimitive","ChevronDown","SelectScrollUpButton","ChevronUp","SelectScrollDownButton","position","SelectLabel","SelectSeparator"],"sourceRoot":""}