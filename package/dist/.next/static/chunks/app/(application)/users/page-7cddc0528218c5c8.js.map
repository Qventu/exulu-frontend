{"version":3,"file":"static/chunks/app/(application)/users/page-7cddc0528218c5c8.js","mappings":"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","sources":["webpack://_N_E/?072c","webpack://_N_E/./app/(application)/users/components/data-table-column-header.tsx","webpack://_N_E/./app/(application)/users/data/schema.ts","webpack://_N_E/./app/(application)/users/components/data-table-row-actions.tsx","webpack://_N_E/./app/(application)/users/components/super-admin-toggle.tsx","webpack://_N_E/./app/(application)/users/components/columns.tsx","webpack://_N_E/./app/(application)/users/components/data-table-view-options.tsx","webpack://_N_E/./app/(application)/users/components/add-user-modal.tsx","webpack://_N_E/./app/(application)/users/components/data-table.tsx","webpack://_N_E/./app/(application)/users/page.tsx","webpack://_N_E/./components/ui/checkbox.tsx","webpack://_N_E/./components/ui/label.tsx","webpack://_N_E/./components/ui/loading.tsx","webpack://_N_E/./components/ui/switch.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/daniel.claessen/Desktop/Projects/exulu/frontend/app/(application)/users/page.tsx\");\n","import {\n  ArrowDownIcon,\n  ArrowUpIcon,\n  CaretSortIcon,\n  EyeNoneIcon,\n} from \"@radix-ui/react-icons\";\nimport { Column } from \"@tanstack/react-table\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuSeparator,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport { cn } from \"@/lib/utils\";\n\ninterface DataTableColumnHeaderProps<TData, TValue>\n  extends React.HTMLAttributes<HTMLDivElement> {\n  column: Column<TData, TValue>;\n  title: string;\n}\n\nexport function DataTableColumnHeader<TData, TValue>({\n  column,\n  title,\n  className,\n}: DataTableColumnHeaderProps<TData, TValue>) {\n  if (!column.getCanSort()) {\n    return <div className={cn(className)}>{title}</div>;\n  }\n\n  return (\n    <div className={cn(\"flex items-center space-x-2\", className)}>\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            className=\"-ml-3 h-8 data-[state=open]:bg-accent\"\n          >\n            <span>{title}</span>\n            {column.getIsSorted() === \"desc\" ? (\n              <ArrowDownIcon className=\"ml-2 size-4\" />\n            ) : column.getIsSorted() === \"asc\" ? (\n              <ArrowUpIcon className=\"ml-2 size-4\" />\n            ) : (\n              <CaretSortIcon className=\"ml-2 size-4\" />\n            )}\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent align=\"start\">\n          <DropdownMenuItem onClick={() => column.toggleSorting(false)}>\n            <ArrowUpIcon className=\"mr-2 size-3.5 text-muted-foreground/70\" />\n            Asc\n          </DropdownMenuItem>\n          <DropdownMenuItem onClick={() => column.toggleSorting(true)}>\n            <ArrowDownIcon className=\"mr-2 size-3.5 text-muted-foreground/70\" />\n            Desc\n          </DropdownMenuItem>\n          <DropdownMenuSeparator />\n          <DropdownMenuItem onClick={() => column.toggleVisibility(false)}>\n            <EyeNoneIcon className=\"mr-2 size-3.5 text-muted-foreground/70\" />\n            Hide\n          </DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n    </div>\n  );\n}\n","import { z } from \"zod\";\n\nexport const userSchema = z.object({\n  id: z.number(),\n  email: z.string(),\n  emailVerified: z.string().nullable().optional(),\n  roles: z\n    .array(\n      z.object({\n        id: z.string(),\n        role: z.string(),\n      }),\n    )\n    .nullable()\n    .optional(),\n});\n\nexport type User = z.infer<typeof userSchema>;\n","\"use client\";\n\nimport { useMutation } from \"@apollo/client\";\nimport { DotsHorizontalIcon } from \"@radix-ui/react-icons\";\nimport { Row } from \"@tanstack/react-table\";\nimport {\n  GET_USERS,\n  REMOVE_USER_BY_ID,\n  RESET_USER_PASSWORD,\n} from \"@/queries/queries\";\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuContent,\n  DropdownMenuItem,\n  DropdownMenuTrigger,\n} from \"@/components/ui/dropdown-menu\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { userSchema } from \"../data/schema\";\nimport { UserContext } from \"@/app/(application)/authenticated\";\nimport { useContext, useState } from \"react\";\nimport { Copy, Eye, EyeOff } from \"lucide-react\";\ninterface DataTableRowActionsProps<TData> {\n  row: Row<TData>;\n}\n\nexport function DataTableRowActions<TData>({\n  row,\n}: DataTableRowActionsProps<TData>) {\n  const { user: currentUser } = useContext(UserContext);\n  const user = userSchema.parse(row.original);\n\n  const { toast } = useToast();\n  const [isResetPasswordOpen, setIsResetPasswordOpen] = useState(false);\n  const [generatedPassword, setGeneratedPassword] = useState(\"\");\n  const [showPassword, setShowPassword] = useState(false);\n  const [isResetting, setIsResetting] = useState(false);\n\n  const [removeUser, removeUserResult] = useMutation(REMOVE_USER_BY_ID, {\n    refetchQueries: [\n      GET_USERS, // DocumentNode object parsed with gql\n      \"GetUsers\", // Query name\n    ],\n  });\n\n  const [resetPassword] = useMutation(RESET_USER_PASSWORD, {\n    refetchQueries: [GET_USERS, \"GetUsers\"],\n  });\n\n  const generatePassword = () => {\n    const length = 12;\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';\n    let password = '';\n    for (let i = 0; i < length; i++) {\n      password += charset.charAt(Math.floor(Math.random() * charset.length));\n    }\n    return password;\n  };\n\n  const handleResetPassword = () => {\n    const password = generatePassword();\n    setGeneratedPassword(password);\n    setIsResetPasswordOpen(true);\n  };\n\n  const handleConfirmReset = async () => {\n    setIsResetting(true);\n    try {\n      await resetPassword({\n        variables: {\n          id: user.id,\n          password: generatedPassword,\n        },\n      });\n\n      toast({\n        title: \"Password reset\",\n        description: `Password has been reset for ${user.email}.`,\n      });\n\n      setIsResetPasswordOpen(false);\n      setGeneratedPassword(\"\");\n      setShowPassword(false);\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to reset password. Please try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsResetting(false);\n    }\n  };\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      toast({\n        title: 'Copied',\n        description: 'Password copied to clipboard',\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to copy to clipboard',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  return (\n    <>\n      <DropdownMenu>\n        <DropdownMenuTrigger asChild>\n          <Button\n            variant=\"ghost\"\n            className=\"flex size-8 p-0 data-[state=open]:bg-muted\"\n          >\n            <DotsHorizontalIcon className=\"size-4\" />\n            <span className=\"sr-only\">Open menu</span>\n          </Button>\n        </DropdownMenuTrigger>\n        <DropdownMenuContent align=\"end\" className=\"w-[160px]\">\n          <DropdownMenuItem onClick={handleResetPassword}>\n            Reset password\n          </DropdownMenuItem>\n          <DropdownMenuItem\n            onClick={() => {\n              if (currentUser.id === user.id) {\n                toast({\n                  title: \"Cannot delete your own user\",\n                  description: \"You cannot delete your own user, that would be a bad idea.\",\n                });\n                return;\n              }\n              const confirm = window.confirm(\"Are you sure you want to delete this user?\");\n              if (!confirm) {\n                return;\n              }\n              removeUser({\n                variables: {\n                  id: user.id,\n                },\n              });\n              toast({\n                title: \"Deleting user\",\n                description: \"We deleted the user.\",\n              });\n            }}\n          >\n            Delete user\n          </DropdownMenuItem>\n        </DropdownMenuContent>\n      </DropdownMenu>\n\n      <Dialog open={isResetPasswordOpen} onOpenChange={setIsResetPasswordOpen}>\n        <DialogContent className=\"max-w-md\">\n          <DialogHeader>\n            <DialogTitle>Reset Password</DialogTitle>\n            <DialogDescription>\n              A temporary password has been generated for {user.email}. Copy and send it to the user manually.\n            </DialogDescription>\n          </DialogHeader>\n\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"password\">Temporary Password</Label>\n              <div className=\"relative mt-1\">\n                <Input\n                  id=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={generatedPassword}\n                  readOnly\n                  className=\"pr-20\"\n                />\n                <div className=\"absolute right-1 top-1/2 -translate-y-1/2 flex gap-1\">\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-8 w-8 p-0\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"h-4 w-4\" />\n                    ) : (\n                      <Eye className=\"h-4 w-4\" />\n                    )}\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-8 w-8 p-0\"\n                    onClick={() => copyToClipboard(generatedPassword)}\n                  >\n                    <Copy className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n              <p className=\"text-sm text-muted-foreground mt-2\">\n                Please copy this password and send it to {user.email} manually. The user should change it on their first login.\n              </p>\n            </div>\n          </div>\n\n          <DialogFooter>\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                setIsResetPasswordOpen(false);\n                setGeneratedPassword(\"\");\n                setShowPassword(false);\n              }}\n            >\n              Cancel\n            </Button>\n            <Button onClick={handleConfirmReset} disabled={isResetting}>\n              {isResetting ? 'Resetting...' : 'Reset Password'}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}\n","\"use client\";\n\nimport { useState, useContext } from \"react\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { Switch } from \"@/components/ui/switch\";\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from \"@/components/ui/dialog\";\nimport { Button } from \"@/components/ui/button\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { AlertTriangle } from \"lucide-react\";\nimport { GET_USERS, UPDATE_USER_BY_ID } from \"@/queries/queries\";\nimport { UserContext } from \"@/app/(application)/authenticated\";\n\ninterface SuperAdminToggleProps {\n  user: {\n    id: string;\n    super_admin?: boolean;\n    email: string;\n    [key: string]: any;\n  };\n}\n\nexport function SuperAdminToggle({ user }: SuperAdminToggleProps) {\n  const [isDialogOpen, setIsDialogOpen] = useState(false);\n  const [isLoading, setIsLoading] = useState(false);\n  const [pendingChange, setPendingChange] = useState<boolean | null>(null);\n  const { toast } = useToast();\n  const { user: currentUser } = useContext(UserContext);\n  const [updateUser] = useMutation(UPDATE_USER_BY_ID, {\n    refetchQueries: [\n      GET_USERS,\n      \"GetUsers\",\n    ],\n  });\n  const isSuperAdmin = Boolean(user.super_admin);\n  const isCurrentUser = currentUser?.id === user.id;\n  const handleToggleChange = (checked: boolean) => {\n    if (isCurrentUser && isSuperAdmin && !checked) {\n      toast({\n        title: \"Cannot Disable Own Super Admin Rights\",\n        description: \"You cannot disable your own super admin privileges for security reasons.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n    setPendingChange(checked);\n    setIsDialogOpen(true);\n  };\n\n  const handleConfirm = async () => {\n    if (pendingChange === null) return;\n\n    setIsLoading(true);\n    try {\n      await updateUser({\n        variables: {\n          id: user.id,\n          super_admin: pendingChange,\n        },\n      });\n      \n      setIsDialogOpen(false);\n      setPendingChange(null);\n      toast({\n        title: pendingChange ? \"Super Admin Enabled\" : \"Super Admin Disabled\",\n        description: `Super admin access has been ${pendingChange ? 'granted to' : 'removed from'} ${user.email}.`,\n      });\n    } catch (error: any) {\n      toast({\n        title: \"Error\",\n        description: error.message || \"Failed to update super admin status.\",\n        variant: \"destructive\",\n      });\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleCancel = () => {\n    setIsDialogOpen(false);\n    setPendingChange(null);\n  };\n\n  return (\n    <>\n      <div className=\"flex items-center space-x-2\">\n        <Switch\n          checked={isSuperAdmin}\n          onCheckedChange={handleToggleChange}\n          disabled={isLoading}\n          className=\"data-[state=checked]:bg-red-500 data-[state=checked]:border-red-500\"\n        />\n        <span className=\"text-sm text-muted-foreground\">\n          {isSuperAdmin ? \"Yes\" : \"No\"}\n        </span>\n      </div>\n\n      <Dialog open={isDialogOpen} onOpenChange={setIsDialogOpen}>\n        <DialogContent className=\"sm:max-w-[475px]\">\n          <DialogHeader>\n            <DialogTitle>\n              {pendingChange ? \"Grant\" : \"Remove\"} Super Admin Access\n            </DialogTitle>\n            <DialogDescription>\n              {pendingChange \n                ? `Are you sure you want to grant super admin access to ${user.email}? This will give them full administrative privileges.`\n                : `Are you sure you want to remove super admin access from ${user.email}? They will lose all administrative privileges.`\n              }\n              {!pendingChange && (\n                <div className=\"mt-3 p-3 bg-amber-50 border border-amber-200 rounded-md flex items-start gap-2\">\n                  <AlertTriangle className=\"h-4 w-4 text-amber-600 mt-0.5 flex-shrink-0\" />\n                  <p className=\"text-sm text-amber-800\">\n                    <strong>Warning:</strong> Ensure you are not removing super admin access from the last super administrator. \n                    This could prevent anyone from managing users and system settings and requiring a technical support intervention\n                    to set the super admin status again via the database.\n                  </p>\n                </div>\n              )}\n            </DialogDescription>\n          </DialogHeader>\n          <DialogFooter>\n            <Button variant=\"outline\" onClick={handleCancel}>\n              Cancel\n            </Button>\n            <Button \n              onClick={handleConfirm}\n              disabled={isLoading}\n              variant={pendingChange ? \"destructive\" : \"default\"}\n              className={pendingChange ? \"bg-red-500 hover:bg-red-600\" : \"\"}\n            >\n              {isLoading ? \"Updating...\" : \"Confirm\"}\n            </Button>\n          </DialogFooter>\n        </DialogContent>\n      </Dialog>\n    </>\n  );\n}","\"use client\";\n\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport * as React from \"react\";\nimport { Checkbox } from \"@/components/ui/checkbox\";\nimport { User } from \"@EXULU_SHARED/models/user\";\nimport { DataTableColumnHeader } from \"./data-table-column-header\";\nimport { DataTableRowActions } from \"./data-table-row-actions\";\nimport { SuperAdminToggle } from \"./super-admin-toggle\";\nimport { RoleSelector } from \"@/components/ui/role-selector\";\n\nexport const createColumns = (currentUser: any, roleChange: (user: User, role: string) => void): ColumnDef<User>[] => [\n  {\n    id: \"select\",\n    header: ({ table }) => (\n      <Checkbox\n        checked={\n          table.getIsAllPageRowsSelected() ||\n          (table.getIsSomePageRowsSelected() && \"indeterminate\")\n        }\n        onCheckedChange={(value) => table.toggleAllPageRowsSelected(!!value)}\n        aria-label=\"Select all\"\n        className=\"translate-y-[2px]\"\n      />\n    ),\n    cell: ({ row }) => (\n      <Checkbox\n        checked={row.getIsSelected()}\n        onCheckedChange={(value) => row.toggleSelected(!!value)}\n        aria-label=\"Select row\"\n        className=\"translate-y-[2px]\"\n      />\n    ),\n    enableSorting: false,\n    enableHiding: false,\n  },\n  {\n    accessorKey: \"email\",\n    header: ({ column }) => (\n      <DataTableColumnHeader column={column} title=\"Email\" />\n    ),\n    cell: ({ row }) => {\n      /*const label = labels.find((label) => label.value === row.original.label)*/\n\n      return (\n        <div className=\"flex space-x-2\">\n          {/*{label && <Badge variant=\"outline\">{label.label}</Badge>}*/}\n          <span className=\"max-w-[300px] truncate font-medium\">\n            {row.original.email}\n          </span>\n        </div>\n      );\n    },\n  },\n  {\n    accessorKey: \"role\",\n    header: ({ column }) => (\n      <DataTableColumnHeader column={column} title=\"Role\" />\n    ),\n    cell: ({ row }) => {\n      return (\n        <div className=\"gap-x-2 flex\">\n          <RoleSelector value={row.original.role} onChange={(role) => {\n                // warning modal\n                // todo rbac and / or super_admin check\n                const confirm = window.confirm(\"Are you sure you want to update the role for this user?\");\n                if (!confirm) {\n                  return;\n                }\n                roleChange(row.original, role);\n              }} />\n        </div>\n      );\n    },\n    filterFn: (row, id, value) => {\n      return value.includes(row.getValue(id));\n    },\n  },\n  {\n    accessorKey: \"status\",\n    header: ({ column }) => (\n      <DataTableColumnHeader column={column} title=\"Status\" />\n    ),\n    cell: ({ row }) => {\n      return (\n        <div className=\"flex w-[100px] items-center\">\n          {row.original.emailVerified ? (\n            <p className=\"text-primary\">verified</p>\n          ) : (\n            <p className=\"text-orange-400\">pending</p>\n          )}\n        </div>\n      );\n    },\n    filterFn: (row, id, value) => {\n      return value.includes(row.getValue(id));\n    },\n  },\n  ...(currentUser?.super_admin ? [{\n    accessorKey: \"super_admin\",\n    header: ({ column }) => (\n      <DataTableColumnHeader column={column} title=\"Super Admin\" />\n    ),\n    cell: ({ row }) => {\n      return (\n        <SuperAdminToggle user={row.original} />\n      );\n    },\n    enableSorting: false,\n  }] : []),\n  {\n    id: \"actions\",\n    cell: ({ row }) => <DataTableRowActions row={row} />,\n  },\n];\n","\"use client\";\n\nimport { DropdownMenuTrigger } from \"@radix-ui/react-dropdown-menu\";\nimport { MixerHorizontalIcon } from \"@radix-ui/react-icons\";\nimport { Table } from \"@tanstack/react-table\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n} from \"@/components/ui/dropdown-menu\";\n\ninterface DataTableViewOptionsProps<TData> {\n  table: Table<TData>;\n}\n\nexport function DataTableViewOptions<TData>({\n  table,\n}: DataTableViewOptionsProps<TData>) {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"ml-auto hidden h-8 lg:flex\"\n        >\n          <MixerHorizontalIcon className=\"mr-2 size-4\" />\n          View\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"w-[150px]\">\n        <DropdownMenuLabel>Toggle columns</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        {table\n          .getAllColumns()\n          .filter(\n            (column) =>\n              typeof column.accessorFn !== \"undefined\" && column.getCanHide(),\n          )\n          .map((column) => {\n            return (\n              <DropdownMenuCheckboxItem\n                key={column.id}\n                className=\"capitalize\"\n                checked={column.getIsVisible()}\n                onCheckedChange={(value) => column.toggleVisibility(!!value)}\n              >\n                {column.id}\n              </DropdownMenuCheckboxItem>\n            );\n          })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}\n","\"use client\";\n\nimport React, { useState, useContext } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { UserContext } from '@/app/(application)/authenticated';\nimport { ConfigContext } from '@/components/config-context';\nimport { CREATE_USER, GET_USERS } from '@/queries/queries';\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogFooter,\n  DialogHeader,\n  DialogTitle,\n} from '@/components/ui/dialog';\nimport { Button } from '@/components/ui/button';\nimport { Input } from '@/components/ui/input';\nimport { Label } from '@/components/ui/label';\nimport { useToast } from '@/components/ui/use-toast';\nimport { Copy, Eye, EyeOff } from 'lucide-react';\n\ninterface AddUserModalProps {\n  isOpen: boolean;\n  onClose: () => void;\n}\n\nexport function AddUserModal({ isOpen, onClose }: AddUserModalProps) {\n  const { user } = useContext(UserContext);\n  const configContext = useContext(ConfigContext);\n  const { toast } = useToast();\n\n  const [step, setStep] = useState<'email' | 'password'>('email');\n  const [email, setEmail] = useState('');\n  const [generatedPassword, setGeneratedPassword] = useState('');\n  const [showPassword, setShowPassword] = useState(false);\n  const [isCreating, setIsCreating] = useState(false);\n\n  const [createUser] = useMutation(CREATE_USER, {\n    refetchQueries: [GET_USERS, 'GetUsers'],\n  });\n\n  const generatePassword = () => {\n    const length = 12;\n    const charset = 'abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ0123456789!@#$%^&*';\n    let password = '';\n    for (let i = 0; i < length; i++) {\n      password += charset.charAt(Math.floor(Math.random() * charset.length));\n    }\n    return password;\n  };\n\n  const handleEmailSubmit = async () => {\n    if (!email.trim()) {\n      toast({\n        title: 'Error',\n        description: 'Please enter an email address',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    if (!email.includes('@')) {\n      toast({\n        title: 'Error',\n        description: 'Please enter a valid email address',\n        variant: 'destructive',\n      });\n      return;\n    }\n\n    if (configContext?.auth_mode === 'password') {\n      const password = generatePassword();\n      setGeneratedPassword(password);\n      setStep('password');\n    } else {\n      await createUser({\n        variables: {\n          email: email.trim(),\n          password: generatedPassword,\n          type: \"user\",\n          emailVerified: new Date(),\n        },\n      });\n      \n      toast({\n        title: 'User created',\n        description: `User ${email} has been created successfully.`,\n      });\n      \n      handleClose();\n    }\n  };\n\n  const handlePasswordSubmit = async () => {\n    setIsCreating(true);\n    \n    try {\n      await createUser({\n        variables: {\n          email: email.trim(),\n          password: generatedPassword,\n        },\n      });\n      \n      toast({\n        title: 'User created',\n        description: `User ${email} has been created with a temporary password.`,\n      });\n      \n      handleClose();\n    } catch (error) {\n      console.error('Error creating user:', error);\n      toast({\n        title: 'Error',\n        description: 'Failed to create user. Please try again.',\n        variant: 'destructive',\n      });\n    } finally {\n      setIsCreating(false);\n    }\n  };\n\n  const handleClose = () => {\n    setStep('email');\n    setEmail('');\n    setGeneratedPassword('');\n    setShowPassword(false);\n    setIsCreating(false);\n    onClose();\n  };\n\n  const copyToClipboard = async (text: string) => {\n    try {\n      await navigator.clipboard.writeText(text);\n      toast({\n        title: 'Copied',\n        description: 'Password copied to clipboard',\n      });\n    } catch (error) {\n      toast({\n        title: 'Error',\n        description: 'Failed to copy to clipboard',\n        variant: 'destructive',\n      });\n    }\n  };\n\n  if (!user?.super_admin) {\n    return null;\n  }\n\n  return (\n    <Dialog open={isOpen} onOpenChange={handleClose}>\n      <DialogContent className=\"max-w-md\">\n        <DialogHeader>\n          <DialogTitle>\n            {step === 'email' ? 'Add New User' : 'Generated Password'}\n          </DialogTitle>\n          <DialogDescription>\n            {step === 'email' \n              ? 'Enter the email address for the new user.'\n              : 'A temporary password has been generated. Copy and send it to the user manually.'\n            }\n          </DialogDescription>\n        </DialogHeader>\n\n        {step === 'email' && (\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"email\">Email Address</Label>\n              <Input\n                id=\"email\"\n                type=\"email\"\n                value={email}\n                onChange={(e) => setEmail(e.target.value)}\n                placeholder=\"user@example.com\"\n                className=\"mt-1\"\n                autoFocus\n              />\n            </div>\n          </div>\n        )}\n\n        {step === 'password' && (\n          <div className=\"space-y-4\">\n            <div>\n              <Label htmlFor=\"password\">Temporary Password</Label>\n              <div className=\"relative mt-1\">\n                <Input\n                  id=\"password\"\n                  type={showPassword ? 'text' : 'password'}\n                  value={generatedPassword}\n                  readOnly\n                  className=\"pr-20\"\n                />\n                <div className=\"absolute right-1 top-1/2 -translate-y-1/2 flex gap-1\">\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-8 w-8 p-0\"\n                    onClick={() => setShowPassword(!showPassword)}\n                  >\n                    {showPassword ? (\n                      <EyeOff className=\"h-4 w-4\" />\n                    ) : (\n                      <Eye className=\"h-4 w-4\" />\n                    )}\n                  </Button>\n                  <Button\n                    type=\"button\"\n                    variant=\"ghost\"\n                    size=\"sm\"\n                    className=\"h-8 w-8 p-0\"\n                    onClick={() => copyToClipboard(generatedPassword)}\n                  >\n                    <Copy className=\"h-4 w-4\" />\n                  </Button>\n                </div>\n              </div>\n              <p className=\"text-sm text-muted-foreground mt-2\">\n                Please copy this password and send it to {email} manually. The user should change it on their first login.\n              </p>\n            </div>\n          </div>\n        )}\n\n        <DialogFooter>\n          <Button variant=\"outline\" onClick={handleClose}>\n            Cancel\n          </Button>\n          {step === 'email' && (\n            <Button onClick={handleEmailSubmit} disabled={isCreating}>\n              {configContext?.auth_mode === 'password' ? 'Continue' : 'Add User'}\n            </Button>\n          )}\n          {step === 'password' && (\n            <Button onClick={handlePasswordSubmit} disabled={isCreating}>\n              {isCreating ? 'Creating...' : 'Create User'}\n            </Button>\n          )}\n        </DialogFooter>\n      </DialogContent>\n    </Dialog>\n  );\n}","\"use client\";\n\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  Cross2Icon,\n  DoubleArrowLeftIcon,\n  DoubleArrowRightIcon,\n} from \"@radix-ui/react-icons\";\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  flexRender,\n  getCoreRowModel,\n  getFacetedRowModel,\n  getFacetedUniqueValues,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  Row,\n  SortingState,\n  useReactTable,\n  VisibilityState,\n} from \"@tanstack/react-table\";\nimport { Trash2 } from \"lucide-react\";\nimport { useRouter } from \"next/navigation\";\nimport { useState } from \"react\";\nimport * as React from \"react\";\nimport {\n  GET_USERS,\n  REMOVE_USER_BY_ID,\n} from \"@/queries/queries\";\nimport { DataTableViewOptions } from \"@/app/(application)/users/components/data-table-view-options\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Loading } from \"@/components/ui/loading\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { FilterOperator } from \"@/components/custom/recent-jobs\";\nimport { AddUserModal } from \"@/app/(application)/users/components/add-user-modal\";\nimport { UserContext } from \"@/app/(application)/authenticated\";\nimport { Plus } from \"lucide-react\";\nexport type UserFilters = {\n  firstname?: FilterOperator,\n  lastname?: FilterOperator,\n  email?: FilterOperator,\n  type?: FilterOperator,\n  status?: FilterOperator,\n  createdAt?: FilterOperator,\n  updatedAt?: FilterOperator,\n}\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n}\n\nexport function usePagination() {\n  const [pagination, setPagination] = useState({\n    pageSize: 5,\n    pageIndex: 0,\n  });\n  const { pageSize, pageIndex } = pagination;\n\n  return {\n    limit: pageSize,\n    onPaginationChange: setPagination,\n    pagination,\n    skip: pageSize * pageIndex,\n  };\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n}: DataTableProps<TData, TValue>) {\n  const { toast } = useToast();\n  const router = useRouter();\n  const { user } = React.useContext(UserContext);\n  const [rowSelection, setRowSelection] = React.useState({});\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    [],\n  );\n  const [isAddUserModalOpen, setIsAddUserModalOpen] = React.useState(false);\n  const [filters, setFilters] = useState<UserFilters[]>([]);\n\n  /* todo: get rid of own page state and use the table.currentPage() instead */\n  let [page, setPage] = useState(1);\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n\n  const { loading, error, data, refetch, previousData } = useQuery(GET_USERS, {\n    fetchPolicy: \"no-cache\",\n    nextFetchPolicy: \"network-only\",\n    variables: {\n      page: page,\n      limit: 10,\n      sort: {\n        field: \"createdAt\",\n        direction: \"DESC\",\n      },\n      filters: [\n        ...filters,\n        {\n          type: {\n            ne: \"api\"\n          }\n        }\n      ],\n    },\n    pollInterval: 30000, // polls every 30 seconds for updates on users\n  });\n\n  const defaultData = React.useMemo(() => [], []);\n  const { limit, onPaginationChange, skip, pagination } = usePagination();\n\n  const [removeUser, removeUserResult] = useMutation(REMOVE_USER_BY_ID, {\n    refetchQueries: [\n      GET_USERS, // DocumentNode object parsed with gql\n      \"GetUsers\", // Query name\n    ],\n  });\n\n  let items;\n  let pageCount;\n  if (loading && previousData?.usersPagination?.items) {\n    items = previousData?.usersPagination?.items;\n    pageCount = previousData?.usersPagination?.pageInfo?.pageCount;\n  } else if (data?.usersPagination?.items) {\n    items = data?.usersPagination?.items;\n    pageCount = data?.usersPagination?.pageInfo?.pageCount;\n  } else if (previousData?.usersPagination?.items) {\n    items = previousData?.usersPagination?.items;\n    pageCount = previousData?.usersPagination?.pageInfo?.pageCount;\n  }\n\n  const table = useReactTable({\n    data: items ?? defaultData,\n    pageCount: pageCount ?? -1,\n    columns,\n    state: {\n      sorting,\n      columnVisibility,\n      rowSelection,\n      columnFilters,\n    },\n    enableRowSelection: true,\n    onRowSelectionChange: setRowSelection,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    onColumnVisibilityChange: setColumnVisibility,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFacetedRowModel: getFacetedRowModel(),\n    getFacetedUniqueValues: getFacetedUniqueValues(),\n    manualPagination: true,\n    onPaginationChange,\n  });\n\n  const search = (value: string) => {\n    const copy = [...filters];\n    const exists = copy.find((filter) => filter.email);\n    if (exists?.email) {\n      exists.email.contains = value;\n    } else {\n      copy.push({\n        email: {\n          contains: value,\n        },\n      });\n    }\n    setFilters(copy);\n    refetch();\n  };\n\n  const isFiltered = filters.length > 0;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex flex-1 items-center space-x-2\">\n          <Input\n            placeholder=\"Filter users...\"\n            value={filters?.find((filter) => filter.email)?.email?.contains ?? \"\"}\n            onChange={(event) => {\n              search(event.target.value);\n            }}\n            className=\"w-[150px] lg:w-[250px]\"\n          />\n\n          <Button\n            variant=\"outline\"\n            onClick={() => {\n              router.push(\"/roles\");\n            }}\n          >\n            Manage roles\n          </Button>\n\n          {user?.super_admin && (\n            <Button\n              onClick={() => setIsAddUserModalOpen(true)}\n              className=\"flex items-center gap-2\"\n            >\n              <Plus className=\"size-4\" />\n              Add User\n            </Button>\n          )}\n\n          {table.getIsSomeRowsSelected() || table.getIsAllRowsSelected() ? (\n            <div className=\"flex gap-x-2\">\n              <Button\n                onClick={() => {\n                  // confirm modal\n                  const confirm = window.confirm(\"Are you sure you want to remove the selected users?\");\n                  if (!confirm) {\n                    return;\n                  }\n                  const promises: any[] = [];\n                  table.getSelectedRowModel().rows.forEach((row: Row<any>) => {\n                    promises.push(\n                      removeUser({\n                        variables: {\n                          id: row.original.id,\n                        },\n                      }),\n                    );\n                  });\n                  Promise.all(promises).then(() => {\n                    table.resetRowSelection();\n                    toast({\n                      title: \"Removed users\",\n                      description: \"We removed \" + promises.length + \" users.\",\n                    });\n                  });\n                }}\n                variant=\"secondary\"\n                disabled={removeUserResult.loading}\n              >\n                {removeUserResult.loading ? (\n                  <Loading />\n                ) : (\n                  <Trash2 className=\"size-4\" />\n                )}\n                <span className=\"ml-2\">Remove selected</span>\n              </Button>\n            </div>\n          ) : null}\n\n          {isFiltered && (\n            <Button\n              variant=\"ghost\"\n              onClick={() => {\n                const copy = [...filters];\n                const emailFilter = copy.find((filter) => filter.email);\n                if (emailFilter) {\n                  copy.splice(copy.indexOf(emailFilter), 1);\n                }\n                setFilters(copy);\n                refetch();\n              }}\n            >\n              Reset\n              <Cross2Icon className=\"ml-2 size-4\" />\n            </Button>\n          )}\n        </div>\n        <DataTableViewOptions table={table} />\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id} colSpan={header.colSpan}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext(),\n                        )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && \"selected\"}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext(),\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No results.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-between px-2\">\n        <div className=\"text-muted-foreground flex-1 text-sm\">\n          {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <div className=\"flex items-center space-x-6 lg:space-x-8\">\n          {/*<div className=\"flex items-center space-x-2\">\n            <p className=\"text-sm font-medium\">Rows per page</p>\n            <Select\n              value={`${table.getState().pagination.pageSize}`}\n              onValueChange={(value) => {\n                table.setPageSize(Number(value));\n              }}\n            >\n              <SelectTrigger className=\"h-8 w-[70px]\">\n                <SelectValue\n                  placeholder={table.getState().pagination.pageSize}\n                />\n              </SelectTrigger>\n              <SelectContent side=\"top\">\n                {[10, 20, 30, 40, 50].map((pageSize) => (\n                  <SelectItem key={pageSize} value={`${pageSize}`}>\n                    {pageSize}\n                  </SelectItem>\n                ))}\n              </SelectContent>\n            </Select>\n          </div>*/}\n          <div className=\"flex w-[100px] items-center justify-center text-sm font-medium\">\n            Page {page} of {table.getPageCount()}\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              variant=\"outline\"\n              className=\"hidden size-8 p-0 lg:flex\"\n              onClick={() => {\n                table.setPageIndex(0);\n                setPage(1);\n                refetch();\n              }}\n              disabled={!data?.usersPagination?.pageInfo.hasPreviousPage}\n            >\n              <span className=\"sr-only\">Go to first page</span>\n              <DoubleArrowLeftIcon className=\"size-4\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              className=\"size-8 p-0\"\n              onClick={() => {\n                table.previousPage();\n                setPage(page - 1);\n                refetch();\n              }}\n              disabled={!data?.usersPagination?.pageInfo.hasPreviousPage}\n            >\n              <span className=\"sr-only\">Go to previous page</span>\n              <ChevronLeftIcon className=\"size-4\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              className=\"size-8 p-0\"\n              onClick={() => {\n                table.nextPage();\n                setPage(page + 1);\n                refetch();\n              }}\n              disabled={!data?.usersPagination?.pageInfo.hasNextPage}\n            >\n              <span className=\"sr-only\">Go to next page</span>\n              <ChevronRightIcon className=\"size-4\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              className=\"hidden size-8 p-0 lg:flex\"\n              onClick={() => {\n                () => {\n                  table.setPageIndex(table.getPageCount() - 1);\n                };\n                setPage(table.getPageCount());\n                refetch();\n              }}\n              disabled={!data?.usersPagination?.pageInfo.hasNextPage}\n            >\n              <span className=\"sr-only\">Go to last page</span>\n              <DoubleArrowRightIcon className=\"size-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n      \n      <AddUserModal \n        isOpen={isAddUserModalOpen} \n        onClose={() => setIsAddUserModalOpen(false)} \n      />\n    </div>\n  );\n}\n","\"use client\";\n\nimport { useContext } from \"react\";\nimport { createColumns } from \"./components/columns\";\nimport { DataTable } from \"./components/data-table\";\nimport { UserContext } from \"@/app/(application)/authenticated\";\nimport { GET_USERS, UPDATE_USER_BY_ID } from \"@/queries/queries\";\nimport { useMutation } from \"@apollo/client\";\n\nexport const dynamic = \"force-dynamic\";\n\nexport default function UsersPage() {\n  const { user: currentUser } = useContext(UserContext);\n  const columns = createColumns(currentUser, (user, role) => {\n    console.log(\"user\", user);\n    console.log(\"role\", role);\n    updateUser({\n      variables: {\n        id: user.id,\n        role,\n      },\n    });\n  });\n\n  const [updateUser, updateUserResult] = useMutation(UPDATE_USER_BY_ID, {\n    refetchQueries: [\n      GET_USERS, // DocumentNode object parsed with gql\n      \"GetUsers\", // Query name\n    ],\n  });\n\n  return (\n    <>\n      <div className=\"hidden h-full flex-1 flex-col space-y-8 p-8 md:flex\">\n        <div className=\"flex items-center justify-between space-y-2\">\n          <div>\n            <h2 className=\"text-2xl font-bold tracking-tight\">Users</h2>\n            <p className=\"text-muted-foreground\">\n              Here's a list of all the users.\n            </p>\n          </div>\n        </div>\n        <DataTable columns={columns} />\n      </div>\n    </>\n  );\n}\n","\"use client\";\n\nimport * as CheckboxPrimitive from \"@radix-ui/react-checkbox\";\nimport { Check } from \"lucide-react\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Checkbox = React.forwardRef<\n  React.ElementRef<typeof CheckboxPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof CheckboxPrimitive.Root>\n>(({ className, ...props }, ref) => (\n  <CheckboxPrimitive.Root\n    ref={ref}\n    className={cn(\n      \"peer h-4 w-4 shrink-0 rounded-sm border border-primary ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=checked]:text-primary-foreground\",\n      className,\n    )}\n    {...props}\n  >\n    <CheckboxPrimitive.Indicator\n      className={cn(\"flex items-center justify-center text-current\")}\n    >\n      <Check className=\"size-4\" />\n    </CheckboxPrimitive.Indicator>\n  </CheckboxPrimitive.Root>\n));\nCheckbox.displayName = CheckboxPrimitive.Root.displayName;\n\nexport { Checkbox };\n","\"use client\";\n\nimport * as LabelPrimitive from \"@radix-ui/react-label\";\nimport { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\",\n);\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n));\nLabel.displayName = LabelPrimitive.Root.displayName;\n\nexport { Label };\n","import { cn } from \"@/lib/utils\";\n\nexport const Loading = ({ className }: { className?: null | string }) => {\n  return (\n    <svg\n      aria-hidden=\"true\"\n      role=\"status\"\n      className={cn(\"inline w-4 h-4 text-white animate-spin fill-inherit\", className)}\n      viewBox=\"0 0 100 101\"\n      fill=\"none\"\n      xmlns=\"http://www.w3.org/2000/svg\"\n    >\n      <path\n        d=\"M100 50.5908C100 78.2051 77.6142 100.591 50 100.591C22.3858 100.591 0 78.2051 0 50.5908C0 22.9766 22.3858 0.59082 50 0.59082C77.6142 0.59082 100 22.9766 100 50.5908ZM9.08144 50.5908C9.08144 73.1895 27.4013 91.5094 50 91.5094C72.5987 91.5094 90.9186 73.1895 90.9186 50.5908C90.9186 27.9921 72.5987 9.67226 50 9.67226C27.4013 9.67226 9.08144 27.9921 9.08144 50.5908Z\"\n        className=\"fill-inherit opacity-20\"\n      ></path>\n      <path\n        d=\"M93.9676 39.0409C96.393 38.4038 97.8624 35.9116 97.0079 33.5539C95.2932 28.8227 92.871 24.3692 89.8167 20.348C85.8452 15.1192 80.8826 10.7238 75.2124 7.41289C69.5422 4.10194 63.2754 1.94025 56.7698 1.05124C51.7666 0.367541 46.6976 0.446843 41.7345 1.27873C39.2613 1.69328 37.813 4.19778 38.4501 6.62326C39.0873 9.04874 41.5694 10.4717 44.0505 10.1071C47.8511 9.54855 51.7191 9.52689 55.5402 10.0491C60.8642 10.7766 65.9928 12.5457 70.6331 15.2552C75.2735 17.9648 79.3347 21.5619 82.5849 25.841C84.9175 28.9121 86.7997 32.2913 88.1811 35.8758C89.083 38.2158 91.5421 39.6781 93.9676 39.0409Z\"\n        className=\"fill-inherit\"\n      ></path>\n    </svg>\n  );\n};\n","\"use client\";\n\nimport * as SwitchPrimitives from \"@radix-ui/react-switch\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Switch = React.forwardRef<\n  React.ElementRef<typeof SwitchPrimitives.Root>,\n  React.ComponentPropsWithoutRef<typeof SwitchPrimitives.Root>\n>(({ className, ...props }, ref) => (\n  <SwitchPrimitives.Root\n    className={cn(\n      \"peer inline-flex h-6 w-11 shrink-0 cursor-pointer items-center rounded-full border-2 border-transparent transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 focus-visible:ring-offset-background disabled:cursor-not-allowed disabled:opacity-50 data-[state=checked]:bg-primary data-[state=unchecked]:bg-input\",\n      className,\n    )}\n    {...props}\n    ref={ref}\n  >\n    <SwitchPrimitives.Thumb\n      className={cn(\n        \"pointer-events-none block h-5 w-5 rounded-full bg-background shadow-lg ring-0 transition-transform data-[state=checked]:translate-x-5 data-[state=unchecked]:translate-x-0\",\n      )}\n    />\n  </SwitchPrimitives.Root>\n));\nSwitch.displayName = SwitchPrimitives.Root.displayName;\n\nexport { Switch };\n"],"names":["Promise","resolve","then","__webpack_require__","bind","DataTableColumnHeader","param","column","title","className","getCanSort","jsx_runtime","jsx","div","cn","jsxs","DropdownMenu","DropdownMenuTrigger","asChild","Button","variant","size","span","getIsSorted","ArrowDownIcon","ArrowUpIcon","CaretSortIcon","DropdownMenuContent","align","DropdownMenuItem","onClick","toggleSorting","DropdownMenuSeparator","toggleVisibility","EyeNoneIcon","userSchema","z","id","email","emailVerified","nullable","optional","roles","role","DataTableRowActions","row","user","currentUser","useContext","UserContext","parse","original","toast","useToast","isResetPasswordOpen","setIsResetPasswordOpen","useState","generatedPassword","setGeneratedPassword","showPassword","setShowPassword","isResetting","setIsResetting","removeUser","removeUserResult","useMutation","REMOVE_USER_BY_ID","refetchQueries","GET_USERS","resetPassword","RESET_USER_PASSWORD","generatePassword","charset","password","i","charAt","Math","floor","random","length","handleConfirmReset","variables","description","concat","error","console","copyToClipboard","text","navigator","clipboard","writeText","Fragment","DotsHorizontalIcon","window","confirm","Dialog","open","onOpenChange","DialogContent","DialogHeader","DialogTitle","DialogDescription","Label","htmlFor","Input","type","value","readOnly","EyeOff","Eye","Copy","p","DialogFooter","disabled","SuperAdminToggle","isDialogOpen","setIsDialogOpen","isLoading","setIsLoading","pendingChange","setPendingChange","updateUser","UPDATE_USER_BY_ID","isSuperAdmin","Boolean","super_admin","isCurrentUser","handleConfirm","message","Switch","checked","onCheckedChange","AlertTriangle","strong","createColumns","roleChange","header","table","Checkbox","getIsAllPageRowsSelected","getIsSomePageRowsSelected","toggleAllPageRowsSelected","aria-label","cell","getIsSelected","toggleSelected","enableSorting","enableHiding","accessorKey","RoleSelector","onChange","filterFn","includes","getValue","DataTableViewOptions","MixerHorizontalIcon","DropdownMenuLabel","getAllColumns","filter","accessorFn","getCanHide","map","DropdownMenuCheckboxItem","getIsVisible","AddUserModal","isOpen","onClose","configContext","ConfigContext","step","setStep","setEmail","isCreating","setIsCreating","createUser","CREATE_USER","handleEmailSubmit","trim","auth_mode","Date","handleClose","handlePasswordSubmit","e","target","placeholder","autoFocus","DataTable","previousData","data","filters","items","pageCount","columns","router","useRouter","React","rowSelection","setRowSelection","columnVisibility","setColumnVisibility","columnFilters","setColumnFilters","isAddUserModalOpen","setIsAddUserModalOpen","setFilters","page","setPage","sorting","setSorting","loading","refetch","useQuery","fetchPolicy","nextFetchPolicy","limit","sort","field","direction","ne","pollInterval","defaultData","onPaginationChange","skip","pagination","usePagination","setPagination","pageSize","pageIndex","usersPagination","pageInfo","useReactTable","state","enableRowSelection","onRowSelectionChange","onSortingChange","onColumnFiltersChange","onColumnVisibilityChange","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","getSortedRowModel","getFacetedRowModel","getFacetedUniqueValues","manualPagination","search","copy","exists","find","contains","push","isFiltered","event","Plus","getIsSomeRowsSelected","getIsAllRowsSelected","promises","getSelectedRowModel","rows","forEach","all","resetRowSelection","Loading","Trash2","emailFilter","splice","indexOf","Cross2Icon","Table","TableHeader","getHeaderGroups","TableRow","headerGroup","headers","TableHead","colSpan","isPlaceholder","flexRender","columnDef","getContext","TableBody","getRowModel","data-state","getVisibleCells","TableCell","getFilteredSelectedRowModel","getPageCount","setPageIndex","hasPreviousPage","DoubleArrowLeftIcon","previousPage","ChevronLeftIcon","nextPage","hasNextPage","ChevronRightIcon","DoubleArrowRightIcon","dynamic","UsersPage","log","updateUserResult","h2","ref","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","CheckboxPrimitive","Check","displayName","labelVariants","cva","LabelPrimitive","svg","aria-hidden","viewBox","fill","xmlns","path","d","SwitchPrimitives"],"sourceRoot":""}