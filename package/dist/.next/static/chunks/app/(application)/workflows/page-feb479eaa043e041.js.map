{"version":3,"file":"static/chunks/app/(application)/workflows/page-feb479eaa043e041.js","mappings":"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","sources":["webpack://_N_E/?8aa1","webpack://_N_E/./app/(application)/workflows/components/columns.tsx","webpack://_N_E/./app/(application)/workflows/components/data-table-view-options.tsx","webpack://_N_E/./app/(application)/workflows/components/data-table.tsx","webpack://_N_E/./app/(application)/workflows/components/jobs-status-area.tsx","webpack://_N_E/./app/(application)/workflows/page.tsx","webpack://_N_E/./components/ai-elements/code-block.tsx","webpack://_N_E/./components/ai-elements/response.tsx","webpack://_N_E/./components/ui/alert-dialog.tsx","webpack://_N_E/./components/ui/table.tsx","webpack://_N_E/./components/ui/tabs.tsx"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/daniel.claessen/Desktop/Projects/exulu/frontend/app/(application)/workflows/page.tsx\");\n","\"use client\";\n\nimport { ColumnDef } from \"@tanstack/react-table\";\nimport { ArrowUpDown, Edit, Eye, Play, Trash2 } from \"lucide-react\";\nimport { useState } from \"react\";\nimport { Button } from \"@/components/ui/button\";\nimport { Badge } from \"@/components/ui/badge\";\nimport { SaveWorkflowModal } from \"@/components/save-workflow-modal\";\nimport { formatDistanceToNow } from \"date-fns\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { GET_JOBS, REMOVE_WORKFLOW_TEMPLATE_BY_ID, GET_WORKFLOW_TEMPLATES } from \"@/queries/queries\";\nimport {\n  AlertDialog,\n  AlertDialogContent,\n  AlertDialogDescription,\n  AlertDialogFooter,\n  AlertDialogHeader,\n  AlertDialogTitle,\n} from \"@/components/ui/alert-dialog\";\nimport { Input } from \"@/components/ui/input\";\nimport { Label } from \"@/components/ui/label\";\nimport { useToast } from \"@/components/ui/use-toast\";\n\nexport type Workflow = {\n  id: string;\n  name: string;\n  description?: string;\n  owner: number;\n  rights_mode: \"private\" | \"users\" | \"roles\" | \"public\" | \"projects\";\n  RBAC: {\n    users: Array<{ id: number; rights: \"read\" | \"write\" }>;\n    roles: Array<{ id: string; rights: \"read\" | \"write\" }>;\n    projects: Array<{ id: string; rights: \"read\" | \"write\" }>;\n  };\n  variables?: any[];\n  steps_json?: any[];\n  createdAt: string;\n  updatedAt: string;\n};\n\nexport type WorkflowWithLastRun = Workflow & {\n  lastRunAt?: string;\n  lastRunStatus?: string;\n};\n\nfunction useLastRunForWorkflow(workflowId: string) {\n  const { data } = useQuery(GET_JOBS, {\n    variables: {\n      page: 1,\n      limit: 1,\n      filters: [\n        {\n          workflow: { eq: workflowId }\n        }\n      ],\n      sort: { field: \"createdAt\", direction: \"DESC\" }\n    },\n    pollInterval: 5000 // Poll every 5 seconds for recent runs\n  });\n\n  const lastJob = data?.jobsPagination?.items?.[0];\n  return {\n    lastRunAt: lastJob?.createdAt,\n    lastRunStatus: lastJob?.status\n  };\n}\n\nfunction LastRunCell({ workflowId }: { workflowId: string }) {\n  const { lastRunAt, lastRunStatus } = useLastRunForWorkflow(workflowId);\n\n  if (!lastRunAt) {\n    return <span className=\"text-muted-foreground text-sm\">Never run</span>;\n  }\n\n  const getStatusColor = (status: string) => {\n    switch (status) {\n      case 'completed': return 'bg-green-100 text-green-800';\n      case 'failed': case 'stuck': return 'bg-red-100 text-red-800';\n      case 'active': case 'waiting': case 'delayed': case 'paused': return 'bg-blue-100 text-blue-800';\n      default: return 'bg-gray-100 text-gray-800';\n    }\n  };\n\n  return (\n    <div className=\"flex flex-col gap-1\">\n      <div className=\"text-sm\">\n        {formatDistanceToNow(new Date(lastRunAt), { addSuffix: true })}\n      </div>\n      <Badge variant=\"outline\" className={getStatusColor(lastRunStatus)}>\n        {lastRunStatus}\n      </Badge>\n    </div>\n  );\n}\n\nfunction WorkflowActionsCell({ workflow, user }: { workflow: WorkflowWithLastRun; user: any }) {\n  const [isEditModalOpen, setIsEditModalOpen] = useState(false);\n  const [isDeleteModalOpen, setIsDeleteModalOpen] = useState(false);\n  const [deleteConfirmation, setDeleteConfirmation] = useState('');\n  const { toast } = useToast();\n  \n  // Determine if user has write access\n  const hasWriteAccess = (() => {\n    if (workflow.owner === user.id) return true;\n    if (workflow.rights_mode === 'public') return false; // Public workflows can only be edited by owner\n    if (workflow.rights_mode === 'users' && workflow.RBAC.users) {\n      const userAccess = workflow.RBAC.users.find(u => u.id === user.id.toString());\n      return userAccess?.rights === 'write';\n    }\n    if (workflow.rights_mode === 'roles' && workflow.RBAC.roles && user.role) {\n      const roleAccess = workflow.RBAC.roles.find(r => r.id === user.role);\n      return roleAccess?.rights === 'write';\n    }\n    return false;\n  })();\n\n  const [removeWorkflow] = useMutation(REMOVE_WORKFLOW_TEMPLATE_BY_ID, {\n    refetchQueries: [GET_WORKFLOW_TEMPLATES, \"GetWorkflowTemplates\"],\n  });\n\n  const handleDelete = async () => {\n    if (deleteConfirmation !== workflow.name) {\n      toast({\n        title: \"Error\",\n        description: \"Please type the workflow name exactly to confirm deletion.\",\n        variant: \"destructive\",\n      });\n      return;\n    }\n\n    try {\n      await removeWorkflow({\n        variables: { id: workflow.id },\n      });\n      toast({\n        title: \"Workflow deleted\",\n        description: `\"${workflow.name}\" has been successfully deleted.`,\n      });\n      setIsDeleteModalOpen(false);\n      setDeleteConfirmation('');\n    } catch (error) {\n      toast({\n        title: \"Error\",\n        description: \"Failed to delete the workflow. Please try again.\",\n        variant: \"destructive\",\n      });\n    }\n  };\n\n  // Transform workflow back to messages format for the modal\n  // TODO just keep the workflow messages in the ai-sdk format!!\n  const workflowMessages: any[] = workflow.steps_json?.map((step: any, index: number) => ({\n    id: step.id || `msg_${index}`,\n    role: step.type === 'user' ? 'user' as const : \n          step.type === 'assistant' ? 'assistant' as const : \n          'system' as const,\n    content: step.content || step.contentExample || `Tool: ${step.toolName}`,\n    ...(step.type === 'tool' && {\n      parts: [{\n        type: 'tool-invocation',\n        toolInvocation: {\n          toolName: step.toolName\n        }\n      }]\n    })\n  })) || [];\n\n  return (\n    <>\n      <div className=\"flex items-center gap-2\">\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => setIsEditModalOpen(true)}\n        >\n          {hasWriteAccess ? <Edit className=\"h-4 w-4\" /> : <Eye className=\"h-4 w-4\" />}\n        </Button>\n        <Button\n          variant=\"ghost\"\n          size=\"sm\"\n          onClick={() => {\n            // TODO: Implement workflow run functionality\n            console.log('Run workflow:', workflow.id);\n          }}\n        >\n          <Play className=\"h-4 w-4\" />\n        </Button>\n        {hasWriteAccess && (\n          <Button\n            variant=\"ghost\"\n            size=\"sm\"\n            onClick={() => setIsDeleteModalOpen(true)}\n            className=\"text-red-600 hover:text-red-700 hover:bg-red-50\"\n          >\n            <Trash2 className=\"h-4 w-4\" />\n          </Button>\n        )}\n      </div>\n      \n      <SaveWorkflowModal\n        isOpen={isEditModalOpen}\n        onClose={() => setIsEditModalOpen(false)}\n        messages={workflowMessages}\n        sessionTitle={workflow.name}\n        existingWorkflow={{\n          id: workflow.id,\n          name: workflow.name,\n          description: workflow.description,\n          rights_mode: workflow.rights_mode,\n          RBAC: workflow.RBAC,\n          variables: workflow.variables,\n          steps_json: workflow.steps_json\n        }}\n        isReadOnly={!hasWriteAccess}\n      />\n\n      <AlertDialog open={isDeleteModalOpen} onOpenChange={setIsDeleteModalOpen}>\n        <AlertDialogContent>\n          <AlertDialogHeader>\n            <AlertDialogTitle>Delete Workflow</AlertDialogTitle>\n            <AlertDialogDescription>\n              This action will permanently delete the workflow \"{workflow.name}\" and cannot be undone.\n              <br /><br />\n              To confirm, please type the workflow name below:\n            </AlertDialogDescription>\n          </AlertDialogHeader>\n          <div className=\"py-4\">\n            <Label htmlFor=\"delete-confirmation\" className=\"text-sm font-medium\">\n              Workflow name\n            </Label>\n            <Input\n              id=\"delete-confirmation\"\n              value={deleteConfirmation}\n              onChange={(e) => setDeleteConfirmation(e.target.value)}\n              placeholder={workflow.name}\n              className=\"mt-2\"\n            />\n          </div>\n          <AlertDialogFooter>\n            <Button\n              variant=\"outline\"\n              onClick={() => {\n                setIsDeleteModalOpen(false);\n                setDeleteConfirmation('');\n              }}\n            >\n              Cancel\n            </Button>\n            <Button\n              variant=\"destructive\"\n              onClick={handleDelete}\n              disabled={deleteConfirmation !== workflow.name}\n            >\n              Delete Workflow\n            </Button>\n          </AlertDialogFooter>\n        </AlertDialogContent>\n      </AlertDialog>\n    </>\n  );\n}\n\nexport function createColumns(user: any): ColumnDef<WorkflowWithLastRun>[] {\n  return [\n    {\n      accessorKey: \"name\",\n      header: ({ column }) => {\n        return (\n          <Button\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n          >\n            Name\n            <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n          </Button>\n        );\n      },\n      cell: ({ row }) => {\n        const workflow = row.original;\n        return (\n          <div className=\"flex flex-col gap-1\">\n            <div className=\"font-medium\">{workflow.name}</div>\n            {workflow.description && (\n              <div className=\"text-sm text-muted-foreground line-clamp-1\">\n                {workflow.description}\n              </div>\n            )}\n          </div>\n        );\n      },\n    },\n    {\n      accessorKey: \"visibility\",\n      header: \"Visibility\",\n      cell: ({ row }) => {\n        const visibility = row.original.rights_mode || 'private';\n        const getVisibilityColor = (visibility: string) => {\n          switch (visibility) {\n            case 'private': return 'bg-gray-100 text-gray-800';\n            case 'public': return 'bg-green-100 text-green-800';\n            case 'users': return 'bg-blue-100 text-blue-800';\n            case 'roles': return 'bg-purple-100 text-purple-800';\n            default: return 'bg-gray-100 text-gray-800';\n          }\n        };\n        const getVisibilityText = (visibility: string) => { \n          switch (visibility) {\n            case 'private': return 'Private';\n            case 'public': return 'Public';\n            case 'users': return `Users (${row.original.RBAC.users.length})`;\n            case 'roles': return `Roles (${row.original.RBAC.roles.length})`;\n            default: return 'Private';\n          }\n        };\n        return (\n          <Badge variant=\"outline\" className={getVisibilityColor(visibility)}>\n            {getVisibilityText(visibility)}\n          </Badge>\n        );\n      },\n    },\n    {\n      accessorKey: \"createdAt\",\n      header: ({ column }) => {\n        return (\n          <Button\n          className=\"p-0\"\n            variant=\"ghost\"\n            onClick={() => column.toggleSorting(column.getIsSorted() === \"asc\")}\n          >\n            Created\n            <ArrowUpDown className=\"ml-2 h-4 w-4\" />\n          </Button>\n        );\n      },\n      cell: ({ row }) => {\n        const createdAt = row.getValue(\"createdAt\") as string;\n        return (\n          <div className=\"text-sm\">\n            {formatDistanceToNow(new Date(createdAt), { addSuffix: true })}\n          </div>\n        );\n      },\n    },\n    {\n      id: \"lastRun\",\n      header: \"Last Run\",\n      cell: ({ row }) => {\n        return <LastRunCell workflowId={row.original.id} />;\n      },\n    },\n    {\n      id: \"actions\",\n      header: \"Actions\",\n      cell: ({ row }) => {\n        return <WorkflowActionsCell workflow={row.original} user={user} />;\n      },\n    },\n  ];\n}","\"use client\";\n\nimport { DropdownMenuTrigger } from \"@radix-ui/react-dropdown-menu\";\nimport { MixerHorizontalIcon } from \"@radix-ui/react-icons\";\nimport { Table } from \"@tanstack/react-table\";\n\nimport { Button } from \"@/components/ui/button\";\nimport {\n  DropdownMenu,\n  DropdownMenuCheckboxItem,\n  DropdownMenuContent,\n  DropdownMenuLabel,\n  DropdownMenuSeparator,\n} from \"@/components/ui/dropdown-menu\";\n\ninterface DataTableViewOptionsProps<TData> {\n  table: Table<TData>;\n}\n\nexport function DataTableViewOptions<TData>({\n  table,\n}: DataTableViewOptionsProps<TData>) {\n  return (\n    <DropdownMenu>\n      <DropdownMenuTrigger asChild>\n        <Button\n          variant=\"outline\"\n          size=\"sm\"\n          className=\"ml-auto hidden h-8 lg:flex\"\n        >\n          <MixerHorizontalIcon className=\"mr-2 size-4\" />\n          View\n        </Button>\n      </DropdownMenuTrigger>\n      <DropdownMenuContent align=\"end\" className=\"w-[150px]\">\n        <DropdownMenuLabel>Toggle columns</DropdownMenuLabel>\n        <DropdownMenuSeparator />\n        {table\n          .getAllColumns()\n          .filter(\n            (column) =>\n              typeof column.accessorFn !== \"undefined\" && column.getCanHide(),\n          )\n          .map((column) => {\n            return (\n              <DropdownMenuCheckboxItem\n                key={column.id}\n                className=\"capitalize\"\n                checked={column.getIsVisible()}\n                onCheckedChange={(value) => column.toggleVisibility(!!value)}\n              >\n                {column.id}\n              </DropdownMenuCheckboxItem>\n            );\n          })}\n      </DropdownMenuContent>\n    </DropdownMenu>\n  );\n}","\"use client\";\n\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport {\n  ChevronLeftIcon,\n  ChevronRightIcon,\n  Cross2Icon,\n  DoubleArrowLeftIcon,\n  DoubleArrowRightIcon,\n} from \"@radix-ui/react-icons\";\nimport {\n  ColumnDef,\n  ColumnFiltersState,\n  flexRender,\n  getCoreRowModel,\n  getFacetedRowModel,\n  getFacetedUniqueValues,\n  getFilteredRowModel,\n  getPaginationRowModel,\n  getSortedRowModel,\n  Row,\n  SortingState,\n  useReactTable,\n  VisibilityState,\n} from \"@tanstack/react-table\";\nimport { Trash2 } from \"lucide-react\";\nimport { useState } from \"react\";\nimport * as React from \"react\";\nimport {\n  GET_WORKFLOW_TEMPLATES,\n  REMOVE_WORKFLOW_TEMPLATE_BY_ID,\n} from \"@/queries/queries\";\nimport { DataTableViewOptions } from \"./data-table-view-options\";\nimport { Button } from \"@/components/ui/button\";\nimport { Input } from \"@/components/ui/input\";\nimport { Loading } from \"@/components/ui/loading\";\nimport { Skeleton } from \"@/components/ui/skeleton\";\nimport {\n  Table,\n  TableBody,\n  TableCell,\n  TableHead,\n  TableHeader,\n  TableRow,\n} from \"@/components/ui/table\";\nimport { useToast } from \"@/components/ui/use-toast\";\nimport { FilterOperator } from \"@/components/custom/recent-jobs\";\n\nexport type WorkflowFilters = {\n  name?: FilterOperator,\n  visibility?: FilterOperator,\n  createdAt?: FilterOperator,\n  updatedAt?: FilterOperator,\n}\n\ninterface DataTableProps<TData, TValue> {\n  columns: ColumnDef<TData, TValue>[];\n}\n\nexport function usePagination() {\n  const [pagination, setPagination] = useState({\n    pageSize: 10,\n    pageIndex: 0,\n  });\n  const { pageSize, pageIndex } = pagination;\n\n  return {\n    limit: pageSize,\n    onPaginationChange: setPagination,\n    pagination,\n    skip: pageSize * pageIndex,\n  };\n}\n\nexport function DataTable<TData, TValue>({\n  columns,\n}: DataTableProps<TData, TValue>) {\n  const { toast } = useToast();\n  const [rowSelection, setRowSelection] = React.useState({});\n  const [columnVisibility, setColumnVisibility] =\n    React.useState<VisibilityState>({});\n  const [columnFilters, setColumnFilters] = React.useState<ColumnFiltersState>(\n    [],\n  );\n\n  const [filters, setFilters] = useState<WorkflowFilters[]>([]);\n\n  let [page, setPage] = useState(1);\n  const [sorting, setSorting] = React.useState<SortingState>([]);\n\n  const { loading, error, data, refetch, previousData } = useQuery(GET_WORKFLOW_TEMPLATES, {\n    fetchPolicy: \"no-cache\",\n    nextFetchPolicy: \"network-only\",\n    variables: {\n      page: page,\n      limit: 10,\n      filters: filters,\n    },\n    pollInterval: 30000,\n  });\n\n  const defaultData = React.useMemo(() => [], []);\n  const { limit, onPaginationChange, skip, pagination } = usePagination();\n\n  const [removeWorkflow, removeWorkflowResult] = useMutation(REMOVE_WORKFLOW_TEMPLATE_BY_ID, {\n    refetchQueries: [\n      GET_WORKFLOW_TEMPLATES,\n      \"GetWorkflowTemplates\",\n    ],\n  });\n\n  let items;\n  let pageCount;\n  if (loading && previousData?.workflow_templatesPagination?.items) {\n    items = previousData?.workflow_templatesPagination?.items;\n    pageCount = previousData?.workflow_templatesPagination?.pageInfo?.pageCount;\n  } else if (data?.workflow_templatesPagination?.items) {\n    items = data?.workflow_templatesPagination?.items;\n    pageCount = data?.workflow_templatesPagination?.pageInfo?.pageCount;\n  } else if (previousData?.workflow_templatesPagination?.items) {\n    items = previousData?.workflow_templatesPagination?.items;\n    pageCount = previousData?.workflow_templatesPagination?.pageInfo?.pageCount;\n  }\n\n  const table = useReactTable({\n    data: items ?? defaultData,\n    pageCount: pageCount ?? -1,\n    columns,\n    state: {\n      sorting,\n      columnVisibility,\n      rowSelection,\n      columnFilters,\n    },\n    enableRowSelection: true,\n    onRowSelectionChange: setRowSelection,\n    onSortingChange: setSorting,\n    onColumnFiltersChange: setColumnFilters,\n    onColumnVisibilityChange: setColumnVisibility,\n    getCoreRowModel: getCoreRowModel(),\n    getFilteredRowModel: getFilteredRowModel(),\n    getPaginationRowModel: getPaginationRowModel(),\n    getSortedRowModel: getSortedRowModel(),\n    getFacetedRowModel: getFacetedRowModel(),\n    getFacetedUniqueValues: getFacetedUniqueValues(),\n    manualPagination: true,\n    onPaginationChange,\n  });\n\n  const search = (value: string) => {\n    const copy = [...filters];\n    const exists = copy.find((filter) => filter.name);\n    if (exists?.name) {\n      exists.name.contains = value;\n    } else {\n      copy.push({\n        name: {\n          contains: value,\n        },\n      });\n    }\n    setFilters(copy);\n    refetch();\n  };\n\n  const isFiltered = filters.length > 0;\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"flex items-center justify-between\">\n        <div className=\"flex flex-1 items-center space-x-2\">\n          <Input\n            placeholder=\"Search workflows...\"\n            value={filters?.find((filter) => filter.name)?.name?.contains ?? \"\"}\n            onChange={(event) => {\n              search(event.target.value);\n            }}\n            className=\"w-[150px] lg:w-[250px]\"\n          />\n\n          {table.getIsSomeRowsSelected() || table.getIsAllRowsSelected() ? (\n            <div className=\"flex gap-x-2\">\n              <Button\n                onClick={() => {\n                  const promises: any[] = [];\n                  table.getSelectedRowModel().rows.forEach((row: Row<any>) => {\n                    promises.push(\n                      removeWorkflow({\n                        variables: {\n                          id: row.original.id,\n                        },\n                      }),\n                    );\n                  });\n                  Promise.all(promises).then(() => {\n                    table.resetRowSelection();\n                    toast({\n                      title: \"Workflows deleted\",\n                      description: \"Successfully deleted \" + promises.length + \" workflow(s).\",\n                    });\n                  }).catch(() => {\n                    toast({\n                      title: \"Error\",\n                      description: \"Failed to delete some workflows. Please try again.\",\n                      variant: \"destructive\",\n                    });\n                  });\n                }}\n                variant=\"secondary\"\n                disabled={removeWorkflowResult.loading}\n              >\n                {removeWorkflowResult.loading ? (\n                  <Loading />\n                ) : (\n                  <Trash2 className=\"size-4\" />\n                )}\n                <span className=\"ml-2\">Delete selected</span>\n              </Button>\n            </div>\n          ) : null}\n\n          {isFiltered && (\n            <Button\n              variant=\"ghost\"\n              onClick={() => {\n                const copy = [...filters];\n                const nameFilter = copy.find((filter) => filter.name);\n                if (nameFilter) {\n                  copy.splice(copy.indexOf(nameFilter), 1);\n                }\n                setFilters(copy);\n                refetch();\n              }}\n            >\n              Reset\n              <Cross2Icon className=\"ml-2 size-4\" />\n            </Button>\n          )}\n        </div>\n        <DataTableViewOptions table={table} />\n      </div>\n      <div className=\"rounded-md border\">\n        <Table>\n          <TableHeader>\n            {table.getHeaderGroups().map((headerGroup) => (\n              <TableRow key={headerGroup.id}>\n                {headerGroup.headers.map((header) => {\n                  return (\n                    <TableHead key={header.id} colSpan={header.colSpan}>\n                      {header.isPlaceholder\n                        ? null\n                        : flexRender(\n                          header.column.columnDef.header,\n                          header.getContext(),\n                        )}\n                    </TableHead>\n                  );\n                })}\n              </TableRow>\n            ))}\n          </TableHeader>\n          <TableBody>\n            {table.getRowModel().rows?.length ? (\n              table.getRowModel().rows.map((row) => (\n                <TableRow\n                  key={row.id}\n                  data-state={row.getIsSelected() && \"selected\"}\n                >\n                  {row.getVisibleCells().map((cell) => (\n                    <TableCell key={cell.id}>\n                      {flexRender(\n                        cell.column.columnDef.cell,\n                        cell.getContext(),\n                      )}\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : loading && !previousData ? (\n              Array.from({ length: 5 }).map((_, index) => (\n                <TableRow key={index}>\n                  {columns.map((_, colIndex) => (\n                    <TableCell key={colIndex}>\n                      <Skeleton className=\"h-4 w-full\" />\n                    </TableCell>\n                  ))}\n                </TableRow>\n              ))\n            ) : (\n              <TableRow>\n                <TableCell\n                  colSpan={columns.length}\n                  className=\"h-24 text-center\"\n                >\n                  No workflows found.\n                </TableCell>\n              </TableRow>\n            )}\n          </TableBody>\n        </Table>\n      </div>\n      <div className=\"flex items-center justify-between px-2\">\n        <div className=\"text-muted-foreground flex-1 text-sm\">\n          {table.getFilteredSelectedRowModel().rows.length} of{\" \"}\n          {table.getFilteredRowModel().rows.length} row(s) selected.\n        </div>\n        <div className=\"flex items-center space-x-6 lg:space-x-8\">\n          <div className=\"flex w-[100px] items-center justify-center text-sm font-medium\">\n            Page {page} of {table.getPageCount()}\n          </div>\n          <div className=\"flex items-center space-x-2\">\n            <Button\n              variant=\"outline\"\n              className=\"hidden size-8 p-0 lg:flex\"\n              onClick={() => {\n                table.setPageIndex(0);\n                setPage(1);\n                refetch();\n              }}\n              disabled={!data?.workflow_templatesPagination?.pageInfo.hasPreviousPage}\n            >\n              <span className=\"sr-only\">Go to first page</span>\n              <DoubleArrowLeftIcon className=\"size-4\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              className=\"size-8 p-0\"\n              onClick={() => {\n                table.previousPage();\n                setPage(page - 1);\n                refetch();\n              }}\n              disabled={!data?.workflow_templatesPagination?.pageInfo.hasPreviousPage}\n            >\n              <span className=\"sr-only\">Go to previous page</span>\n              <ChevronLeftIcon className=\"size-4\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              className=\"size-8 p-0\"\n              onClick={() => {\n                table.nextPage();\n                setPage(page + 1);\n                refetch();\n              }}\n              disabled={!data?.workflow_templatesPagination?.pageInfo.hasNextPage}\n            >\n              <span className=\"sr-only\">Go to next page</span>\n              <ChevronRightIcon className=\"size-4\" />\n            </Button>\n            <Button\n              variant=\"outline\"\n              className=\"hidden size-8 p-0 lg:flex\"\n              onClick={() => {\n                table.setPageIndex(table.getPageCount() - 1);\n                setPage(table.getPageCount());\n                refetch();\n              }}\n              disabled={!data?.workflow_templatesPagination?.pageInfo.hasNextPage}\n            >\n              <span className=\"sr-only\">Go to last page</span>\n              <DoubleArrowRightIcon className=\"size-4\" />\n            </Button>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}","\"use client\";\n\nimport { useQuery } from \"@apollo/client\";\nimport { AlertTriangle, Clock, CheckCircle, XCircle } from \"lucide-react\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"@/components/ui/card\";\nimport { GET_JOB_STATISTICS_ENHANCED } from \"@/queries/queries\";\n\nexport function JobsStatusArea() {\n  // Poll every 2 seconds for real-time updates\n  const { data, loading, error } = useQuery(GET_JOB_STATISTICS_ENHANCED, {\n    variables: {\n      // Get all jobs for current user - backend will handle access control\n    },\n    pollInterval: 2000,\n    fetchPolicy: \"network-only\" // Always fetch fresh data\n  });\n\n  if (error) {\n    console.error(\"Error fetching job statistics:\", error);\n    return null;\n  }\n\n  const stats = data?.jobStatistics || {\n    runningCount: 0,\n    erroredCount: 0,\n    completedCount: 0,\n    failedCount: 0,\n    averageDuration: 0\n  };\n\n  const statusCards = [\n    {\n      title: \"Running Jobs\",\n      value: stats.runningCount,\n      description: \"Currently executing\",\n      icon: Clock,\n      color: \"text-blue-600\",\n      bgColor: \"bg-blue-100\",\n    },\n    {\n      title: \"Errored Jobs\", \n      value: stats.erroredCount,\n      description: \"Failed or stuck\",\n      icon: AlertTriangle,\n      color: \"text-red-600\",\n      bgColor: \"bg-red-100\",\n    },\n    {\n      title: \"Completed Jobs\",\n      value: stats.completedCount,\n      description: \"Successfully finished\",\n      icon: CheckCircle,\n      color: \"text-green-600\",\n      bgColor: \"bg-green-100\",\n    },\n    {\n      title: \"Failed Jobs\",\n      value: stats.failedCount,\n      description: \"Execution failed\",\n      icon: XCircle,\n      color: \"text-red-500\",\n      bgColor: \"bg-red-50\",\n    }\n  ];\n\n  return (\n    <div className=\"space-y-4\">\n      <div className=\"grid gap-4 md:grid-cols-2 lg:grid-cols-4\">\n        {statusCards.map((card) => {\n          const Icon = card.icon;\n          return (\n            <Card key={card.title}>\n              <CardHeader className=\"flex flex-row items-center justify-between space-y-0 pb-2\">\n                <CardTitle className=\"text-sm font-medium\">\n                  {card.title}\n                </CardTitle>\n                <div className={`p-2 rounded-full ${card.bgColor}`}>\n                  <Icon className={`h-4 w-4 ${card.color}`} />\n                </div>\n              </CardHeader>\n              <CardContent>\n                <div className=\"text-2xl font-bold\">\n                  {loading ? \"...\" : card.value}\n                </div>\n                <p className=\"text-xs text-muted-foreground\">\n                  {card.description}\n                </p>\n              </CardContent>\n            </Card>\n          );\n        })}\n      </div>\n      \n      {stats.completedCount > 0 && (\n        <Card>\n          <CardHeader>\n            <CardTitle className=\"text-sm font-medium\">Performance</CardTitle>\n          </CardHeader>\n          <CardContent>\n            <div className=\"text-sm text-muted-foreground\">\n              Average execution time: <span className=\"font-medium text-foreground\">\n                {loading ? \"...\" : `${Math.round(stats.averageDuration)} seconds`}\n              </span>\n            </div>\n          </CardContent>\n        </Card>\n      )}\n    </div>\n  );\n}","\"use client\";\n\nimport { useContext } from \"react\";\nimport { createColumns } from \"./components/columns\";\nimport { DataTable } from \"./components/data-table\";\nimport { JobsStatusArea } from \"./components/jobs-status-area\";\nimport { UserContext } from \"@/app/(application)/authenticated\";\n\nexport const dynamic = \"force-dynamic\";\n\nexport default function WorkflowsPage() {\n  const { user } = useContext(UserContext);\n  const columns = createColumns(user);\n\n  return (\n    <>\n      <div className=\"hidden h-full flex-1 flex-col space-y-8 p-8 md:flex\">\n        <div className=\"flex items-center justify-between space-y-2\">\n          <div>\n            <h2 className=\"text-2xl font-bold tracking-tight\">Workflows</h2>\n            <p className=\"text-muted-foreground\">\n              Manage your workflow templates and monitor running jobs.\n            </p>\n          </div>\n        </div>\n        \n        {/* Jobs Status Area */}\n        <JobsStatusArea />\n        \n        {/* Workflows Table */}\n        <DataTable columns={columns} />\n      </div>\n    </>\n  );\n}","'use client';\n\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\nimport { CheckIcon, CopyIcon } from 'lucide-react';\nimport type { ComponentProps, HTMLAttributes, ReactNode } from 'react';\nimport { createContext, useContext, useState } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport {\n  oneDark,\n  oneLight,\n} from 'react-syntax-highlighter/dist/esm/styles/prism';\n\ntype CodeBlockContextType = {\n  code: string;\n};\n\nconst CodeBlockContext = createContext<CodeBlockContextType>({\n  code: '',\n});\n\nexport type CodeBlockProps = HTMLAttributes<HTMLDivElement> & {\n  code: string;\n  language: string;\n  showLineNumbers?: boolean;\n  children?: ReactNode;\n};\n\nexport const CodeBlock = ({\n  code,\n  language,\n  showLineNumbers = false,\n  className,\n  children,\n  ...props\n}: CodeBlockProps) => (\n  <CodeBlockContext.Provider value={{ code }}>\n    <div\n      className={cn(\n        'relative w-full overflow-hidden rounded-md border bg-background text-foreground',\n        className\n      )}\n      {...props}\n    >\n      <div className=\"relative\">\n        <SyntaxHighlighter\n          className=\"overflow-hidden dark:hidden\"\n          codeTagProps={{\n            className: 'font-mono text-sm',\n          }}\n          customStyle={{\n            margin: 0,\n            padding: '1rem',\n            fontSize: '0.875rem',\n            background: 'hsl(var(--background))',\n            color: 'hsl(var(--foreground))',\n          }}\n          language={language}\n          lineNumberStyle={{\n            color: 'hsl(var(--muted-foreground))',\n            paddingRight: '1rem',\n            minWidth: '2.5rem',\n          }}\n          showLineNumbers={showLineNumbers}\n          style={oneLight}\n        >\n          {code}\n        </SyntaxHighlighter>\n        <SyntaxHighlighter\n          className=\"hidden overflow-hidden dark:block\"\n          codeTagProps={{\n            className: 'font-mono text-sm',\n          }}\n          customStyle={{\n            margin: 0,\n            padding: '1rem',\n            fontSize: '0.875rem',\n            background: 'hsl(var(--background))',\n            color: 'hsl(var(--foreground))',\n          }}\n          language={language}\n          lineNumberStyle={{\n            color: 'hsl(var(--muted-foreground))',\n            paddingRight: '1rem',\n            minWidth: '2.5rem',\n          }}\n          showLineNumbers={showLineNumbers}\n          style={oneDark}\n        >\n          {code}\n        </SyntaxHighlighter>\n        {children && (\n          <div className=\"absolute top-2 right-2 flex items-center gap-2\">\n            {children}\n          </div>\n        )}\n      </div>\n    </div>\n  </CodeBlockContext.Provider>\n);\n\nexport type CodeBlockCopyButtonProps = ComponentProps<typeof Button> & {\n  onCopy?: () => void;\n  onError?: (error: Error) => void;\n  timeout?: number;\n};\n\nexport const CodeBlockCopyButton = ({\n  onCopy,\n  onError,\n  timeout = 2000,\n  children,\n  className,\n  ...props\n}: CodeBlockCopyButtonProps) => {\n  const [isCopied, setIsCopied] = useState(false);\n  const { code } = useContext(CodeBlockContext);\n\n  const copyToClipboard = async () => {\n    if (typeof window === 'undefined' || !navigator.clipboard.writeText) {\n      onError?.(new Error('Clipboard API not available'));\n      return;\n    }\n\n    try {\n      await navigator.clipboard.writeText(code);\n      setIsCopied(true);\n      onCopy?.();\n      setTimeout(() => setIsCopied(false), timeout);\n    } catch (error) {\n      onError?.(error as Error);\n    }\n  };\n\n  const Icon = isCopied ? CheckIcon : CopyIcon;\n\n  return (\n    <Button\n      className={cn('shrink-0', className)}\n      onClick={copyToClipboard}\n      size=\"icon\"\n      variant=\"ghost\"\n      {...props}\n    >\n      {children ?? <Icon size={14} />}\n    </Button>\n  );\n};\n","'use client';\n\nimport { cn } from '@/lib/utils';\nimport type { ComponentProps, HTMLAttributes } from 'react';\nimport { isValidElement, memo } from 'react';\nimport ReactMarkdown, { type Options } from 'react-markdown';\nimport rehypeKatex from 'rehype-katex';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\nimport { CodeBlock, CodeBlockCopyButton } from './code-block';\nimport 'katex/dist/katex.min.css';\nimport hardenReactMarkdown from 'harden-react-markdown';\n\n/**\n * Parses markdown text and removes incomplete tokens to prevent partial rendering\n * of links, images, bold, and italic formatting during streaming.\n */\nfunction parseIncompleteMarkdown(text: string): string {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n\n  let result = text;\n\n  // Handle incomplete links and images\n  // Pattern: [...] or ![...] where the closing ] is missing\n  const linkImagePattern = /(!?\\[)([^\\]]*?)$/;\n  const linkMatch = result.match(linkImagePattern);\n  if (linkMatch) {\n    // If we have an unterminated [ or ![, remove it and everything after\n    const startIndex = result.lastIndexOf(linkMatch[1]);\n    result = result.substring(0, startIndex);\n  }\n\n  // Handle incomplete bold formatting (**)\n  const boldPattern = /(\\*\\*)([^*]*?)$/;\n  const boldMatch = result.match(boldPattern);\n  if (boldMatch) {\n    // Count the number of ** in the entire string\n    const asteriskPairs = (result.match(/\\*\\*/g) || []).length;\n    // If odd number of **, we have an incomplete bold - complete it\n    if (asteriskPairs % 2 === 1) {\n      result = `${result}**`;\n    }\n  }\n\n  // Handle incomplete italic formatting (__)\n  const italicPattern = /(__)([^_]*?)$/;\n  const italicMatch = result.match(italicPattern);\n  if (italicMatch) {\n    // Count the number of __ in the entire string\n    const underscorePairs = (result.match(/__/g) || []).length;\n    // If odd number of __, we have an incomplete italic - complete it\n    if (underscorePairs % 2 === 1) {\n      result = `${result}__`;\n    }\n  }\n\n  // Handle incomplete single asterisk italic (*)\n  const singleAsteriskPattern = /(\\*)([^*]*?)$/;\n  const singleAsteriskMatch = result.match(singleAsteriskPattern);\n  if (singleAsteriskMatch) {\n    // Count single asterisks that aren't part of **\n    const singleAsterisks = result.split('').reduce((acc, char, index) => {\n      if (char === '*') {\n        // Check if it's part of a ** pair\n        const prevChar = result[index - 1];\n        const nextChar = result[index + 1];\n        if (prevChar !== '*' && nextChar !== '*') {\n          return acc + 1;\n        }\n      }\n      return acc;\n    }, 0);\n\n    // If odd number of single *, we have an incomplete italic - complete it\n    if (singleAsterisks % 2 === 1) {\n      result = `${result}*`;\n    }\n  }\n\n  // Handle incomplete single underscore italic (_)\n  const singleUnderscorePattern = /(_)([^_]*?)$/;\n  const singleUnderscoreMatch = result.match(singleUnderscorePattern);\n  if (singleUnderscoreMatch) {\n    // Count single underscores that aren't part of __\n    const singleUnderscores = result.split('').reduce((acc, char, index) => {\n      if (char === '_') {\n        // Check if it's part of a __ pair\n        const prevChar = result[index - 1];\n        const nextChar = result[index + 1];\n        if (prevChar !== '_' && nextChar !== '_') {\n          return acc + 1;\n        }\n      }\n      return acc;\n    }, 0);\n\n    // If odd number of single _, we have an incomplete italic - complete it\n    if (singleUnderscores % 2 === 1) {\n      result = `${result}_`;\n    }\n  }\n\n  // Handle incomplete inline code blocks (`) - but avoid code blocks (```)\n  const inlineCodePattern = /(`)([^`]*?)$/;\n  const inlineCodeMatch = result.match(inlineCodePattern);\n  if (inlineCodeMatch) {\n    // Check if we're dealing with a code block (triple backticks)\n    const hasCodeBlockStart = result.includes('```');\n    const codeBlockPattern = /```[\\s\\S]*?```/g;\n    const completeCodeBlocks = (result.match(codeBlockPattern) || []).length;\n    const allTripleBackticks = (result.match(/```/g) || []).length;\n\n    // If we have an odd number of ``` sequences, we're inside an incomplete code block\n    // In this case, don't complete inline code\n    const insideIncompleteCodeBlock = allTripleBackticks % 2 === 1;\n\n    if (!insideIncompleteCodeBlock) {\n      // Count the number of single backticks that are NOT part of triple backticks\n      let singleBacktickCount = 0;\n      for (let i = 0; i < result.length; i++) {\n        if (result[i] === '`') {\n          // Check if this backtick is part of a triple backtick sequence\n          const isTripleStart = result.substring(i, i + 3) === '```';\n          const isTripleMiddle =\n            i > 0 && result.substring(i - 1, i + 2) === '```';\n          const isTripleEnd = i > 1 && result.substring(i - 2, i + 1) === '```';\n\n          if (!(isTripleStart || isTripleMiddle || isTripleEnd)) {\n            singleBacktickCount++;\n          }\n        }\n      }\n\n      // If odd number of single backticks, we have an incomplete inline code - complete it\n      if (singleBacktickCount % 2 === 1) {\n        result = `${result}\\``;\n      }\n    }\n  }\n\n  // Handle incomplete strikethrough formatting (~~)\n  const strikethroughPattern = /(~~)([^~]*?)$/;\n  const strikethroughMatch = result.match(strikethroughPattern);\n  if (strikethroughMatch) {\n    // Count the number of ~~ in the entire string\n    const tildePairs = (result.match(/~~/g) || []).length;\n    // If odd number of ~~, we have an incomplete strikethrough - complete it\n    if (tildePairs % 2 === 1) {\n      result = `${result}~~`;\n    }\n  }\n\n  return result;\n}\n\n// Create a hardened version of ReactMarkdown\nconst HardenedMarkdown = hardenReactMarkdown(ReactMarkdown);\n\nexport type ResponseProps = HTMLAttributes<HTMLDivElement> & {\n  options?: Options;\n  children: Options['children'];\n  allowedImagePrefixes?: ComponentProps<\n    ReturnType<typeof hardenReactMarkdown>\n  >['allowedImagePrefixes'];\n  allowedLinkPrefixes?: ComponentProps<\n    ReturnType<typeof hardenReactMarkdown>\n  >['allowedLinkPrefixes'];\n  defaultOrigin?: ComponentProps<\n    ReturnType<typeof hardenReactMarkdown>\n  >['defaultOrigin'];\n  parseIncompleteMarkdown?: boolean;\n};\n\nconst components: Options['components'] = {\n  ol: ({ node, children, className, ...props }) => (\n    <ol className={cn('ml-4 list-outside list-decimal', className)} {...props}>\n      {children}\n    </ol>\n  ),\n  li: ({ node, children, className, ...props }) => (\n    <li className={cn('py-1', className)} {...props}>\n      {children}\n    </li>\n  ),\n  ul: ({ node, children, className, ...props }) => (\n    <ul className={cn('ml-4 list-outside list-disc', className)} {...props}>\n      {children}\n    </ul>\n  ),\n  hr: ({ node, className, ...props }) => (\n    <hr className={cn('my-6 border-border', className)} {...props} />\n  ),\n  strong: ({ node, children, className, ...props }) => (\n    <span className={cn('font-semibold', className)} {...props}>\n      {children}\n    </span>\n  ),\n  a: ({ node, children, className, ...props }) => (\n    <a\n      className={cn('font-medium text-primary underline', className)}\n      rel=\"noreferrer\"\n      target=\"_blank\"\n      {...props}\n    >\n      {children}\n    </a>\n  ),\n  h1: ({ node, children, className, ...props }) => (\n    <h1\n      className={cn('mt-6 mb-2 font-semibold text-3xl', className)}\n      {...props}\n    >\n      {children}\n    </h1>\n  ),\n  h2: ({ node, children, className, ...props }) => (\n    <h2\n      className={cn('mt-6 mb-2 font-semibold text-2xl', className)}\n      {...props}\n    >\n      {children}\n    </h2>\n  ),\n  h3: ({ node, children, className, ...props }) => (\n    <h3 className={cn('mt-6 mb-2 font-semibold text-xl', className)} {...props}>\n      {children}\n    </h3>\n  ),\n  h4: ({ node, children, className, ...props }) => (\n    <h4 className={cn('mt-6 mb-2 font-semibold text-lg', className)} {...props}>\n      {children}\n    </h4>\n  ),\n  h5: ({ node, children, className, ...props }) => (\n    <h5\n      className={cn('mt-6 mb-2 font-semibold text-base', className)}\n      {...props}\n    >\n      {children}\n    </h5>\n  ),\n  h6: ({ node, children, className, ...props }) => (\n    <h6 className={cn('mt-6 mb-2 font-semibold text-sm', className)} {...props}>\n      {children}\n    </h6>\n  ),\n  table: ({ node, children, className, ...props }) => (\n    <div className=\"my-4 overflow-x-auto\">\n      <table\n        className={cn('w-full border-collapse border border-border', className)}\n        {...props}\n      >\n        {children}\n      </table>\n    </div>\n  ),\n  thead: ({ node, children, className, ...props }) => (\n    <thead className={cn('bg-muted/50', className)} {...props}>\n      {children}\n    </thead>\n  ),\n  tbody: ({ node, children, className, ...props }) => (\n    <tbody className={cn('divide-y divide-border', className)} {...props}>\n      {children}\n    </tbody>\n  ),\n  tr: ({ node, children, className, ...props }) => (\n    <tr className={cn('border-border border-b', className)} {...props}>\n      {children}\n    </tr>\n  ),\n  th: ({ node, children, className, ...props }) => (\n    <th\n      className={cn('px-4 py-2 text-left font-semibold text-sm', className)}\n      {...props}\n    >\n      {children}\n    </th>\n  ),\n  td: ({ node, children, className, ...props }) => (\n    <td className={cn('px-4 py-2 text-sm', className)} {...props}>\n      {children}\n    </td>\n  ),\n  blockquote: ({ node, children, className, ...props }) => (\n    <blockquote\n      className={cn(\n        'my-4 border-muted-foreground/30 border-l-4 pl-4 text-muted-foreground italic',\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </blockquote>\n  ),\n  code: ({ node, className, ...props }) => {\n    const inline = node?.position?.start.line === node?.position?.end.line;\n\n    if (!inline) {\n      return <code className={className} {...props} />;\n    }\n\n    return (\n      <code\n        className={cn(\n          'rounded bg-muted px-1.5 py-0.5 font-mono text-sm',\n          className\n        )}\n        {...props}\n      />\n    );\n  },\n  pre: ({ node, className, children }) => {\n    let language = 'javascript';\n\n    if (typeof node?.properties?.className === 'string') {\n      language = node.properties.className.replace('language-', '');\n    }\n\n    // Extract code content from children safely\n    let code = '';\n    if (\n      isValidElement(children) &&\n      children.props &&\n      typeof children.props.children === 'string'\n    ) {\n      code = children.props.children;\n    } else if (typeof children === 'string') {\n      code = children;\n    }\n\n    return (\n      <CodeBlock\n        className={cn('my-4 h-auto', className)}\n        code={code}\n        language={language}\n      >\n        <CodeBlockCopyButton\n          onCopy={() => console.log('Copied code to clipboard')}\n          onError={() => console.error('Failed to copy code to clipboard')}\n        />\n      </CodeBlock>\n    );\n  },\n};\n\nexport const Response = memo(\n  ({\n    className,\n    options,\n    children,\n    allowedImagePrefixes,\n    allowedLinkPrefixes,\n    defaultOrigin,\n    parseIncompleteMarkdown: shouldParseIncompleteMarkdown = true,\n    ...props\n  }: ResponseProps) => {\n    // Parse the children to remove incomplete markdown tokens if enabled\n    const parsedChildren =\n      typeof children === 'string' && shouldParseIncompleteMarkdown\n        ? parseIncompleteMarkdown(children)\n        : children;\n\n    return (\n      <div\n        className={cn(\n          'size-full [&>*:first-child]:mt-0 [&>*:last-child]:mb-0',\n          className\n        )}\n        {...props}\n      >\n        <HardenedMarkdown\n          allowedImagePrefixes={allowedImagePrefixes ?? ['*']}\n          allowedLinkPrefixes={allowedLinkPrefixes ?? ['*']}\n          components={components}\n          defaultOrigin={defaultOrigin}\n          rehypePlugins={[rehypeKatex]}\n          remarkPlugins={[remarkGfm, remarkMath]}\n          {...options}\n        >\n          {parsedChildren}\n        </HardenedMarkdown>\n      </div>\n    );\n  },\n  (prevProps, nextProps) => prevProps.children === nextProps.children\n);\n\nResponse.displayName = 'Response';\n","\"use client\";\n\nimport * as AlertDialogPrimitive from \"@radix-ui/react-alert-dialog\";\nimport * as React from \"react\";\n\nimport { buttonVariants } from \"@/components/ui/button\";\nimport { cn } from \"@/lib/utils\";\n\nconst AlertDialog = AlertDialogPrimitive.Root;\n\nconst AlertDialogTrigger = AlertDialogPrimitive.Trigger;\n\nconst AlertDialogPortal = AlertDialogPrimitive.Portal;\n\nconst AlertDialogOverlay = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Overlay>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Overlay>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Overlay\n    className={cn(\n      \"fixed inset-0 z-50 bg-black/80  data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0\",\n      className,\n    )}\n    {...props}\n    ref={ref}\n  />\n));\nAlertDialogOverlay.displayName = AlertDialogPrimitive.Overlay.displayName;\n\nconst AlertDialogContent = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPortal>\n    <AlertDialogOverlay />\n    <AlertDialogPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"fixed left-[50%] top-[50%] z-50 grid w-full max-w-lg translate-x-[-50%] translate-y-[-50%] gap-4 border bg-background p-6 shadow-lg duration-200 data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[state=closed]:slide-out-to-left-1/2 data-[state=closed]:slide-out-to-top-[48%] data-[state=open]:slide-in-from-left-1/2 data-[state=open]:slide-in-from-top-[48%] sm:rounded-lg\",\n        className,\n      )}\n      {...props}\n    />\n  </AlertDialogPortal>\n));\nAlertDialogContent.displayName = AlertDialogPrimitive.Content.displayName;\n\nconst AlertDialogHeader = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col space-y-2 text-center sm:text-left\",\n      className,\n    )}\n    {...props}\n  />\n);\nAlertDialogHeader.displayName = \"AlertDialogHeader\";\n\nconst AlertDialogFooter = ({\n  className,\n  ...props\n}: React.HTMLAttributes<HTMLDivElement>) => (\n  <div\n    className={cn(\n      \"flex flex-col-reverse sm:flex-row sm:justify-end sm:space-x-2\",\n      className,\n    )}\n    {...props}\n  />\n);\nAlertDialogFooter.displayName = \"AlertDialogFooter\";\n\nconst AlertDialogTitle = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Title>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Title>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Title\n    ref={ref}\n    className={cn(\"text-lg font-semibold\", className)}\n    {...props}\n  />\n));\nAlertDialogTitle.displayName = AlertDialogPrimitive.Title.displayName;\n\nconst AlertDialogDescription = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Description>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Description>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Description\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nAlertDialogDescription.displayName =\n  AlertDialogPrimitive.Description.displayName;\n\nconst AlertDialogAction = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Action>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Action>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Action\n    ref={ref}\n    className={cn(buttonVariants(), className)}\n    {...props}\n  />\n));\nAlertDialogAction.displayName = AlertDialogPrimitive.Action.displayName;\n\nconst AlertDialogCancel = React.forwardRef<\n  React.ElementRef<typeof AlertDialogPrimitive.Cancel>,\n  React.ComponentPropsWithoutRef<typeof AlertDialogPrimitive.Cancel>\n>(({ className, ...props }, ref) => (\n  <AlertDialogPrimitive.Cancel\n    ref={ref}\n    className={cn(\n      buttonVariants({ variant: \"outline\" }),\n      \"mt-2 sm:mt-0\",\n      className,\n    )}\n    {...props}\n  />\n));\nAlertDialogCancel.displayName = AlertDialogPrimitive.Cancel.displayName;\n\nexport {\n  AlertDialog,\n  AlertDialogPortal,\n  AlertDialogOverlay,\n  AlertDialogTrigger,\n  AlertDialogContent,\n  AlertDialogHeader,\n  AlertDialogFooter,\n  AlertDialogTitle,\n  AlertDialogDescription,\n  AlertDialogAction,\n  AlertDialogCancel,\n};\n","import * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Table = React.forwardRef<\n  HTMLTableElement,\n  React.HTMLAttributes<HTMLTableElement>\n>(({ className, ...props }, ref) => (\n  <div className=\"relative w-full overflow-auto\">\n    <table\n      ref={ref}\n      className={cn(\"w-full caption-bottom text-sm\", className)}\n      {...props}\n    />\n  </div>\n));\nTable.displayName = \"Table\";\n\nconst TableHeader = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <thead ref={ref} className={cn(\"[&_tr]:border-b\", className)} {...props} />\n));\nTableHeader.displayName = \"TableHeader\";\n\nconst TableBody = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tbody\n    ref={ref}\n    className={cn(\"[&_tr:last-child]:border-0\", className)}\n    {...props}\n  />\n));\nTableBody.displayName = \"TableBody\";\n\nconst TableFooter = React.forwardRef<\n  HTMLTableSectionElement,\n  React.HTMLAttributes<HTMLTableSectionElement>\n>(({ className, ...props }, ref) => (\n  <tfoot\n    ref={ref}\n    className={cn(\n      \"border-t bg-muted/50 font-medium [&>tr]:last:border-b-0\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableFooter.displayName = \"TableFooter\";\n\nconst TableRow = React.forwardRef<\n  HTMLTableRowElement,\n  React.HTMLAttributes<HTMLTableRowElement>\n>(({ className, ...props }, ref) => (\n  <tr\n    ref={ref}\n    className={cn(\n      \"border-b transition-colors hover:bg-muted/50 data-[state=selected]:bg-muted\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableRow.displayName = \"TableRow\";\n\nconst TableHead = React.forwardRef<\n  HTMLTableCellElement,\n  React.ThHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <th\n    ref={ref}\n    className={cn(\n      \"h-12 px-4 text-left align-middle font-medium text-muted-foreground [&:has([role=checkbox])]:pr-0 [&:has([role=checkbox])]:w-[40px]\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableHead.displayName = \"TableHead\";\n\nconst TableCell = React.forwardRef<\n  HTMLTableCellElement,\n  React.TdHTMLAttributes<HTMLTableCellElement>\n>(({ className, ...props }, ref) => (\n  <td\n    ref={ref}\n    className={cn(\n      \"p-4 align-middle [&:has([role=checkbox])]:pr-0 [&:has([role=checkbox])]:w-[40px]\",\n      className,\n    )}\n    {...props}\n  />\n));\nTableCell.displayName = \"TableCell\";\n\nconst TableCaption = React.forwardRef<\n  HTMLTableCaptionElement,\n  React.HTMLAttributes<HTMLTableCaptionElement>\n>(({ className, ...props }, ref) => (\n  <caption\n    ref={ref}\n    className={cn(\"mt-4 text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n));\nTableCaption.displayName = \"TableCaption\";\n\nexport {\n  Table,\n  TableHeader,\n  TableBody,\n  TableFooter,\n  TableHead,\n  TableRow,\n  TableCell,\n  TableCaption,\n};\n","\"use client\";\n\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n"],"names":["Promise","resolve","then","__webpack_require__","bind","LastRunCell","param","workflowId","lastRunAt","lastRunStatus","useLastRunForWorkflow","data","useQuery","GET_JOBS","variables","page","limit","filters","workflow","eq","sort","field","direction","pollInterval","lastJob","jobsPagination","items","createdAt","status","jsx_runtime","jsxs","div","className","jsx","formatDistanceToNow","Date","addSuffix","Badge","variant","getStatusColor","span","WorkflowActionsCell","user","isEditModalOpen","setIsEditModalOpen","useState","isDeleteModalOpen","setIsDeleteModalOpen","deleteConfirmation","setDeleteConfirmation","toast","useToast","hasWriteAccess","owner","id","rights_mode","RBAC","users","userAccess","find","u","toString","rights","roles","role","roleAccess","r","removeWorkflow","useMutation","REMOVE_WORKFLOW_TEMPLATE_BY_ID","refetchQueries","GET_WORKFLOW_TEMPLATES","handleDelete","name","title","description","concat","error","workflowMessages","steps_json","map","step","index","type","content","contentExample","toolName","parts","toolInvocation","Fragment","Button","size","onClick","Edit","Eye","console","log","Play","Trash2","SaveWorkflowModal","isOpen","onClose","messages","sessionTitle","existingWorkflow","isReadOnly","AlertDialog","open","onOpenChange","AlertDialogContent","AlertDialogHeader","AlertDialogTitle","AlertDialogDescription","br","Label","htmlFor","Input","value","onChange","e","target","placeholder","AlertDialogFooter","disabled","DataTableViewOptions","table","DropdownMenu","DropdownMenuTrigger","asChild","MixerHorizontalIcon","DropdownMenuContent","align","DropdownMenuLabel","DropdownMenuSeparator","getAllColumns","filter","column","accessorFn","getCanHide","DropdownMenuCheckboxItem","checked","getIsVisible","onCheckedChange","toggleVisibility","DataTable","previousData","pageCount","columns","rowSelection","setRowSelection","React","columnVisibility","setColumnVisibility","columnFilters","setColumnFilters","setFilters","setPage","sorting","setSorting","loading","refetch","fetchPolicy","nextFetchPolicy","defaultData","onPaginationChange","skip","pagination","usePagination","setPagination","pageSize","pageIndex","removeWorkflowResult","workflow_templatesPagination","pageInfo","useReactTable","state","enableRowSelection","onRowSelectionChange","onSortingChange","onColumnFiltersChange","onColumnVisibilityChange","getCoreRowModel","getFilteredRowModel","getPaginationRowModel","getSortedRowModel","getFacetedRowModel","getFacetedUniqueValues","manualPagination","search","copy","exists","contains","push","isFiltered","length","event","getIsSomeRowsSelected","getIsAllRowsSelected","promises","getSelectedRowModel","rows","forEach","row","original","all","resetRowSelection","catch","Loading","nameFilter","splice","indexOf","Cross2Icon","Table","TableHeader","getHeaderGroups","TableRow","headerGroup","headers","TableHead","colSpan","header","isPlaceholder","flexRender","columnDef","getContext","TableBody","getRowModel","data-state","getIsSelected","getVisibleCells","TableCell","cell","Array","from","_","colIndex","Skeleton","getFilteredSelectedRowModel","getPageCount","setPageIndex","hasPreviousPage","DoubleArrowLeftIcon","previousPage","ChevronLeftIcon","nextPage","hasNextPage","ChevronRightIcon","DoubleArrowRightIcon","JobsStatusArea","GET_JOB_STATISTICS_ENHANCED","stats","jobStatistics","runningCount","erroredCount","completedCount","failedCount","averageDuration","statusCards","icon","Clock","color","bgColor","AlertTriangle","CheckCircle","XCircle","Icon","card","Card","CardHeader","CardTitle","CardContent","p","Math","round","dynamic","WorkflowsPage","useContext","UserContext","accessorKey","toggleSorting","getIsSorted","ArrowUpDown","visibility","getVisibilityColor","getVisibilityText","getValue","h2","CodeBlockContext","createContext","code","CodeBlock","language","showLineNumbers","children","props","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","Provider","cn","SyntaxHighlighter","codeTagProps","customStyle","margin","padding","fontSize","background","lineNumberStyle","paddingRight","minWidth","style","oneLight","oneDark","CodeBlockCopyButton","onCopy","onError","timeout","isCopied","setIsCopied","copyToClipboard","navigator","clipboard","writeText","setTimeout","CheckIcon","CopyIcon","HardenedMarkdown","hardenReactMarkdown","ReactMarkdown","components","ol","node","li","ul","hr","strong","a","rel","h1","h3","h4","h5","h6","thead","tbody","tr","th","td","blockquote","position","start","line","end","pre","properties","replace","isValidElement","Response","memo","options","allowedImagePrefixes","allowedLinkPrefixes","defaultOrigin","parseIncompleteMarkdown","shouldParseIncompleteMarkdown","parsedChildren","text","result","linkMatch","match","startIndex","lastIndexOf","substring","asteriskPairs","underscorePairs","singleAsterisks","split","reduce","acc","char","prevChar","nextChar","singleUnderscores","includes","singleBacktickCount","i","isTripleStart","isTripleMiddle","isTripleEnd","tildePairs","rehypePlugins","rehypeKatex","remarkPlugins","remarkGfm","remarkMath","prevProps","nextProps","displayName","AlertDialogPrimitive","AlertDialogPortal","AlertDialogOverlay","ref","AlertDialogAction","buttonVariants","AlertDialogCancel","TableFooter","tfoot","TableCaption","caption","Tabs","TabsPrimitive","TabsList","TabsTrigger","TabsContent"],"sourceRoot":""}