{"version":3,"file":"static/chunks/app/(authentication)/login/error-65d2315c483bed81.js","mappings":"sFAAAA,QAAAC,OAAA,GAAAC,IAAA,CAAAC,EAAAC,IAAA,CAAAD,EAAA,qJCOA,IAAME,EAAiB,CACrBC,cACE,2FACFC,aAAc,+DACdC,aACE,sFACFC,QAAS,oEACX,EAEe,SAASC,IAEtB,IAAMC,EAAQC,CADCC,EAAAA,EAAAA,eAAAA,IACMC,GAAG,CAAC,SAEzB,OAAOH,EACL,GAAAI,EAAAC,IAAA,EAACC,EAAAA,EAAKA,CAAAA,CAACC,QAAQ,oBACb,GAAAH,EAAAI,GAAA,EAACC,EAAAA,GAAuBA,CAAAA,CAACC,UAAU,WACnC,GAAAN,EAAAI,GAAA,EAACG,EAAAA,EAAUA,CAAAA,UAAC,UACZ,GAAAP,EAAAI,GAAA,EAACI,EAAAA,CAAgBA,CAAAA,UACdlB,CAAc,CAACM,EAAM,EAAIN,EAAeI,OAAO,MAGlD,IACN,qKCxBA,IAAMe,EAAgBC,CAAAA,EAAAA,EAAAA,CAAAA,EACpB,4JACA,CACEC,SAAU,CACRR,QAAS,CACPS,QAAS,gCACTC,YACE,0FACFC,KAAM,6DACR,CACF,EACAC,gBAAiB,CACfZ,QAAS,SACX,CACF,GAGID,EAAQc,EAAAA,UAAgB,CAG5B,CAAAC,EAAmCC,QAAlC,CAAEZ,UAAAA,CAAS,CAAEH,QAAAA,CAAO,CAAE,GAAGgB,EAAO,CAAAF,QACjC,GAAAjB,EAAAI,GAAA,EAACgB,MAAAA,CACCF,IAAKA,EACLG,KAAK,QACLf,UAAWgB,CAAAA,EAAAA,EAAAA,EAAAA,EAAGb,EAAc,CAAEN,QAAAA,CAAQ,GAAIG,GACzC,GAAGa,CAAK,IAGbjB,CAAAA,EAAMqB,WAAW,CAAG,QAEpB,IAAMhB,EAAaS,EAAAA,UAAgB,CAGjC,CAAAC,EAA0BC,QAAzB,CAAEZ,UAAAA,CAAS,CAAE,GAAGa,EAAO,CAAAF,QACxB,GAAAjB,EAAAI,GAAA,EAACoB,KAAAA,CACCN,IAAKA,EACLZ,UAAWgB,CAAAA,EAAAA,EAAAA,EAAAA,EAAG,+CAAgDhB,GAC7D,GAAGa,CAAK,IAGbZ,CAAAA,EAAWgB,WAAW,CAAG,aAEzB,IAAMf,EAAmBQ,EAAAA,UAAgB,CAGvC,CAAAC,EAA0BC,QAAzB,CAAEZ,UAAAA,CAAS,CAAE,GAAGa,EAAO,CAAAF,QACxB,GAAAjB,EAAAI,GAAA,EAACgB,MAAAA,CACCF,IAAKA,EACLZ,UAAWgB,CAAAA,EAAAA,EAAAA,EAAAA,EAAG,gCAAiChB,GAC9C,GAAGa,CAAK,IAGbX,CAAAA,EAAiBe,WAAW,CAAG,kHCtDxB,SAASD,IAAG,QAAAG,EAAAC,UAAAC,MAAA,CAAAC,EAAA,MAAAH,GAAAI,EAAA,EAAAA,EAAAJ,EAAAI,IAAGD,CAAAA,CAAHC,EAAA,CAAAH,SAAA,CAAAG,EAAuB,CACxC,MAAOC,CAAAA,EAAAA,EAAAA,EAAAA,EAAQC,CAAAA,EAAAA,EAAAA,CAAAA,EAAKH,GACtB","sources":["webpack://_N_E/?3709","webpack://_N_E/./app/(authentication)/login/error.tsx","webpack://_N_E/./components/ui/alert.tsx","webpack://_N_E/./lib/utils.ts","webpack://_N_E/./node_modules/next/dist/api/navigation.js"],"sourcesContent":["import(/* webpackMode: \"eager\" */ \"/Users/daniel.claessen/Desktop/Projects/exulu/frontend/app/(authentication)/login/error.tsx\");\n","\"use client\";\n\nimport { ExclamationTriangleIcon } from \"@radix-ui/react-icons\";\nimport { useSearchParams } from \"next/navigation\";\nimport React from \"react\";\nimport { Alert, AlertDescription, AlertTitle } from \"@/components/ui/alert\";\n\nconst ERROR_MESSAGES = {\n  Configuration:\n    \"There is a problem with the server configuration. Please contact the site administrator.\",\n  AccessDenied: \"You don't have permission to sigin or register on this site.\",\n  Verification:\n    \"That token is not valid. Please try again or refresh the page to request a new one.\",\n  Default: \"There was an unknown error. Please refresh the page and try again.\",\n};\n\nexport default function VerificationAlert() {\n  const params = useSearchParams();\n  const error = params.get(\"error\") as keyof typeof ERROR_MESSAGES;\n\n  return error ? (\n    <Alert variant=\"default\">\n      <ExclamationTriangleIcon className=\"size-4\" />\n      <AlertTitle>Error</AlertTitle>\n      <AlertDescription>\n        {ERROR_MESSAGES[error] || ERROR_MESSAGES.Default}\n      </AlertDescription>\n    </Alert>\n  ) : null;\n}\n","import { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        info: \"border-info/50 text-info dark:border-info [&>svg]:text-info\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n));\nAlert.displayName = \"Alert\";\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nAlertTitle.displayName = \"AlertTitle\";\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n));\nAlertDescription.displayName = \"AlertDescription\";\n\nexport { Alert, AlertTitle, AlertDescription };\n","import { type ClassValue, clsx } from \"clsx\";\nimport { twMerge } from \"tailwind-merge\";\n\nexport function cn(...inputs: ClassValue[]) {\n  return twMerge(clsx(inputs));\n}\n\nexport function formatDuration(seconds: number): string {\n  if (!seconds) return '0s';\n  \n  const hours = Math.floor(seconds / 3600);\n  const minutes = Math.floor((seconds % 3600) / 60);\n  const remainingSeconds = Math.round(seconds % 60);\n\n  if (hours > 0) {\n    return `${hours}h ${minutes}m`;\n  } else if (minutes > 0) {\n    return `${minutes}m ${remainingSeconds}s`;\n  } else {\n    return `${remainingSeconds}s`;\n  }\n}","export * from \"../client/components/navigation\";\n\n//# sourceMappingURL=navigation.js.map"],"names":["Promise","resolve","then","__webpack_require__","bind","ERROR_MESSAGES","Configuration","AccessDenied","Verification","Default","VerificationAlert","error","params","useSearchParams","get","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsxs","Alert","variant","jsx","ExclamationTriangleIcon","className","AlertTitle","AlertDescription","alertVariants","cva","variants","default","destructive","info","defaultVariants","React","param","ref","props","div","role","cn","displayName","h5","_len","arguments","length","inputs","_key","twMerge","clsx"],"sourceRoot":""}