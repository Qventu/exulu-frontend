{"version":3,"file":"static/chunks/6111-5ab0e72a466543ea.js","mappings":"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","sources":["webpack://_N_E/./node_modules/next/font/local/target.css?0700","webpack://_N_E/./node_modules/next/font/local/target.css","webpack://_N_E/./node_modules/next/font/local/target.css?cc1e","webpack://_N_E/../src/toast.tsx","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/focusManager.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/mutation.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/notifyManager.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/onlineManager.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/query.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/queryCache.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/mutationCache.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/infiniteQueryBehavior.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/queryClient.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/removable.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/retryer.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/subscribable.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/thenable.js","webpack://_N_E/./node_modules/@tanstack/query-core/build/modern/utils.js","webpack://_N_E/../../src/QueryClientProvider.tsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__jetbrainsMono_d10312', '__jetbrainsMono_Fallback_d10312'\"},\"className\":\"__className_d10312\",\"variable\":\"__variable_d10312\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__merriweather_df02b5', '__merriweather_Fallback_df02b5'\"},\"className\":\"__className_df02b5\",\"variable\":\"__variable_df02b5\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"style\":{\"fontFamily\":\"'__inter_8546d1', '__inter_Fallback_8546d1'\"},\"className\":\"__className_8546d1\",\"variable\":\"__variable_8546d1\"};","import * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createCollection } from '@radix-ui/react-collection';\nimport { createContextScope } from '@radix-ui/react-context';\nimport * as DismissableLayer from '@radix-ui/react-dismissable-layer';\nimport { Portal } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { VisuallyHidden } from '@radix-ui/react-visually-hidden';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * ToastProvider\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROVIDER_NAME = 'ToastProvider';\n\nconst [Collection, useCollection, createCollectionScope] = createCollection<ToastElement>('Toast');\n\ntype SwipeDirection = 'up' | 'down' | 'left' | 'right';\ntype ToastProviderContextValue = {\n  label: string;\n  duration: number;\n  swipeDirection: SwipeDirection;\n  swipeThreshold: number;\n  toastCount: number;\n  viewport: ToastViewportElement | null;\n  onViewportChange(viewport: ToastViewportElement): void;\n  onToastAdd(): void;\n  onToastRemove(): void;\n  isFocusedToastEscapeKeyDownRef: React.MutableRefObject<boolean>;\n  isClosePausedRef: React.MutableRefObject<boolean>;\n};\n\ntype ScopedProps<P> = P & { __scopeToast?: Scope };\nconst [createToastContext, createToastScope] = createContextScope('Toast', [createCollectionScope]);\nconst [ToastProviderProvider, useToastProviderContext] =\n  createToastContext<ToastProviderContextValue>(PROVIDER_NAME);\n\ninterface ToastProviderProps {\n  children?: React.ReactNode;\n  /**\n   * An author-localized label for each toast. Used to help screen reader users\n   * associate the interruption with a toast.\n   * @defaultValue 'Notification'\n   */\n  label?: string;\n  /**\n   * Time in milliseconds that each toast should remain visible for.\n   * @defaultValue 5000\n   */\n  duration?: number;\n  /**\n   * Direction of pointer swipe that should close the toast.\n   * @defaultValue 'right'\n   */\n  swipeDirection?: SwipeDirection;\n  /**\n   * Distance in pixels that the swipe must pass before a close is triggered.\n   * @defaultValue 50\n   */\n  swipeThreshold?: number;\n}\n\nconst ToastProvider: React.FC<ToastProviderProps> = (props: ScopedProps<ToastProviderProps>) => {\n  const {\n    __scopeToast,\n    label = 'Notification',\n    duration = 5000,\n    swipeDirection = 'right',\n    swipeThreshold = 50,\n    children,\n  } = props;\n  const [viewport, setViewport] = React.useState<ToastViewportElement | null>(null);\n  const [toastCount, setToastCount] = React.useState(0);\n  const isFocusedToastEscapeKeyDownRef = React.useRef(false);\n  const isClosePausedRef = React.useRef(false);\n\n  if (!label.trim()) {\n    console.error(\n      `Invalid prop \\`label\\` supplied to \\`${PROVIDER_NAME}\\`. Expected non-empty \\`string\\`.`\n    );\n  }\n\n  return (\n    <Collection.Provider scope={__scopeToast}>\n      <ToastProviderProvider\n        scope={__scopeToast}\n        label={label}\n        duration={duration}\n        swipeDirection={swipeDirection}\n        swipeThreshold={swipeThreshold}\n        toastCount={toastCount}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        onToastAdd={React.useCallback(() => setToastCount((prevCount) => prevCount + 1), [])}\n        onToastRemove={React.useCallback(() => setToastCount((prevCount) => prevCount - 1), [])}\n        isFocusedToastEscapeKeyDownRef={isFocusedToastEscapeKeyDownRef}\n        isClosePausedRef={isClosePausedRef}\n      >\n        {children}\n      </ToastProviderProvider>\n    </Collection.Provider>\n  );\n};\n\nToastProvider.displayName = PROVIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ToastViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'ToastViewport';\nconst VIEWPORT_DEFAULT_HOTKEY = ['F8'];\nconst VIEWPORT_PAUSE = 'toast.viewportPause';\nconst VIEWPORT_RESUME = 'toast.viewportResume';\n\ntype ToastViewportElement = React.ComponentRef<typeof Primitive.ol>;\ntype PrimitiveOrderedListProps = React.ComponentPropsWithoutRef<typeof Primitive.ol>;\ninterface ToastViewportProps extends PrimitiveOrderedListProps {\n  /**\n   * The keys to use as the keyboard shortcut that will move focus to the toast viewport.\n   * @defaultValue ['F8']\n   */\n  hotkey?: string[];\n  /**\n   * An author-localized label for the toast viewport to provide context for screen reader users\n   * when navigating page landmarks. The available `{hotkey}` placeholder will be replaced for you.\n   * @defaultValue 'Notifications ({hotkey})'\n   */\n  label?: string;\n}\n\nconst ToastViewport = React.forwardRef<ToastViewportElement, ToastViewportProps>(\n  (props: ScopedProps<ToastViewportProps>, forwardedRef) => {\n    const {\n      __scopeToast,\n      hotkey = VIEWPORT_DEFAULT_HOTKEY,\n      label = 'Notifications ({hotkey})',\n      ...viewportProps\n    } = props;\n    const context = useToastProviderContext(VIEWPORT_NAME, __scopeToast);\n    const getItems = useCollection(__scopeToast);\n    const wrapperRef = React.useRef<HTMLDivElement>(null);\n    const headFocusProxyRef = React.useRef<FocusProxyElement>(null);\n    const tailFocusProxyRef = React.useRef<FocusProxyElement>(null);\n    const ref = React.useRef<ToastViewportElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    const hotkeyLabel = hotkey.join('+').replace(/Key/g, '').replace(/Digit/g, '');\n    const hasToasts = context.toastCount > 0;\n\n    React.useEffect(() => {\n      const handleKeyDown = (event: KeyboardEvent) => {\n        // we use `event.code` as it is consistent regardless of meta keys that were pressed.\n        // for example, `event.key` for `Control+Alt+t` is `†` and `t !== †`\n        const isHotkeyPressed =\n          hotkey.length !== 0 && hotkey.every((key) => (event as any)[key] || event.code === key);\n        if (isHotkeyPressed) ref.current?.focus();\n      };\n      document.addEventListener('keydown', handleKeyDown);\n      return () => document.removeEventListener('keydown', handleKeyDown);\n    }, [hotkey]);\n\n    React.useEffect(() => {\n      const wrapper = wrapperRef.current;\n      const viewport = ref.current;\n      if (hasToasts && wrapper && viewport) {\n        const handlePause = () => {\n          if (!context.isClosePausedRef.current) {\n            const pauseEvent = new CustomEvent(VIEWPORT_PAUSE);\n            viewport.dispatchEvent(pauseEvent);\n            context.isClosePausedRef.current = true;\n          }\n        };\n\n        const handleResume = () => {\n          if (context.isClosePausedRef.current) {\n            const resumeEvent = new CustomEvent(VIEWPORT_RESUME);\n            viewport.dispatchEvent(resumeEvent);\n            context.isClosePausedRef.current = false;\n          }\n        };\n\n        const handleFocusOutResume = (event: FocusEvent) => {\n          const isFocusMovingOutside = !wrapper.contains(event.relatedTarget as HTMLElement);\n          if (isFocusMovingOutside) handleResume();\n        };\n\n        const handlePointerLeaveResume = () => {\n          const isFocusInside = wrapper.contains(document.activeElement);\n          if (!isFocusInside) handleResume();\n        };\n\n        // Toasts are not in the viewport React tree so we need to bind DOM events\n        wrapper.addEventListener('focusin', handlePause);\n        wrapper.addEventListener('focusout', handleFocusOutResume);\n        wrapper.addEventListener('pointermove', handlePause);\n        wrapper.addEventListener('pointerleave', handlePointerLeaveResume);\n        window.addEventListener('blur', handlePause);\n        window.addEventListener('focus', handleResume);\n        return () => {\n          wrapper.removeEventListener('focusin', handlePause);\n          wrapper.removeEventListener('focusout', handleFocusOutResume);\n          wrapper.removeEventListener('pointermove', handlePause);\n          wrapper.removeEventListener('pointerleave', handlePointerLeaveResume);\n          window.removeEventListener('blur', handlePause);\n          window.removeEventListener('focus', handleResume);\n        };\n      }\n    }, [hasToasts, context.isClosePausedRef]);\n\n    const getSortedTabbableCandidates = React.useCallback(\n      ({ tabbingDirection }: { tabbingDirection: 'forwards' | 'backwards' }) => {\n        const toastItems = getItems();\n        const tabbableCandidates = toastItems.map((toastItem) => {\n          const toastNode = toastItem.ref.current!;\n          const toastTabbableCandidates = [toastNode, ...getTabbableCandidates(toastNode)];\n          return tabbingDirection === 'forwards'\n            ? toastTabbableCandidates\n            : toastTabbableCandidates.reverse();\n        });\n        return (\n          tabbingDirection === 'forwards' ? tabbableCandidates.reverse() : tabbableCandidates\n        ).flat();\n      },\n      [getItems]\n    );\n\n    React.useEffect(() => {\n      const viewport = ref.current;\n      // We programmatically manage tabbing as we are unable to influence\n      // the source order with portals, this allows us to reverse the\n      // tab order so that it runs from most recent toast to least\n      if (viewport) {\n        const handleKeyDown = (event: KeyboardEvent) => {\n          const isMetaKey = event.altKey || event.ctrlKey || event.metaKey;\n          const isTabKey = event.key === 'Tab' && !isMetaKey;\n\n          if (isTabKey) {\n            const focusedElement = document.activeElement;\n            const isTabbingBackwards = event.shiftKey;\n            const targetIsViewport = event.target === viewport;\n\n            // If we're back tabbing after jumping to the viewport then we simply\n            // proxy focus out to the preceding document\n            if (targetIsViewport && isTabbingBackwards) {\n              headFocusProxyRef.current?.focus();\n              return;\n            }\n\n            const tabbingDirection = isTabbingBackwards ? 'backwards' : 'forwards';\n            const sortedCandidates = getSortedTabbableCandidates({ tabbingDirection });\n            const index = sortedCandidates.findIndex((candidate) => candidate === focusedElement);\n            if (focusFirst(sortedCandidates.slice(index + 1))) {\n              event.preventDefault();\n            } else {\n              // If we can't focus that means we're at the edges so we\n              // proxy to the corresponding exit point and let the browser handle\n              // tab/shift+tab keypress and implicitly pass focus to the next valid element in the document\n              isTabbingBackwards\n                ? headFocusProxyRef.current?.focus()\n                : tailFocusProxyRef.current?.focus();\n            }\n          }\n        };\n\n        // Toasts are not in the viewport React tree so we need to bind DOM events\n        viewport.addEventListener('keydown', handleKeyDown);\n        return () => viewport.removeEventListener('keydown', handleKeyDown);\n      }\n    }, [getItems, getSortedTabbableCandidates]);\n\n    return (\n      <DismissableLayer.Branch\n        ref={wrapperRef}\n        role=\"region\"\n        aria-label={label.replace('{hotkey}', hotkeyLabel)}\n        // Ensure virtual cursor from landmarks menus triggers focus/blur for pause/resume\n        tabIndex={-1}\n        // incase list has size when empty (e.g. padding), we remove pointer events so\n        // it doesn't prevent interactions with page elements that it overlays\n        style={{ pointerEvents: hasToasts ? undefined : 'none' }}\n      >\n        {hasToasts && (\n          <FocusProxy\n            ref={headFocusProxyRef}\n            onFocusFromOutsideViewport={() => {\n              const tabbableCandidates = getSortedTabbableCandidates({\n                tabbingDirection: 'forwards',\n              });\n              focusFirst(tabbableCandidates);\n            }}\n          />\n        )}\n        {/**\n         * tabindex on the the list so that it can be focused when items are removed. we focus\n         * the list instead of the viewport so it announces number of items remaining.\n         */}\n        <Collection.Slot scope={__scopeToast}>\n          <Primitive.ol tabIndex={-1} {...viewportProps} ref={composedRefs} />\n        </Collection.Slot>\n        {hasToasts && (\n          <FocusProxy\n            ref={tailFocusProxyRef}\n            onFocusFromOutsideViewport={() => {\n              const tabbableCandidates = getSortedTabbableCandidates({\n                tabbingDirection: 'backwards',\n              });\n              focusFirst(tabbableCandidates);\n            }}\n          />\n        )}\n      </DismissableLayer.Branch>\n    );\n  }\n);\n\nToastViewport.displayName = VIEWPORT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst FOCUS_PROXY_NAME = 'ToastFocusProxy';\n\ntype FocusProxyElement = React.ComponentRef<typeof VisuallyHidden>;\ntype VisuallyHiddenProps = React.ComponentPropsWithoutRef<typeof VisuallyHidden>;\ninterface FocusProxyProps extends VisuallyHiddenProps {\n  onFocusFromOutsideViewport(): void;\n}\n\nconst FocusProxy = React.forwardRef<FocusProxyElement, ScopedProps<FocusProxyProps>>(\n  (props, forwardedRef) => {\n    const { __scopeToast, onFocusFromOutsideViewport, ...proxyProps } = props;\n    const context = useToastProviderContext(FOCUS_PROXY_NAME, __scopeToast);\n\n    return (\n      <VisuallyHidden\n        aria-hidden\n        tabIndex={0}\n        {...proxyProps}\n        ref={forwardedRef}\n        // Avoid page scrolling when focus is on the focus proxy\n        style={{ position: 'fixed' }}\n        onFocus={(event) => {\n          const prevFocusedElement = event.relatedTarget as HTMLElement | null;\n          const isFocusFromOutsideViewport = !context.viewport?.contains(prevFocusedElement);\n          if (isFocusFromOutsideViewport) onFocusFromOutsideViewport();\n        }}\n      />\n    );\n  }\n);\n\nFocusProxy.displayName = FOCUS_PROXY_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Toast\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOAST_NAME = 'Toast';\nconst TOAST_SWIPE_START = 'toast.swipeStart';\nconst TOAST_SWIPE_MOVE = 'toast.swipeMove';\nconst TOAST_SWIPE_CANCEL = 'toast.swipeCancel';\nconst TOAST_SWIPE_END = 'toast.swipeEnd';\n\ntype ToastElement = ToastImplElement;\ninterface ToastProps extends Omit<ToastImplProps, keyof ToastImplPrivateProps> {\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst Toast = React.forwardRef<ToastElement, ToastProps>(\n  (props: ScopedProps<ToastProps>, forwardedRef) => {\n    const { forceMount, open: openProp, defaultOpen, onOpenChange, ...toastProps } = props;\n    const [open, setOpen] = useControllableState({\n      prop: openProp,\n      defaultProp: defaultOpen ?? true,\n      onChange: onOpenChange,\n      caller: TOAST_NAME,\n    });\n    return (\n      <Presence present={forceMount || open}>\n        <ToastImpl\n          open={open}\n          {...toastProps}\n          ref={forwardedRef}\n          onClose={() => setOpen(false)}\n          onPause={useCallbackRef(props.onPause)}\n          onResume={useCallbackRef(props.onResume)}\n          onSwipeStart={composeEventHandlers(props.onSwipeStart, (event) => {\n            event.currentTarget.setAttribute('data-swipe', 'start');\n          })}\n          onSwipeMove={composeEventHandlers(props.onSwipeMove, (event) => {\n            const { x, y } = event.detail.delta;\n            event.currentTarget.setAttribute('data-swipe', 'move');\n            event.currentTarget.style.setProperty('--radix-toast-swipe-move-x', `${x}px`);\n            event.currentTarget.style.setProperty('--radix-toast-swipe-move-y', `${y}px`);\n          })}\n          onSwipeCancel={composeEventHandlers(props.onSwipeCancel, (event) => {\n            event.currentTarget.setAttribute('data-swipe', 'cancel');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-move-x');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-move-y');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-end-x');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-end-y');\n          })}\n          onSwipeEnd={composeEventHandlers(props.onSwipeEnd, (event) => {\n            const { x, y } = event.detail.delta;\n            event.currentTarget.setAttribute('data-swipe', 'end');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-move-x');\n            event.currentTarget.style.removeProperty('--radix-toast-swipe-move-y');\n            event.currentTarget.style.setProperty('--radix-toast-swipe-end-x', `${x}px`);\n            event.currentTarget.style.setProperty('--radix-toast-swipe-end-y', `${y}px`);\n            setOpen(false);\n          })}\n        />\n      </Presence>\n    );\n  }\n);\n\nToast.displayName = TOAST_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype SwipeEvent = { currentTarget: EventTarget & ToastElement } & Omit<\n  CustomEvent<{ originalEvent: React.PointerEvent; delta: { x: number; y: number } }>,\n  'currentTarget'\n>;\n\nconst [ToastInteractiveProvider, useToastInteractiveContext] = createToastContext(TOAST_NAME, {\n  onClose() {},\n});\n\ntype ToastImplElement = React.ComponentRef<typeof Primitive.li>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer.Root>;\ntype ToastImplPrivateProps = { open: boolean; onClose(): void };\ntype PrimitiveListItemProps = React.ComponentPropsWithoutRef<typeof Primitive.li>;\ninterface ToastImplProps extends ToastImplPrivateProps, PrimitiveListItemProps {\n  type?: 'foreground' | 'background';\n  /**\n   * Time in milliseconds that toast should remain visible for. Overrides value\n   * given to `ToastProvider`.\n   */\n  duration?: number;\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  onPause?(): void;\n  onResume?(): void;\n  onSwipeStart?(event: SwipeEvent): void;\n  onSwipeMove?(event: SwipeEvent): void;\n  onSwipeCancel?(event: SwipeEvent): void;\n  onSwipeEnd?(event: SwipeEvent): void;\n}\n\nconst ToastImpl = React.forwardRef<ToastImplElement, ToastImplProps>(\n  (props: ScopedProps<ToastImplProps>, forwardedRef) => {\n    const {\n      __scopeToast,\n      type = 'foreground',\n      duration: durationProp,\n      open,\n      onClose,\n      onEscapeKeyDown,\n      onPause,\n      onResume,\n      onSwipeStart,\n      onSwipeMove,\n      onSwipeCancel,\n      onSwipeEnd,\n      ...toastProps\n    } = props;\n    const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n    const [node, setNode] = React.useState<ToastImplElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const pointerStartRef = React.useRef<{ x: number; y: number } | null>(null);\n    const swipeDeltaRef = React.useRef<{ x: number; y: number } | null>(null);\n    const duration = durationProp || context.duration;\n    const closeTimerStartTimeRef = React.useRef(0);\n    const closeTimerRemainingTimeRef = React.useRef(duration);\n    const closeTimerRef = React.useRef(0);\n    const { onToastAdd, onToastRemove } = context;\n    const handleClose = useCallbackRef(() => {\n      // focus viewport if focus is within toast to read the remaining toast\n      // count to SR users and ensure focus isn't lost\n      const isFocusInToast = node?.contains(document.activeElement);\n      if (isFocusInToast) context.viewport?.focus();\n      onClose();\n    });\n\n    const startTimer = React.useCallback(\n      (duration: number) => {\n        if (!duration || duration === Infinity) return;\n        window.clearTimeout(closeTimerRef.current);\n        closeTimerStartTimeRef.current = new Date().getTime();\n        closeTimerRef.current = window.setTimeout(handleClose, duration);\n      },\n      [handleClose]\n    );\n\n    React.useEffect(() => {\n      const viewport = context.viewport;\n      if (viewport) {\n        const handleResume = () => {\n          startTimer(closeTimerRemainingTimeRef.current);\n          onResume?.();\n        };\n        const handlePause = () => {\n          const elapsedTime = new Date().getTime() - closeTimerStartTimeRef.current;\n          closeTimerRemainingTimeRef.current = closeTimerRemainingTimeRef.current - elapsedTime;\n          window.clearTimeout(closeTimerRef.current);\n          onPause?.();\n        };\n        viewport.addEventListener(VIEWPORT_PAUSE, handlePause);\n        viewport.addEventListener(VIEWPORT_RESUME, handleResume);\n        return () => {\n          viewport.removeEventListener(VIEWPORT_PAUSE, handlePause);\n          viewport.removeEventListener(VIEWPORT_RESUME, handleResume);\n        };\n      }\n    }, [context.viewport, duration, onPause, onResume, startTimer]);\n\n    // start timer when toast opens or duration changes.\n    // we include `open` in deps because closed !== unmounted when animating\n    // so it could reopen before being completely unmounted\n    React.useEffect(() => {\n      if (open && !context.isClosePausedRef.current) startTimer(duration);\n    }, [open, duration, context.isClosePausedRef, startTimer]);\n\n    React.useEffect(() => {\n      onToastAdd();\n      return () => onToastRemove();\n    }, [onToastAdd, onToastRemove]);\n\n    const announceTextContent = React.useMemo(() => {\n      return node ? getAnnounceTextContent(node) : null;\n    }, [node]);\n\n    if (!context.viewport) return null;\n\n    return (\n      <>\n        {announceTextContent && (\n          <ToastAnnounce\n            __scopeToast={__scopeToast}\n            // Toasts are always role=status to avoid stuttering issues with role=alert in SRs.\n            role=\"status\"\n            aria-live={type === 'foreground' ? 'assertive' : 'polite'}\n            aria-atomic\n          >\n            {announceTextContent}\n          </ToastAnnounce>\n        )}\n\n        <ToastInteractiveProvider scope={__scopeToast} onClose={handleClose}>\n          {ReactDOM.createPortal(\n            <Collection.ItemSlot scope={__scopeToast}>\n              <DismissableLayer.Root\n                asChild\n                onEscapeKeyDown={composeEventHandlers(onEscapeKeyDown, () => {\n                  if (!context.isFocusedToastEscapeKeyDownRef.current) handleClose();\n                  context.isFocusedToastEscapeKeyDownRef.current = false;\n                })}\n              >\n                <Primitive.li\n                  // Ensure toasts are announced as status list or status when focused\n                  role=\"status\"\n                  aria-live=\"off\"\n                  aria-atomic\n                  tabIndex={0}\n                  data-state={open ? 'open' : 'closed'}\n                  data-swipe-direction={context.swipeDirection}\n                  {...toastProps}\n                  ref={composedRefs}\n                  style={{ userSelect: 'none', touchAction: 'none', ...props.style }}\n                  onKeyDown={composeEventHandlers(props.onKeyDown, (event) => {\n                    if (event.key !== 'Escape') return;\n                    onEscapeKeyDown?.(event.nativeEvent);\n                    if (!event.nativeEvent.defaultPrevented) {\n                      context.isFocusedToastEscapeKeyDownRef.current = true;\n                      handleClose();\n                    }\n                  })}\n                  onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n                    if (event.button !== 0) return;\n                    pointerStartRef.current = { x: event.clientX, y: event.clientY };\n                  })}\n                  onPointerMove={composeEventHandlers(props.onPointerMove, (event) => {\n                    if (!pointerStartRef.current) return;\n                    const x = event.clientX - pointerStartRef.current.x;\n                    const y = event.clientY - pointerStartRef.current.y;\n                    const hasSwipeMoveStarted = Boolean(swipeDeltaRef.current);\n                    const isHorizontalSwipe = ['left', 'right'].includes(context.swipeDirection);\n                    const clamp = ['left', 'up'].includes(context.swipeDirection)\n                      ? Math.min\n                      : Math.max;\n                    const clampedX = isHorizontalSwipe ? clamp(0, x) : 0;\n                    const clampedY = !isHorizontalSwipe ? clamp(0, y) : 0;\n                    const moveStartBuffer = event.pointerType === 'touch' ? 10 : 2;\n                    const delta = { x: clampedX, y: clampedY };\n                    const eventDetail = { originalEvent: event, delta };\n                    if (hasSwipeMoveStarted) {\n                      swipeDeltaRef.current = delta;\n                      handleAndDispatchCustomEvent(TOAST_SWIPE_MOVE, onSwipeMove, eventDetail, {\n                        discrete: false,\n                      });\n                    } else if (isDeltaInDirection(delta, context.swipeDirection, moveStartBuffer)) {\n                      swipeDeltaRef.current = delta;\n                      handleAndDispatchCustomEvent(TOAST_SWIPE_START, onSwipeStart, eventDetail, {\n                        discrete: false,\n                      });\n                      (event.target as HTMLElement).setPointerCapture(event.pointerId);\n                    } else if (Math.abs(x) > moveStartBuffer || Math.abs(y) > moveStartBuffer) {\n                      // User is swiping in wrong direction so we disable swipe gesture\n                      // for the current pointer down interaction\n                      pointerStartRef.current = null;\n                    }\n                  })}\n                  onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n                    const delta = swipeDeltaRef.current;\n                    const target = event.target as HTMLElement;\n                    if (target.hasPointerCapture(event.pointerId)) {\n                      target.releasePointerCapture(event.pointerId);\n                    }\n                    swipeDeltaRef.current = null;\n                    pointerStartRef.current = null;\n                    if (delta) {\n                      const toast = event.currentTarget;\n                      const eventDetail = { originalEvent: event, delta };\n                      if (\n                        isDeltaInDirection(delta, context.swipeDirection, context.swipeThreshold)\n                      ) {\n                        handleAndDispatchCustomEvent(TOAST_SWIPE_END, onSwipeEnd, eventDetail, {\n                          discrete: true,\n                        });\n                      } else {\n                        handleAndDispatchCustomEvent(\n                          TOAST_SWIPE_CANCEL,\n                          onSwipeCancel,\n                          eventDetail,\n                          {\n                            discrete: true,\n                          }\n                        );\n                      }\n                      // Prevent click event from triggering on items within the toast when\n                      // pointer up is part of a swipe gesture\n                      toast.addEventListener('click', (event) => event.preventDefault(), {\n                        once: true,\n                      });\n                    }\n                  })}\n                />\n              </DismissableLayer.Root>\n            </Collection.ItemSlot>,\n            context.viewport\n          )}\n        </ToastInteractiveProvider>\n      </>\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ninterface ToastAnnounceProps\n  extends Omit<React.ComponentPropsWithoutRef<'div'>, 'children'>,\n    ScopedProps<{ children: string[] }> {}\n\nconst ToastAnnounce: React.FC<ToastAnnounceProps> = (props: ScopedProps<ToastAnnounceProps>) => {\n  const { __scopeToast, children, ...announceProps } = props;\n  const context = useToastProviderContext(TOAST_NAME, __scopeToast);\n  const [renderAnnounceText, setRenderAnnounceText] = React.useState(false);\n  const [isAnnounced, setIsAnnounced] = React.useState(false);\n\n  // render text content in the next frame to ensure toast is announced in NVDA\n  useNextFrame(() => setRenderAnnounceText(true));\n\n  // cleanup after announcing\n  React.useEffect(() => {\n    const timer = window.setTimeout(() => setIsAnnounced(true), 1000);\n    return () => window.clearTimeout(timer);\n  }, []);\n\n  return isAnnounced ? null : (\n    <Portal asChild>\n      <VisuallyHidden {...announceProps}>\n        {renderAnnounceText && (\n          <>\n            {context.label} {children}\n          </>\n        )}\n      </VisuallyHidden>\n    </Portal>\n  );\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ToastTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'ToastTitle';\n\ntype ToastTitleElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ToastTitleProps extends PrimitiveDivProps {}\n\nconst ToastTitle = React.forwardRef<ToastTitleElement, ToastTitleProps>(\n  (props: ScopedProps<ToastTitleProps>, forwardedRef) => {\n    const { __scopeToast, ...titleProps } = props;\n    return <Primitive.div {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nToastTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ToastDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'ToastDescription';\n\ntype ToastDescriptionElement = React.ComponentRef<typeof Primitive.div>;\ninterface ToastDescriptionProps extends PrimitiveDivProps {}\n\nconst ToastDescription = React.forwardRef<ToastDescriptionElement, ToastDescriptionProps>(\n  (props: ScopedProps<ToastDescriptionProps>, forwardedRef) => {\n    const { __scopeToast, ...descriptionProps } = props;\n    return <Primitive.div {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nToastDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ToastAction\n * -----------------------------------------------------------------------------------------------*/\n\nconst ACTION_NAME = 'ToastAction';\n\ntype ToastActionElement = ToastCloseElement;\ninterface ToastActionProps extends ToastCloseProps {\n  /**\n   * A short description for an alternate way to carry out the action. For screen reader users\n   * who will not be able to navigate to the button easily/quickly.\n   * @example <ToastAction altText=\"Goto account settings to upgrade\">Upgrade</ToastAction>\n   * @example <ToastAction altText=\"Undo (Alt+U)\">Undo</ToastAction>\n   */\n  altText: string;\n}\n\nconst ToastAction = React.forwardRef<ToastActionElement, ToastActionProps>(\n  (props: ScopedProps<ToastActionProps>, forwardedRef) => {\n    const { altText, ...actionProps } = props;\n\n    if (!altText.trim()) {\n      console.error(\n        `Invalid prop \\`altText\\` supplied to \\`${ACTION_NAME}\\`. Expected non-empty \\`string\\`.`\n      );\n      return null;\n    }\n\n    return (\n      <ToastAnnounceExclude altText={altText} asChild>\n        <ToastClose {...actionProps} ref={forwardedRef} />\n      </ToastAnnounceExclude>\n    );\n  }\n);\n\nToastAction.displayName = ACTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ToastClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'ToastClose';\n\ntype ToastCloseElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface ToastCloseProps extends PrimitiveButtonProps {}\n\nconst ToastClose = React.forwardRef<ToastCloseElement, ToastCloseProps>(\n  (props: ScopedProps<ToastCloseProps>, forwardedRef) => {\n    const { __scopeToast, ...closeProps } = props;\n    const interactiveContext = useToastInteractiveContext(CLOSE_NAME, __scopeToast);\n\n    return (\n      <ToastAnnounceExclude asChild>\n        <Primitive.button\n          type=\"button\"\n          {...closeProps}\n          ref={forwardedRef}\n          onClick={composeEventHandlers(props.onClick, interactiveContext.onClose)}\n        />\n      </ToastAnnounceExclude>\n    );\n  }\n);\n\nToastClose.displayName = CLOSE_NAME;\n\n/* ---------------------------------------------------------------------------------------------- */\n\ntype ToastAnnounceExcludeElement = React.ComponentRef<typeof Primitive.div>;\ninterface ToastAnnounceExcludeProps extends PrimitiveDivProps {\n  altText?: string;\n}\n\nconst ToastAnnounceExclude = React.forwardRef<\n  ToastAnnounceExcludeElement,\n  ToastAnnounceExcludeProps\n>((props: ScopedProps<ToastAnnounceExcludeProps>, forwardedRef) => {\n  const { __scopeToast, altText, ...announceExcludeProps } = props;\n\n  return (\n    <Primitive.div\n      data-radix-toast-announce-exclude=\"\"\n      data-radix-toast-announce-alt={altText || undefined}\n      {...announceExcludeProps}\n      ref={forwardedRef}\n    />\n  );\n});\n\nfunction getAnnounceTextContent(container: HTMLElement) {\n  const textContent: string[] = [];\n  const childNodes = Array.from(container.childNodes);\n\n  childNodes.forEach((node) => {\n    if (node.nodeType === node.TEXT_NODE && node.textContent) textContent.push(node.textContent);\n    if (isHTMLElement(node)) {\n      const isHidden = node.ariaHidden || node.hidden || node.style.display === 'none';\n      const isExcluded = node.dataset.radixToastAnnounceExclude === '';\n\n      if (!isHidden) {\n        if (isExcluded) {\n          const altText = node.dataset.radixToastAnnounceAlt;\n          if (altText) textContent.push(altText);\n        } else {\n          textContent.push(...getAnnounceTextContent(node));\n        }\n      }\n    }\n  });\n\n  // We return a collection of text rather than a single concatenated string.\n  // This allows SR VO to naturally pause break between nodes while announcing.\n  return textContent;\n}\n\n/* ---------------------------------------------------------------------------------------------- */\n\nfunction handleAndDispatchCustomEvent<\n  E extends CustomEvent,\n  ReactEvent extends React.SyntheticEvent,\n>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: ReactEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const currentTarget = detail.originalEvent.currentTarget as HTMLElement;\n  const event = new CustomEvent(name, { bubbles: true, cancelable: true, detail });\n  if (handler) currentTarget.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(currentTarget, event);\n  } else {\n    currentTarget.dispatchEvent(event);\n  }\n}\n\nconst isDeltaInDirection = (\n  delta: { x: number; y: number },\n  direction: SwipeDirection,\n  threshold = 0\n) => {\n  const deltaX = Math.abs(delta.x);\n  const deltaY = Math.abs(delta.y);\n  const isDeltaX = deltaX > deltaY;\n  if (direction === 'left' || direction === 'right') {\n    return isDeltaX && deltaX > threshold;\n  } else {\n    return !isDeltaX && deltaY > threshold;\n  }\n};\n\nfunction useNextFrame(callback = () => {}) {\n  const fn = useCallbackRef(callback);\n  useLayoutEffect(() => {\n    let raf1 = 0;\n    let raf2 = 0;\n    raf1 = window.requestAnimationFrame(() => (raf2 = window.requestAnimationFrame(fn)));\n    return () => {\n      window.cancelAnimationFrame(raf1);\n      window.cancelAnimationFrame(raf2);\n    };\n  }, [fn]);\n}\n\nfunction isHTMLElement(node: any): node is HTMLElement {\n  return node.nodeType === node.ELEMENT_NODE;\n}\n\n/**\n * Returns a list of potential tabbable candidates.\n *\n * NOTE: This is only a close approximation. For example it doesn't take into account cases like when\n * elements are not visible. This cannot be worked out easily by just reading a property, but rather\n * necessitate runtime knowledge (computed styles, etc). We deal with these cases separately.\n *\n * See: https://developer.mozilla.org/en-US/docs/Web/API/TreeWalker\n * Credit: https://github.com/discord/focus-layers/blob/master/src/util/wrapFocus.tsx#L1\n */\nfunction getTabbableCandidates(container: HTMLElement) {\n  const nodes: HTMLElement[] = [];\n  const walker = document.createTreeWalker(container, NodeFilter.SHOW_ELEMENT, {\n    acceptNode: (node: any) => {\n      const isHiddenInput = node.tagName === 'INPUT' && node.type === 'hidden';\n      if (node.disabled || node.hidden || isHiddenInput) return NodeFilter.FILTER_SKIP;\n      // `.tabIndex` is not the same as the `tabindex` attribute. It works on the\n      // runtime's understanding of tabbability, so this automatically accounts\n      // for any kind of element that could be tabbed to.\n      return node.tabIndex >= 0 ? NodeFilter.FILTER_ACCEPT : NodeFilter.FILTER_SKIP;\n    },\n  });\n  while (walker.nextNode()) nodes.push(walker.currentNode as HTMLElement);\n  // we do not take into account the order of nodes with positive `tabIndex` as it\n  // hinders accessibility to have tab order different from visual order.\n  return nodes;\n}\n\nfunction focusFirst(candidates: HTMLElement[]) {\n  const previouslyFocusedElement = document.activeElement;\n  return candidates.some((candidate) => {\n    // if focus is already where we want to go, we don't want to keep going through the candidates\n    if (candidate === previouslyFocusedElement) return true;\n    candidate.focus();\n    return document.activeElement !== previouslyFocusedElement;\n  });\n}\n\nconst Provider = ToastProvider;\nconst Viewport = ToastViewport;\nconst Root = Toast;\nconst Title = ToastTitle;\nconst Description = ToastDescription;\nconst Action = ToastAction;\nconst Close = ToastClose;\n\nexport {\n  createToastScope,\n  //\n  ToastProvider,\n  ToastViewport,\n  Toast,\n  ToastTitle,\n  ToastDescription,\n  ToastAction,\n  ToastClose,\n  //\n  Provider,\n  Viewport,\n  Root,\n  Title,\n  Description,\n  Action,\n  Close,\n};\nexport type {\n  ToastProviderProps,\n  ToastViewportProps,\n  ToastProps,\n  ToastTitleProps,\n  ToastDescriptionProps,\n  ToastActionProps,\n  ToastCloseProps,\n};\n","// src/focusManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar FocusManager = class extends Subscribable {\n  #focused;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onFocus) => {\n      if (!isServer && window.addEventListener) {\n        const listener = () => onFocus();\n        window.addEventListener(\"visibilitychange\", listener, false);\n        return () => {\n          window.removeEventListener(\"visibilitychange\", listener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup((focused) => {\n      if (typeof focused === \"boolean\") {\n        this.setFocused(focused);\n      } else {\n        this.onFocus();\n      }\n    });\n  }\n  setFocused(focused) {\n    const changed = this.#focused !== focused;\n    if (changed) {\n      this.#focused = focused;\n      this.onFocus();\n    }\n  }\n  onFocus() {\n    const isFocused = this.isFocused();\n    this.listeners.forEach((listener) => {\n      listener(isFocused);\n    });\n  }\n  isFocused() {\n    if (typeof this.#focused === \"boolean\") {\n      return this.#focused;\n    }\n    return globalThis.document?.visibilityState !== \"hidden\";\n  }\n};\nvar focusManager = new FocusManager();\nexport {\n  FocusManager,\n  focusManager\n};\n//# sourceMappingURL=focusManager.js.map","// src/mutation.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Removable } from \"./removable.js\";\nimport { createRetryer } from \"./retryer.js\";\nvar Mutation = class extends Removable {\n  #observers;\n  #mutationCache;\n  #retryer;\n  constructor(config) {\n    super();\n    this.mutationId = config.mutationId;\n    this.#mutationCache = config.mutationCache;\n    this.#observers = [];\n    this.state = config.state || getDefaultState();\n    this.setOptions(config.options);\n    this.scheduleGc();\n  }\n  setOptions(options) {\n    this.options = options;\n    this.updateGcTime(this.options.gcTime);\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  addObserver(observer) {\n    if (!this.#observers.includes(observer)) {\n      this.#observers.push(observer);\n      this.clearGcTimeout();\n      this.#mutationCache.notify({\n        type: \"observerAdded\",\n        mutation: this,\n        observer\n      });\n    }\n  }\n  removeObserver(observer) {\n    this.#observers = this.#observers.filter((x) => x !== observer);\n    this.scheduleGc();\n    this.#mutationCache.notify({\n      type: \"observerRemoved\",\n      mutation: this,\n      observer\n    });\n  }\n  optionalRemove() {\n    if (!this.#observers.length) {\n      if (this.state.status === \"pending\") {\n        this.scheduleGc();\n      } else {\n        this.#mutationCache.remove(this);\n      }\n    }\n  }\n  continue() {\n    return this.#retryer?.continue() ?? // continuing a mutation assumes that variables are set, mutation must have been dehydrated before\n    this.execute(this.state.variables);\n  }\n  async execute(variables) {\n    const onContinue = () => {\n      this.#dispatch({ type: \"continue\" });\n    };\n    this.#retryer = createRetryer({\n      fn: () => {\n        if (!this.options.mutationFn) {\n          return Promise.reject(new Error(\"No mutationFn found\"));\n        }\n        return this.options.mutationFn(variables);\n      },\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue,\n      retry: this.options.retry ?? 0,\n      retryDelay: this.options.retryDelay,\n      networkMode: this.options.networkMode,\n      canRun: () => this.#mutationCache.canRun(this)\n    });\n    const restored = this.state.status === \"pending\";\n    const isPaused = !this.#retryer.canStart();\n    try {\n      if (restored) {\n        onContinue();\n      } else {\n        this.#dispatch({ type: \"pending\", variables, isPaused });\n        await this.#mutationCache.config.onMutate?.(\n          variables,\n          this\n        );\n        const context = await this.options.onMutate?.(variables);\n        if (context !== this.state.context) {\n          this.#dispatch({\n            type: \"pending\",\n            context,\n            variables,\n            isPaused\n          });\n        }\n      }\n      const data = await this.#retryer.start();\n      await this.#mutationCache.config.onSuccess?.(\n        data,\n        variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSuccess?.(data, variables, this.state.context);\n      await this.#mutationCache.config.onSettled?.(\n        data,\n        null,\n        this.state.variables,\n        this.state.context,\n        this\n      );\n      await this.options.onSettled?.(data, null, variables, this.state.context);\n      this.#dispatch({ type: \"success\", data });\n      return data;\n    } catch (error) {\n      try {\n        await this.#mutationCache.config.onError?.(\n          error,\n          variables,\n          this.state.context,\n          this\n        );\n        await this.options.onError?.(\n          error,\n          variables,\n          this.state.context\n        );\n        await this.#mutationCache.config.onSettled?.(\n          void 0,\n          error,\n          this.state.variables,\n          this.state.context,\n          this\n        );\n        await this.options.onSettled?.(\n          void 0,\n          error,\n          variables,\n          this.state.context\n        );\n        throw error;\n      } finally {\n        this.#dispatch({ type: \"error\", error });\n      }\n    } finally {\n      this.#mutationCache.runNext(this);\n    }\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            failureCount: action.failureCount,\n            failureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            isPaused: true\n          };\n        case \"continue\":\n          return {\n            ...state,\n            isPaused: false\n          };\n        case \"pending\":\n          return {\n            ...state,\n            context: action.context,\n            data: void 0,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            isPaused: action.isPaused,\n            status: \"pending\",\n            variables: action.variables,\n            submittedAt: Date.now()\n          };\n        case \"success\":\n          return {\n            ...state,\n            data: action.data,\n            failureCount: 0,\n            failureReason: null,\n            error: null,\n            status: \"success\",\n            isPaused: false\n          };\n        case \"error\":\n          return {\n            ...state,\n            data: void 0,\n            error: action.error,\n            failureCount: state.failureCount + 1,\n            failureReason: action.error,\n            isPaused: false,\n            status: \"error\"\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.#observers.forEach((observer) => {\n        observer.onMutationUpdate(action);\n      });\n      this.#mutationCache.notify({\n        mutation: this,\n        type: \"updated\",\n        action\n      });\n    });\n  }\n};\nfunction getDefaultState() {\n  return {\n    context: void 0,\n    data: void 0,\n    error: null,\n    failureCount: 0,\n    failureReason: null,\n    isPaused: false,\n    status: \"idle\",\n    variables: void 0,\n    submittedAt: 0\n  };\n}\nexport {\n  Mutation,\n  getDefaultState\n};\n//# sourceMappingURL=mutation.js.map","// src/notifyManager.ts\nvar defaultScheduler = (cb) => setTimeout(cb, 0);\nfunction createNotifyManager() {\n  let queue = [];\n  let transactions = 0;\n  let notifyFn = (callback) => {\n    callback();\n  };\n  let batchNotifyFn = (callback) => {\n    callback();\n  };\n  let scheduleFn = defaultScheduler;\n  const schedule = (callback) => {\n    if (transactions) {\n      queue.push(callback);\n    } else {\n      scheduleFn(() => {\n        notifyFn(callback);\n      });\n    }\n  };\n  const flush = () => {\n    const originalQueue = queue;\n    queue = [];\n    if (originalQueue.length) {\n      scheduleFn(() => {\n        batchNotifyFn(() => {\n          originalQueue.forEach((callback) => {\n            notifyFn(callback);\n          });\n        });\n      });\n    }\n  };\n  return {\n    batch: (callback) => {\n      let result;\n      transactions++;\n      try {\n        result = callback();\n      } finally {\n        transactions--;\n        if (!transactions) {\n          flush();\n        }\n      }\n      return result;\n    },\n    /**\n     * All calls to the wrapped function will be batched.\n     */\n    batchCalls: (callback) => {\n      return (...args) => {\n        schedule(() => {\n          callback(...args);\n        });\n      };\n    },\n    schedule,\n    /**\n     * Use this method to set a custom notify function.\n     * This can be used to for example wrap notifications with `React.act` while running tests.\n     */\n    setNotifyFunction: (fn) => {\n      notifyFn = fn;\n    },\n    /**\n     * Use this method to set a custom function to batch notifications together into a single tick.\n     * By default React Query will use the batch function provided by ReactDOM or React Native.\n     */\n    setBatchNotifyFunction: (fn) => {\n      batchNotifyFn = fn;\n    },\n    setScheduler: (fn) => {\n      scheduleFn = fn;\n    }\n  };\n}\nvar notifyManager = createNotifyManager();\nexport {\n  createNotifyManager,\n  defaultScheduler,\n  notifyManager\n};\n//# sourceMappingURL=notifyManager.js.map","// src/onlineManager.ts\nimport { Subscribable } from \"./subscribable.js\";\nimport { isServer } from \"./utils.js\";\nvar OnlineManager = class extends Subscribable {\n  #online = true;\n  #cleanup;\n  #setup;\n  constructor() {\n    super();\n    this.#setup = (onOnline) => {\n      if (!isServer && window.addEventListener) {\n        const onlineListener = () => onOnline(true);\n        const offlineListener = () => onOnline(false);\n        window.addEventListener(\"online\", onlineListener, false);\n        window.addEventListener(\"offline\", offlineListener, false);\n        return () => {\n          window.removeEventListener(\"online\", onlineListener);\n          window.removeEventListener(\"offline\", offlineListener);\n        };\n      }\n      return;\n    };\n  }\n  onSubscribe() {\n    if (!this.#cleanup) {\n      this.setEventListener(this.#setup);\n    }\n  }\n  onUnsubscribe() {\n    if (!this.hasListeners()) {\n      this.#cleanup?.();\n      this.#cleanup = void 0;\n    }\n  }\n  setEventListener(setup) {\n    this.#setup = setup;\n    this.#cleanup?.();\n    this.#cleanup = setup(this.setOnline.bind(this));\n  }\n  setOnline(online) {\n    const changed = this.#online !== online;\n    if (changed) {\n      this.#online = online;\n      this.listeners.forEach((listener) => {\n        listener(online);\n      });\n    }\n  }\n  isOnline() {\n    return this.#online;\n  }\n};\nvar onlineManager = new OnlineManager();\nexport {\n  OnlineManager,\n  onlineManager\n};\n//# sourceMappingURL=onlineManager.js.map","// src/query.ts\nimport {\n  ensureQueryFn,\n  noop,\n  replaceData,\n  resolveEnabled,\n  resolveStaleTime,\n  skipToken,\n  timeUntilStale\n} from \"./utils.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { canFetch, createRetryer, isCancelledError } from \"./retryer.js\";\nimport { Removable } from \"./removable.js\";\nvar Query = class extends Removable {\n  #initialState;\n  #revertState;\n  #cache;\n  #client;\n  #retryer;\n  #defaultOptions;\n  #abortSignalConsumed;\n  constructor(config) {\n    super();\n    this.#abortSignalConsumed = false;\n    this.#defaultOptions = config.defaultOptions;\n    this.setOptions(config.options);\n    this.observers = [];\n    this.#client = config.client;\n    this.#cache = this.#client.getQueryCache();\n    this.queryKey = config.queryKey;\n    this.queryHash = config.queryHash;\n    this.#initialState = getDefaultState(this.options);\n    this.state = config.state ?? this.#initialState;\n    this.scheduleGc();\n  }\n  get meta() {\n    return this.options.meta;\n  }\n  get promise() {\n    return this.#retryer?.promise;\n  }\n  setOptions(options) {\n    this.options = { ...this.#defaultOptions, ...options };\n    this.updateGcTime(this.options.gcTime);\n  }\n  optionalRemove() {\n    if (!this.observers.length && this.state.fetchStatus === \"idle\") {\n      this.#cache.remove(this);\n    }\n  }\n  setData(newData, options) {\n    const data = replaceData(this.state.data, newData, this.options);\n    this.#dispatch({\n      data,\n      type: \"success\",\n      dataUpdatedAt: options?.updatedAt,\n      manual: options?.manual\n    });\n    return data;\n  }\n  setState(state, setStateOptions) {\n    this.#dispatch({ type: \"setState\", state, setStateOptions });\n  }\n  cancel(options) {\n    const promise = this.#retryer?.promise;\n    this.#retryer?.cancel(options);\n    return promise ? promise.then(noop).catch(noop) : Promise.resolve();\n  }\n  destroy() {\n    super.destroy();\n    this.cancel({ silent: true });\n  }\n  reset() {\n    this.destroy();\n    this.setState(this.#initialState);\n  }\n  isActive() {\n    return this.observers.some(\n      (observer) => resolveEnabled(observer.options.enabled, this) !== false\n    );\n  }\n  isDisabled() {\n    if (this.getObserversCount() > 0) {\n      return !this.isActive();\n    }\n    return this.options.queryFn === skipToken || this.state.dataUpdateCount + this.state.errorUpdateCount === 0;\n  }\n  isStatic() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => resolveStaleTime(observer.options.staleTime, this) === \"static\"\n      );\n    }\n    return false;\n  }\n  isStale() {\n    if (this.getObserversCount() > 0) {\n      return this.observers.some(\n        (observer) => observer.getCurrentResult().isStale\n      );\n    }\n    return this.state.data === void 0 || this.state.isInvalidated;\n  }\n  isStaleByTime(staleTime = 0) {\n    if (this.state.data === void 0) {\n      return true;\n    }\n    if (staleTime === \"static\") {\n      return false;\n    }\n    if (this.state.isInvalidated) {\n      return true;\n    }\n    return !timeUntilStale(this.state.dataUpdatedAt, staleTime);\n  }\n  onFocus() {\n    const observer = this.observers.find((x) => x.shouldFetchOnWindowFocus());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  onOnline() {\n    const observer = this.observers.find((x) => x.shouldFetchOnReconnect());\n    observer?.refetch({ cancelRefetch: false });\n    this.#retryer?.continue();\n  }\n  addObserver(observer) {\n    if (!this.observers.includes(observer)) {\n      this.observers.push(observer);\n      this.clearGcTimeout();\n      this.#cache.notify({ type: \"observerAdded\", query: this, observer });\n    }\n  }\n  removeObserver(observer) {\n    if (this.observers.includes(observer)) {\n      this.observers = this.observers.filter((x) => x !== observer);\n      if (!this.observers.length) {\n        if (this.#retryer) {\n          if (this.#abortSignalConsumed) {\n            this.#retryer.cancel({ revert: true });\n          } else {\n            this.#retryer.cancelRetry();\n          }\n        }\n        this.scheduleGc();\n      }\n      this.#cache.notify({ type: \"observerRemoved\", query: this, observer });\n    }\n  }\n  getObserversCount() {\n    return this.observers.length;\n  }\n  invalidate() {\n    if (!this.state.isInvalidated) {\n      this.#dispatch({ type: \"invalidate\" });\n    }\n  }\n  fetch(options, fetchOptions) {\n    if (this.state.fetchStatus !== \"idle\") {\n      if (this.state.data !== void 0 && fetchOptions?.cancelRefetch) {\n        this.cancel({ silent: true });\n      } else if (this.#retryer) {\n        this.#retryer.continueRetry();\n        return this.#retryer.promise;\n      }\n    }\n    if (options) {\n      this.setOptions(options);\n    }\n    if (!this.options.queryFn) {\n      const observer = this.observers.find((x) => x.options.queryFn);\n      if (observer) {\n        this.setOptions(observer.options);\n      }\n    }\n    if (process.env.NODE_ENV !== \"production\") {\n      if (!Array.isArray(this.options.queryKey)) {\n        console.error(\n          `As of v4, queryKey needs to be an Array. If you are using a string like 'repoData', please change it to an Array, e.g. ['repoData']`\n        );\n      }\n    }\n    const abortController = new AbortController();\n    const addSignalProperty = (object) => {\n      Object.defineProperty(object, \"signal\", {\n        enumerable: true,\n        get: () => {\n          this.#abortSignalConsumed = true;\n          return abortController.signal;\n        }\n      });\n    };\n    const fetchFn = () => {\n      const queryFn = ensureQueryFn(this.options, fetchOptions);\n      const createQueryFnContext = () => {\n        const queryFnContext2 = {\n          client: this.#client,\n          queryKey: this.queryKey,\n          meta: this.meta\n        };\n        addSignalProperty(queryFnContext2);\n        return queryFnContext2;\n      };\n      const queryFnContext = createQueryFnContext();\n      this.#abortSignalConsumed = false;\n      if (this.options.persister) {\n        return this.options.persister(\n          queryFn,\n          queryFnContext,\n          this\n        );\n      }\n      return queryFn(queryFnContext);\n    };\n    const createFetchContext = () => {\n      const context2 = {\n        fetchOptions,\n        options: this.options,\n        queryKey: this.queryKey,\n        client: this.#client,\n        state: this.state,\n        fetchFn\n      };\n      addSignalProperty(context2);\n      return context2;\n    };\n    const context = createFetchContext();\n    this.options.behavior?.onFetch(context, this);\n    this.#revertState = this.state;\n    if (this.state.fetchStatus === \"idle\" || this.state.fetchMeta !== context.fetchOptions?.meta) {\n      this.#dispatch({ type: \"fetch\", meta: context.fetchOptions?.meta });\n    }\n    const onError = (error) => {\n      if (!(isCancelledError(error) && error.silent)) {\n        this.#dispatch({\n          type: \"error\",\n          error\n        });\n      }\n      if (!isCancelledError(error)) {\n        this.#cache.config.onError?.(\n          error,\n          this\n        );\n        this.#cache.config.onSettled?.(\n          this.state.data,\n          error,\n          this\n        );\n      }\n      this.scheduleGc();\n    };\n    this.#retryer = createRetryer({\n      initialPromise: fetchOptions?.initialPromise,\n      fn: context.fetchFn,\n      abort: abortController.abort.bind(abortController),\n      onSuccess: (data) => {\n        if (data === void 0) {\n          if (process.env.NODE_ENV !== \"production\") {\n            console.error(\n              `Query data cannot be undefined. Please make sure to return a value other than undefined from your query function. Affected query key: ${this.queryHash}`\n            );\n          }\n          onError(new Error(`${this.queryHash} data is undefined`));\n          return;\n        }\n        try {\n          this.setData(data);\n        } catch (error) {\n          onError(error);\n          return;\n        }\n        this.#cache.config.onSuccess?.(data, this);\n        this.#cache.config.onSettled?.(\n          data,\n          this.state.error,\n          this\n        );\n        this.scheduleGc();\n      },\n      onError,\n      onFail: (failureCount, error) => {\n        this.#dispatch({ type: \"failed\", failureCount, error });\n      },\n      onPause: () => {\n        this.#dispatch({ type: \"pause\" });\n      },\n      onContinue: () => {\n        this.#dispatch({ type: \"continue\" });\n      },\n      retry: context.options.retry,\n      retryDelay: context.options.retryDelay,\n      networkMode: context.options.networkMode,\n      canRun: () => true\n    });\n    return this.#retryer.start();\n  }\n  #dispatch(action) {\n    const reducer = (state) => {\n      switch (action.type) {\n        case \"failed\":\n          return {\n            ...state,\n            fetchFailureCount: action.failureCount,\n            fetchFailureReason: action.error\n          };\n        case \"pause\":\n          return {\n            ...state,\n            fetchStatus: \"paused\"\n          };\n        case \"continue\":\n          return {\n            ...state,\n            fetchStatus: \"fetching\"\n          };\n        case \"fetch\":\n          return {\n            ...state,\n            ...fetchState(state.data, this.options),\n            fetchMeta: action.meta ?? null\n          };\n        case \"success\":\n          this.#revertState = void 0;\n          return {\n            ...state,\n            data: action.data,\n            dataUpdateCount: state.dataUpdateCount + 1,\n            dataUpdatedAt: action.dataUpdatedAt ?? Date.now(),\n            error: null,\n            isInvalidated: false,\n            status: \"success\",\n            ...!action.manual && {\n              fetchStatus: \"idle\",\n              fetchFailureCount: 0,\n              fetchFailureReason: null\n            }\n          };\n        case \"error\":\n          const error = action.error;\n          if (isCancelledError(error) && error.revert && this.#revertState) {\n            return { ...this.#revertState, fetchStatus: \"idle\" };\n          }\n          return {\n            ...state,\n            error,\n            errorUpdateCount: state.errorUpdateCount + 1,\n            errorUpdatedAt: Date.now(),\n            fetchFailureCount: state.fetchFailureCount + 1,\n            fetchFailureReason: error,\n            fetchStatus: \"idle\",\n            status: \"error\"\n          };\n        case \"invalidate\":\n          return {\n            ...state,\n            isInvalidated: true\n          };\n        case \"setState\":\n          return {\n            ...state,\n            ...action.state\n          };\n      }\n    };\n    this.state = reducer(this.state);\n    notifyManager.batch(() => {\n      this.observers.forEach((observer) => {\n        observer.onQueryUpdate();\n      });\n      this.#cache.notify({ query: this, type: \"updated\", action });\n    });\n  }\n};\nfunction fetchState(data, options) {\n  return {\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchStatus: canFetch(options.networkMode) ? \"fetching\" : \"paused\",\n    ...data === void 0 && {\n      error: null,\n      status: \"pending\"\n    }\n  };\n}\nfunction getDefaultState(options) {\n  const data = typeof options.initialData === \"function\" ? options.initialData() : options.initialData;\n  const hasData = data !== void 0;\n  const initialDataUpdatedAt = hasData ? typeof options.initialDataUpdatedAt === \"function\" ? options.initialDataUpdatedAt() : options.initialDataUpdatedAt : 0;\n  return {\n    data,\n    dataUpdateCount: 0,\n    dataUpdatedAt: hasData ? initialDataUpdatedAt ?? Date.now() : 0,\n    error: null,\n    errorUpdateCount: 0,\n    errorUpdatedAt: 0,\n    fetchFailureCount: 0,\n    fetchFailureReason: null,\n    fetchMeta: null,\n    isInvalidated: false,\n    status: hasData ? \"success\" : \"pending\",\n    fetchStatus: \"idle\"\n  };\n}\nexport {\n  Query,\n  fetchState\n};\n//# sourceMappingURL=query.js.map","// src/queryCache.ts\nimport { hashQueryKeyByOptions, matchQuery } from \"./utils.js\";\nimport { Query } from \"./query.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar QueryCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#queries = /* @__PURE__ */ new Map();\n  }\n  #queries;\n  build(client, options, state) {\n    const queryKey = options.queryKey;\n    const queryHash = options.queryHash ?? hashQueryKeyByOptions(queryKey, options);\n    let query = this.get(queryHash);\n    if (!query) {\n      query = new Query({\n        client,\n        queryKey,\n        queryHash,\n        options: client.defaultQueryOptions(options),\n        state,\n        defaultOptions: client.getQueryDefaults(queryKey)\n      });\n      this.add(query);\n    }\n    return query;\n  }\n  add(query) {\n    if (!this.#queries.has(query.queryHash)) {\n      this.#queries.set(query.queryHash, query);\n      this.notify({\n        type: \"added\",\n        query\n      });\n    }\n  }\n  remove(query) {\n    const queryInMap = this.#queries.get(query.queryHash);\n    if (queryInMap) {\n      query.destroy();\n      if (queryInMap === query) {\n        this.#queries.delete(query.queryHash);\n      }\n      this.notify({ type: \"removed\", query });\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        this.remove(query);\n      });\n    });\n  }\n  get(queryHash) {\n    return this.#queries.get(queryHash);\n  }\n  getAll() {\n    return [...this.#queries.values()];\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (query) => matchQuery(defaultedFilters, query)\n    );\n  }\n  findAll(filters = {}) {\n    const queries = this.getAll();\n    return Object.keys(filters).length > 0 ? queries.filter((query) => matchQuery(filters, query)) : queries;\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  onFocus() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onFocus();\n      });\n    });\n  }\n  onOnline() {\n    notifyManager.batch(() => {\n      this.getAll().forEach((query) => {\n        query.onOnline();\n      });\n    });\n  }\n};\nexport {\n  QueryCache\n};\n//# sourceMappingURL=queryCache.js.map","// src/mutationCache.ts\nimport { notifyManager } from \"./notifyManager.js\";\nimport { Mutation } from \"./mutation.js\";\nimport { matchMutation, noop } from \"./utils.js\";\nimport { Subscribable } from \"./subscribable.js\";\nvar MutationCache = class extends Subscribable {\n  constructor(config = {}) {\n    super();\n    this.config = config;\n    this.#mutations = /* @__PURE__ */ new Set();\n    this.#scopes = /* @__PURE__ */ new Map();\n    this.#mutationId = 0;\n  }\n  #mutations;\n  #scopes;\n  #mutationId;\n  build(client, options, state) {\n    const mutation = new Mutation({\n      mutationCache: this,\n      mutationId: ++this.#mutationId,\n      options: client.defaultMutationOptions(options),\n      state\n    });\n    this.add(mutation);\n    return mutation;\n  }\n  add(mutation) {\n    this.#mutations.add(mutation);\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const scopedMutations = this.#scopes.get(scope);\n      if (scopedMutations) {\n        scopedMutations.push(mutation);\n      } else {\n        this.#scopes.set(scope, [mutation]);\n      }\n    }\n    this.notify({ type: \"added\", mutation });\n  }\n  remove(mutation) {\n    if (this.#mutations.delete(mutation)) {\n      const scope = scopeFor(mutation);\n      if (typeof scope === \"string\") {\n        const scopedMutations = this.#scopes.get(scope);\n        if (scopedMutations) {\n          if (scopedMutations.length > 1) {\n            const index = scopedMutations.indexOf(mutation);\n            if (index !== -1) {\n              scopedMutations.splice(index, 1);\n            }\n          } else if (scopedMutations[0] === mutation) {\n            this.#scopes.delete(scope);\n          }\n        }\n      }\n    }\n    this.notify({ type: \"removed\", mutation });\n  }\n  canRun(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const mutationsWithSameScope = this.#scopes.get(scope);\n      const firstPendingMutation = mutationsWithSameScope?.find(\n        (m) => m.state.status === \"pending\"\n      );\n      return !firstPendingMutation || firstPendingMutation === mutation;\n    } else {\n      return true;\n    }\n  }\n  runNext(mutation) {\n    const scope = scopeFor(mutation);\n    if (typeof scope === \"string\") {\n      const foundMutation = this.#scopes.get(scope)?.find((m) => m !== mutation && m.state.isPaused);\n      return foundMutation?.continue() ?? Promise.resolve();\n    } else {\n      return Promise.resolve();\n    }\n  }\n  clear() {\n    notifyManager.batch(() => {\n      this.#mutations.forEach((mutation) => {\n        this.notify({ type: \"removed\", mutation });\n      });\n      this.#mutations.clear();\n      this.#scopes.clear();\n    });\n  }\n  getAll() {\n    return Array.from(this.#mutations);\n  }\n  find(filters) {\n    const defaultedFilters = { exact: true, ...filters };\n    return this.getAll().find(\n      (mutation) => matchMutation(defaultedFilters, mutation)\n    );\n  }\n  findAll(filters = {}) {\n    return this.getAll().filter((mutation) => matchMutation(filters, mutation));\n  }\n  notify(event) {\n    notifyManager.batch(() => {\n      this.listeners.forEach((listener) => {\n        listener(event);\n      });\n    });\n  }\n  resumePausedMutations() {\n    const pausedMutations = this.getAll().filter((x) => x.state.isPaused);\n    return notifyManager.batch(\n      () => Promise.all(\n        pausedMutations.map((mutation) => mutation.continue().catch(noop))\n      )\n    );\n  }\n};\nfunction scopeFor(mutation) {\n  return mutation.options.scope?.id;\n}\nexport {\n  MutationCache\n};\n//# sourceMappingURL=mutationCache.js.map","// src/infiniteQueryBehavior.ts\nimport { addToEnd, addToStart, ensureQueryFn } from \"./utils.js\";\nfunction infiniteQueryBehavior(pages) {\n  return {\n    onFetch: (context, query) => {\n      const options = context.options;\n      const direction = context.fetchOptions?.meta?.fetchMore?.direction;\n      const oldPages = context.state.data?.pages || [];\n      const oldPageParams = context.state.data?.pageParams || [];\n      let result = { pages: [], pageParams: [] };\n      let currentPage = 0;\n      const fetchFn = async () => {\n        let cancelled = false;\n        const addSignalProperty = (object) => {\n          Object.defineProperty(object, \"signal\", {\n            enumerable: true,\n            get: () => {\n              if (context.signal.aborted) {\n                cancelled = true;\n              } else {\n                context.signal.addEventListener(\"abort\", () => {\n                  cancelled = true;\n                });\n              }\n              return context.signal;\n            }\n          });\n        };\n        const queryFn = ensureQueryFn(context.options, context.fetchOptions);\n        const fetchPage = async (data, param, previous) => {\n          if (cancelled) {\n            return Promise.reject();\n          }\n          if (param == null && data.pages.length) {\n            return Promise.resolve(data);\n          }\n          const createQueryFnContext = () => {\n            const queryFnContext2 = {\n              client: context.client,\n              queryKey: context.queryKey,\n              pageParam: param,\n              direction: previous ? \"backward\" : \"forward\",\n              meta: context.options.meta\n            };\n            addSignalProperty(queryFnContext2);\n            return queryFnContext2;\n          };\n          const queryFnContext = createQueryFnContext();\n          const page = await queryFn(queryFnContext);\n          const { maxPages } = context.options;\n          const addTo = previous ? addToStart : addToEnd;\n          return {\n            pages: addTo(data.pages, page, maxPages),\n            pageParams: addTo(data.pageParams, param, maxPages)\n          };\n        };\n        if (direction && oldPages.length) {\n          const previous = direction === \"backward\";\n          const pageParamFn = previous ? getPreviousPageParam : getNextPageParam;\n          const oldData = {\n            pages: oldPages,\n            pageParams: oldPageParams\n          };\n          const param = pageParamFn(options, oldData);\n          result = await fetchPage(oldData, param, previous);\n        } else {\n          const remainingPages = pages ?? oldPages.length;\n          do {\n            const param = currentPage === 0 ? oldPageParams[0] ?? options.initialPageParam : getNextPageParam(options, result);\n            if (currentPage > 0 && param == null) {\n              break;\n            }\n            result = await fetchPage(result, param);\n            currentPage++;\n          } while (currentPage < remainingPages);\n        }\n        return result;\n      };\n      if (context.options.persister) {\n        context.fetchFn = () => {\n          return context.options.persister?.(\n            fetchFn,\n            {\n              client: context.client,\n              queryKey: context.queryKey,\n              meta: context.options.meta,\n              signal: context.signal\n            },\n            query\n          );\n        };\n      } else {\n        context.fetchFn = fetchFn;\n      }\n    }\n  };\n}\nfunction getNextPageParam(options, { pages, pageParams }) {\n  const lastIndex = pages.length - 1;\n  return pages.length > 0 ? options.getNextPageParam(\n    pages[lastIndex],\n    pages,\n    pageParams[lastIndex],\n    pageParams\n  ) : void 0;\n}\nfunction getPreviousPageParam(options, { pages, pageParams }) {\n  return pages.length > 0 ? options.getPreviousPageParam?.(pages[0], pages, pageParams[0], pageParams) : void 0;\n}\nfunction hasNextPage(options, data) {\n  if (!data) return false;\n  return getNextPageParam(options, data) != null;\n}\nfunction hasPreviousPage(options, data) {\n  if (!data || !options.getPreviousPageParam) return false;\n  return getPreviousPageParam(options, data) != null;\n}\nexport {\n  hasNextPage,\n  hasPreviousPage,\n  infiniteQueryBehavior\n};\n//# sourceMappingURL=infiniteQueryBehavior.js.map","// src/queryClient.ts\nimport {\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  noop,\n  partialMatchKey,\n  resolveStaleTime,\n  skipToken\n} from \"./utils.js\";\nimport { QueryCache } from \"./queryCache.js\";\nimport { MutationCache } from \"./mutationCache.js\";\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { notifyManager } from \"./notifyManager.js\";\nimport { infiniteQueryBehavior } from \"./infiniteQueryBehavior.js\";\nvar QueryClient = class {\n  #queryCache;\n  #mutationCache;\n  #defaultOptions;\n  #queryDefaults;\n  #mutationDefaults;\n  #mountCount;\n  #unsubscribeFocus;\n  #unsubscribeOnline;\n  constructor(config = {}) {\n    this.#queryCache = config.queryCache || new QueryCache();\n    this.#mutationCache = config.mutationCache || new MutationCache();\n    this.#defaultOptions = config.defaultOptions || {};\n    this.#queryDefaults = /* @__PURE__ */ new Map();\n    this.#mutationDefaults = /* @__PURE__ */ new Map();\n    this.#mountCount = 0;\n  }\n  mount() {\n    this.#mountCount++;\n    if (this.#mountCount !== 1) return;\n    this.#unsubscribeFocus = focusManager.subscribe(async (focused) => {\n      if (focused) {\n        await this.resumePausedMutations();\n        this.#queryCache.onFocus();\n      }\n    });\n    this.#unsubscribeOnline = onlineManager.subscribe(async (online) => {\n      if (online) {\n        await this.resumePausedMutations();\n        this.#queryCache.onOnline();\n      }\n    });\n  }\n  unmount() {\n    this.#mountCount--;\n    if (this.#mountCount !== 0) return;\n    this.#unsubscribeFocus?.();\n    this.#unsubscribeFocus = void 0;\n    this.#unsubscribeOnline?.();\n    this.#unsubscribeOnline = void 0;\n  }\n  isFetching(filters) {\n    return this.#queryCache.findAll({ ...filters, fetchStatus: \"fetching\" }).length;\n  }\n  isMutating(filters) {\n    return this.#mutationCache.findAll({ ...filters, status: \"pending\" }).length;\n  }\n  /**\n   * Imperative (non-reactive) way to retrieve data for a QueryKey.\n   * Should only be used in callbacks or functions where reading the latest data is necessary, e.g. for optimistic updates.\n   *\n   * Hint: Do not use this function inside a component, because it won't receive updates.\n   * Use `useQuery` to create a `QueryObserver` that subscribes to changes.\n   */\n  getQueryData(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(options.queryHash)?.state.data;\n  }\n  ensureQueryData(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    const query = this.#queryCache.build(this, defaultedOptions);\n    const cachedData = query.state.data;\n    if (cachedData === void 0) {\n      return this.fetchQuery(options);\n    }\n    if (options.revalidateIfStale && query.isStaleByTime(resolveStaleTime(defaultedOptions.staleTime, query))) {\n      void this.prefetchQuery(defaultedOptions);\n    }\n    return Promise.resolve(cachedData);\n  }\n  getQueriesData(filters) {\n    return this.#queryCache.findAll(filters).map(({ queryKey, state }) => {\n      const data = state.data;\n      return [queryKey, data];\n    });\n  }\n  setQueryData(queryKey, updater, options) {\n    const defaultedOptions = this.defaultQueryOptions({ queryKey });\n    const query = this.#queryCache.get(\n      defaultedOptions.queryHash\n    );\n    const prevData = query?.state.data;\n    const data = functionalUpdate(updater, prevData);\n    if (data === void 0) {\n      return void 0;\n    }\n    return this.#queryCache.build(this, defaultedOptions).setData(data, { ...options, manual: true });\n  }\n  setQueriesData(filters, updater, options) {\n    return notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map(({ queryKey }) => [\n        queryKey,\n        this.setQueryData(queryKey, updater, options)\n      ])\n    );\n  }\n  getQueryState(queryKey) {\n    const options = this.defaultQueryOptions({ queryKey });\n    return this.#queryCache.get(\n      options.queryHash\n    )?.state;\n  }\n  removeQueries(filters) {\n    const queryCache = this.#queryCache;\n    notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        queryCache.remove(query);\n      });\n    });\n  }\n  resetQueries(filters, options) {\n    const queryCache = this.#queryCache;\n    return notifyManager.batch(() => {\n      queryCache.findAll(filters).forEach((query) => {\n        query.reset();\n      });\n      return this.refetchQueries(\n        {\n          type: \"active\",\n          ...filters\n        },\n        options\n      );\n    });\n  }\n  cancelQueries(filters, cancelOptions = {}) {\n    const defaultedCancelOptions = { revert: true, ...cancelOptions };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).map((query) => query.cancel(defaultedCancelOptions))\n    );\n    return Promise.all(promises).then(noop).catch(noop);\n  }\n  invalidateQueries(filters, options = {}) {\n    return notifyManager.batch(() => {\n      this.#queryCache.findAll(filters).forEach((query) => {\n        query.invalidate();\n      });\n      if (filters?.refetchType === \"none\") {\n        return Promise.resolve();\n      }\n      return this.refetchQueries(\n        {\n          ...filters,\n          type: filters?.refetchType ?? filters?.type ?? \"active\"\n        },\n        options\n      );\n    });\n  }\n  refetchQueries(filters, options = {}) {\n    const fetchOptions = {\n      ...options,\n      cancelRefetch: options.cancelRefetch ?? true\n    };\n    const promises = notifyManager.batch(\n      () => this.#queryCache.findAll(filters).filter((query) => !query.isDisabled() && !query.isStatic()).map((query) => {\n        let promise = query.fetch(void 0, fetchOptions);\n        if (!fetchOptions.throwOnError) {\n          promise = promise.catch(noop);\n        }\n        return query.state.fetchStatus === \"paused\" ? Promise.resolve() : promise;\n      })\n    );\n    return Promise.all(promises).then(noop);\n  }\n  fetchQuery(options) {\n    const defaultedOptions = this.defaultQueryOptions(options);\n    if (defaultedOptions.retry === void 0) {\n      defaultedOptions.retry = false;\n    }\n    const query = this.#queryCache.build(this, defaultedOptions);\n    return query.isStaleByTime(\n      resolveStaleTime(defaultedOptions.staleTime, query)\n    ) ? query.fetch(defaultedOptions) : Promise.resolve(query.state.data);\n  }\n  prefetchQuery(options) {\n    return this.fetchQuery(options).then(noop).catch(noop);\n  }\n  fetchInfiniteQuery(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.fetchQuery(options);\n  }\n  prefetchInfiniteQuery(options) {\n    return this.fetchInfiniteQuery(options).then(noop).catch(noop);\n  }\n  ensureInfiniteQueryData(options) {\n    options.behavior = infiniteQueryBehavior(options.pages);\n    return this.ensureQueryData(options);\n  }\n  resumePausedMutations() {\n    if (onlineManager.isOnline()) {\n      return this.#mutationCache.resumePausedMutations();\n    }\n    return Promise.resolve();\n  }\n  getQueryCache() {\n    return this.#queryCache;\n  }\n  getMutationCache() {\n    return this.#mutationCache;\n  }\n  getDefaultOptions() {\n    return this.#defaultOptions;\n  }\n  setDefaultOptions(options) {\n    this.#defaultOptions = options;\n  }\n  setQueryDefaults(queryKey, options) {\n    this.#queryDefaults.set(hashKey(queryKey), {\n      queryKey,\n      defaultOptions: options\n    });\n  }\n  getQueryDefaults(queryKey) {\n    const defaults = [...this.#queryDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(queryKey, queryDefault.queryKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  setMutationDefaults(mutationKey, options) {\n    this.#mutationDefaults.set(hashKey(mutationKey), {\n      mutationKey,\n      defaultOptions: options\n    });\n  }\n  getMutationDefaults(mutationKey) {\n    const defaults = [...this.#mutationDefaults.values()];\n    const result = {};\n    defaults.forEach((queryDefault) => {\n      if (partialMatchKey(mutationKey, queryDefault.mutationKey)) {\n        Object.assign(result, queryDefault.defaultOptions);\n      }\n    });\n    return result;\n  }\n  defaultQueryOptions(options) {\n    if (options._defaulted) {\n      return options;\n    }\n    const defaultedOptions = {\n      ...this.#defaultOptions.queries,\n      ...this.getQueryDefaults(options.queryKey),\n      ...options,\n      _defaulted: true\n    };\n    if (!defaultedOptions.queryHash) {\n      defaultedOptions.queryHash = hashQueryKeyByOptions(\n        defaultedOptions.queryKey,\n        defaultedOptions\n      );\n    }\n    if (defaultedOptions.refetchOnReconnect === void 0) {\n      defaultedOptions.refetchOnReconnect = defaultedOptions.networkMode !== \"always\";\n    }\n    if (defaultedOptions.throwOnError === void 0) {\n      defaultedOptions.throwOnError = !!defaultedOptions.suspense;\n    }\n    if (!defaultedOptions.networkMode && defaultedOptions.persister) {\n      defaultedOptions.networkMode = \"offlineFirst\";\n    }\n    if (defaultedOptions.queryFn === skipToken) {\n      defaultedOptions.enabled = false;\n    }\n    return defaultedOptions;\n  }\n  defaultMutationOptions(options) {\n    if (options?._defaulted) {\n      return options;\n    }\n    return {\n      ...this.#defaultOptions.mutations,\n      ...options?.mutationKey && this.getMutationDefaults(options.mutationKey),\n      ...options,\n      _defaulted: true\n    };\n  }\n  clear() {\n    this.#queryCache.clear();\n    this.#mutationCache.clear();\n  }\n};\nexport {\n  QueryClient\n};\n//# sourceMappingURL=queryClient.js.map","// src/removable.ts\nimport { isServer, isValidTimeout } from \"./utils.js\";\nvar Removable = class {\n  #gcTimeout;\n  destroy() {\n    this.clearGcTimeout();\n  }\n  scheduleGc() {\n    this.clearGcTimeout();\n    if (isValidTimeout(this.gcTime)) {\n      this.#gcTimeout = setTimeout(() => {\n        this.optionalRemove();\n      }, this.gcTime);\n    }\n  }\n  updateGcTime(newGcTime) {\n    this.gcTime = Math.max(\n      this.gcTime || 0,\n      newGcTime ?? (isServer ? Infinity : 5 * 60 * 1e3)\n    );\n  }\n  clearGcTimeout() {\n    if (this.#gcTimeout) {\n      clearTimeout(this.#gcTimeout);\n      this.#gcTimeout = void 0;\n    }\n  }\n};\nexport {\n  Removable\n};\n//# sourceMappingURL=removable.js.map","// src/retryer.ts\nimport { focusManager } from \"./focusManager.js\";\nimport { onlineManager } from \"./onlineManager.js\";\nimport { pendingThenable } from \"./thenable.js\";\nimport { isServer, sleep } from \"./utils.js\";\nfunction defaultRetryDelay(failureCount) {\n  return Math.min(1e3 * 2 ** failureCount, 3e4);\n}\nfunction canFetch(networkMode) {\n  return (networkMode ?? \"online\") === \"online\" ? onlineManager.isOnline() : true;\n}\nvar CancelledError = class extends Error {\n  constructor(options) {\n    super(\"CancelledError\");\n    this.revert = options?.revert;\n    this.silent = options?.silent;\n  }\n};\nfunction isCancelledError(value) {\n  return value instanceof CancelledError;\n}\nfunction createRetryer(config) {\n  let isRetryCancelled = false;\n  let failureCount = 0;\n  let isResolved = false;\n  let continueFn;\n  const thenable = pendingThenable();\n  const cancel = (cancelOptions) => {\n    if (!isResolved) {\n      reject(new CancelledError(cancelOptions));\n      config.abort?.();\n    }\n  };\n  const cancelRetry = () => {\n    isRetryCancelled = true;\n  };\n  const continueRetry = () => {\n    isRetryCancelled = false;\n  };\n  const canContinue = () => focusManager.isFocused() && (config.networkMode === \"always\" || onlineManager.isOnline()) && config.canRun();\n  const canStart = () => canFetch(config.networkMode) && config.canRun();\n  const resolve = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onSuccess?.(value);\n      continueFn?.();\n      thenable.resolve(value);\n    }\n  };\n  const reject = (value) => {\n    if (!isResolved) {\n      isResolved = true;\n      config.onError?.(value);\n      continueFn?.();\n      thenable.reject(value);\n    }\n  };\n  const pause = () => {\n    return new Promise((continueResolve) => {\n      continueFn = (value) => {\n        if (isResolved || canContinue()) {\n          continueResolve(value);\n        }\n      };\n      config.onPause?.();\n    }).then(() => {\n      continueFn = void 0;\n      if (!isResolved) {\n        config.onContinue?.();\n      }\n    });\n  };\n  const run = () => {\n    if (isResolved) {\n      return;\n    }\n    let promiseOrValue;\n    const initialPromise = failureCount === 0 ? config.initialPromise : void 0;\n    try {\n      promiseOrValue = initialPromise ?? config.fn();\n    } catch (error) {\n      promiseOrValue = Promise.reject(error);\n    }\n    Promise.resolve(promiseOrValue).then(resolve).catch((error) => {\n      if (isResolved) {\n        return;\n      }\n      const retry = config.retry ?? (isServer ? 0 : 3);\n      const retryDelay = config.retryDelay ?? defaultRetryDelay;\n      const delay = typeof retryDelay === \"function\" ? retryDelay(failureCount, error) : retryDelay;\n      const shouldRetry = retry === true || typeof retry === \"number\" && failureCount < retry || typeof retry === \"function\" && retry(failureCount, error);\n      if (isRetryCancelled || !shouldRetry) {\n        reject(error);\n        return;\n      }\n      failureCount++;\n      config.onFail?.(failureCount, error);\n      sleep(delay).then(() => {\n        return canContinue() ? void 0 : pause();\n      }).then(() => {\n        if (isRetryCancelled) {\n          reject(error);\n        } else {\n          run();\n        }\n      });\n    });\n  };\n  return {\n    promise: thenable,\n    cancel,\n    continue: () => {\n      continueFn?.();\n      return thenable;\n    },\n    cancelRetry,\n    continueRetry,\n    canStart,\n    start: () => {\n      if (canStart()) {\n        run();\n      } else {\n        pause().then(run);\n      }\n      return thenable;\n    }\n  };\n}\nexport {\n  CancelledError,\n  canFetch,\n  createRetryer,\n  isCancelledError\n};\n//# sourceMappingURL=retryer.js.map","// src/subscribable.ts\nvar Subscribable = class {\n  constructor() {\n    this.listeners = /* @__PURE__ */ new Set();\n    this.subscribe = this.subscribe.bind(this);\n  }\n  subscribe(listener) {\n    this.listeners.add(listener);\n    this.onSubscribe();\n    return () => {\n      this.listeners.delete(listener);\n      this.onUnsubscribe();\n    };\n  }\n  hasListeners() {\n    return this.listeners.size > 0;\n  }\n  onSubscribe() {\n  }\n  onUnsubscribe() {\n  }\n};\nexport {\n  Subscribable\n};\n//# sourceMappingURL=subscribable.js.map","// src/thenable.ts\nimport { noop } from \"./utils.js\";\nfunction pendingThenable() {\n  let resolve;\n  let reject;\n  const thenable = new Promise((_resolve, _reject) => {\n    resolve = _resolve;\n    reject = _reject;\n  });\n  thenable.status = \"pending\";\n  thenable.catch(() => {\n  });\n  function finalize(data) {\n    Object.assign(thenable, data);\n    delete thenable.resolve;\n    delete thenable.reject;\n  }\n  thenable.resolve = (value) => {\n    finalize({\n      status: \"fulfilled\",\n      value\n    });\n    resolve(value);\n  };\n  thenable.reject = (reason) => {\n    finalize({\n      status: \"rejected\",\n      reason\n    });\n    reject(reason);\n  };\n  return thenable;\n}\nfunction tryResolveSync(promise) {\n  let data;\n  promise.then((result) => {\n    data = result;\n    return result;\n  }, noop)?.catch(noop);\n  if (data !== void 0) {\n    return { data };\n  }\n  return void 0;\n}\nexport {\n  pendingThenable,\n  tryResolveSync\n};\n//# sourceMappingURL=thenable.js.map","// src/utils.ts\nvar isServer = typeof window === \"undefined\" || \"Deno\" in globalThis;\nfunction noop() {\n}\nfunction functionalUpdate(updater, input) {\n  return typeof updater === \"function\" ? updater(input) : updater;\n}\nfunction isValidTimeout(value) {\n  return typeof value === \"number\" && value >= 0 && value !== Infinity;\n}\nfunction timeUntilStale(updatedAt, staleTime) {\n  return Math.max(updatedAt + (staleTime || 0) - Date.now(), 0);\n}\nfunction resolveStaleTime(staleTime, query) {\n  return typeof staleTime === \"function\" ? staleTime(query) : staleTime;\n}\nfunction resolveEnabled(enabled, query) {\n  return typeof enabled === \"function\" ? enabled(query) : enabled;\n}\nfunction matchQuery(filters, query) {\n  const {\n    type = \"all\",\n    exact,\n    fetchStatus,\n    predicate,\n    queryKey,\n    stale\n  } = filters;\n  if (queryKey) {\n    if (exact) {\n      if (query.queryHash !== hashQueryKeyByOptions(queryKey, query.options)) {\n        return false;\n      }\n    } else if (!partialMatchKey(query.queryKey, queryKey)) {\n      return false;\n    }\n  }\n  if (type !== \"all\") {\n    const isActive = query.isActive();\n    if (type === \"active\" && !isActive) {\n      return false;\n    }\n    if (type === \"inactive\" && isActive) {\n      return false;\n    }\n  }\n  if (typeof stale === \"boolean\" && query.isStale() !== stale) {\n    return false;\n  }\n  if (fetchStatus && fetchStatus !== query.state.fetchStatus) {\n    return false;\n  }\n  if (predicate && !predicate(query)) {\n    return false;\n  }\n  return true;\n}\nfunction matchMutation(filters, mutation) {\n  const { exact, status, predicate, mutationKey } = filters;\n  if (mutationKey) {\n    if (!mutation.options.mutationKey) {\n      return false;\n    }\n    if (exact) {\n      if (hashKey(mutation.options.mutationKey) !== hashKey(mutationKey)) {\n        return false;\n      }\n    } else if (!partialMatchKey(mutation.options.mutationKey, mutationKey)) {\n      return false;\n    }\n  }\n  if (status && mutation.state.status !== status) {\n    return false;\n  }\n  if (predicate && !predicate(mutation)) {\n    return false;\n  }\n  return true;\n}\nfunction hashQueryKeyByOptions(queryKey, options) {\n  const hashFn = options?.queryKeyHashFn || hashKey;\n  return hashFn(queryKey);\n}\nfunction hashKey(queryKey) {\n  return JSON.stringify(\n    queryKey,\n    (_, val) => isPlainObject(val) ? Object.keys(val).sort().reduce((result, key) => {\n      result[key] = val[key];\n      return result;\n    }, {}) : val\n  );\n}\nfunction partialMatchKey(a, b) {\n  if (a === b) {\n    return true;\n  }\n  if (typeof a !== typeof b) {\n    return false;\n  }\n  if (a && b && typeof a === \"object\" && typeof b === \"object\") {\n    return Object.keys(b).every((key) => partialMatchKey(a[key], b[key]));\n  }\n  return false;\n}\nfunction replaceEqualDeep(a, b) {\n  if (a === b) {\n    return a;\n  }\n  const array = isPlainArray(a) && isPlainArray(b);\n  if (array || isPlainObject(a) && isPlainObject(b)) {\n    const aItems = array ? a : Object.keys(a);\n    const aSize = aItems.length;\n    const bItems = array ? b : Object.keys(b);\n    const bSize = bItems.length;\n    const copy = array ? [] : {};\n    const aItemsSet = new Set(aItems);\n    let equalItems = 0;\n    for (let i = 0; i < bSize; i++) {\n      const key = array ? i : bItems[i];\n      if ((!array && aItemsSet.has(key) || array) && a[key] === void 0 && b[key] === void 0) {\n        copy[key] = void 0;\n        equalItems++;\n      } else {\n        copy[key] = replaceEqualDeep(a[key], b[key]);\n        if (copy[key] === a[key] && a[key] !== void 0) {\n          equalItems++;\n        }\n      }\n    }\n    return aSize === bSize && equalItems === aSize ? a : copy;\n  }\n  return b;\n}\nfunction shallowEqualObjects(a, b) {\n  if (!b || Object.keys(a).length !== Object.keys(b).length) {\n    return false;\n  }\n  for (const key in a) {\n    if (a[key] !== b[key]) {\n      return false;\n    }\n  }\n  return true;\n}\nfunction isPlainArray(value) {\n  return Array.isArray(value) && value.length === Object.keys(value).length;\n}\nfunction isPlainObject(o) {\n  if (!hasObjectPrototype(o)) {\n    return false;\n  }\n  const ctor = o.constructor;\n  if (ctor === void 0) {\n    return true;\n  }\n  const prot = ctor.prototype;\n  if (!hasObjectPrototype(prot)) {\n    return false;\n  }\n  if (!prot.hasOwnProperty(\"isPrototypeOf\")) {\n    return false;\n  }\n  if (Object.getPrototypeOf(o) !== Object.prototype) {\n    return false;\n  }\n  return true;\n}\nfunction hasObjectPrototype(o) {\n  return Object.prototype.toString.call(o) === \"[object Object]\";\n}\nfunction sleep(timeout) {\n  return new Promise((resolve) => {\n    setTimeout(resolve, timeout);\n  });\n}\nfunction replaceData(prevData, data, options) {\n  if (typeof options.structuralSharing === \"function\") {\n    return options.structuralSharing(prevData, data);\n  } else if (options.structuralSharing !== false) {\n    if (process.env.NODE_ENV !== \"production\") {\n      try {\n        return replaceEqualDeep(prevData, data);\n      } catch (error) {\n        console.error(\n          `Structural sharing requires data to be JSON serializable. To fix this, turn off structuralSharing or return JSON-serializable data from your queryFn. [${options.queryHash}]: ${error}`\n        );\n        throw error;\n      }\n    }\n    return replaceEqualDeep(prevData, data);\n  }\n  return data;\n}\nfunction keepPreviousData(previousData) {\n  return previousData;\n}\nfunction addToEnd(items, item, max = 0) {\n  const newItems = [...items, item];\n  return max && newItems.length > max ? newItems.slice(1) : newItems;\n}\nfunction addToStart(items, item, max = 0) {\n  const newItems = [item, ...items];\n  return max && newItems.length > max ? newItems.slice(0, -1) : newItems;\n}\nvar skipToken = Symbol();\nfunction ensureQueryFn(options, fetchOptions) {\n  if (process.env.NODE_ENV !== \"production\") {\n    if (options.queryFn === skipToken) {\n      console.error(\n        `Attempted to invoke queryFn when set to skipToken. This is likely a configuration error. Query hash: '${options.queryHash}'`\n      );\n    }\n  }\n  if (!options.queryFn && fetchOptions?.initialPromise) {\n    return () => fetchOptions.initialPromise;\n  }\n  if (!options.queryFn || options.queryFn === skipToken) {\n    return () => Promise.reject(new Error(`Missing queryFn: '${options.queryHash}'`));\n  }\n  return options.queryFn;\n}\nfunction shouldThrowError(throwOnError, params) {\n  if (typeof throwOnError === \"function\") {\n    return throwOnError(...params);\n  }\n  return !!throwOnError;\n}\nexport {\n  addToEnd,\n  addToStart,\n  ensureQueryFn,\n  functionalUpdate,\n  hashKey,\n  hashQueryKeyByOptions,\n  isPlainArray,\n  isPlainObject,\n  isServer,\n  isValidTimeout,\n  keepPreviousData,\n  matchMutation,\n  matchQuery,\n  noop,\n  partialMatchKey,\n  replaceData,\n  replaceEqualDeep,\n  resolveEnabled,\n  resolveStaleTime,\n  shallowEqualObjects,\n  shouldThrowError,\n  skipToken,\n  sleep,\n  timeUntilStale\n};\n//# sourceMappingURL=utils.js.map","'use client'\nimport * as React from 'react'\n\nimport type { QueryClient } from '@tanstack/query-core'\n\nexport const QueryClientContext = React.createContext<QueryClient | undefined>(\n  undefined,\n)\n\nexport const useQueryClient = (queryClient?: QueryClient) => {\n  const client = React.useContext(QueryClientContext)\n\n  if (queryClient) {\n    return queryClient\n  }\n\n  if (!client) {\n    throw new Error('No QueryClient set, use QueryClientProvider to set one')\n  }\n\n  return client\n}\n\nexport type QueryClientProviderProps = {\n  client: QueryClient\n  children?: React.ReactNode\n}\n\nexport const QueryClientProvider = ({\n  client,\n  children,\n}: QueryClientProviderProps): React.JSX.Element => {\n  React.useEffect(() => {\n    client.mount()\n    return () => {\n      client.unmount()\n    }\n  }, [client])\n\n  return (\n    <QueryClientContext.Provider value={client}>\n      {children}\n    </QueryClientContext.Provider>\n  )\n}\n"],"names":["module","exports","PROVIDER_NAME","Collection","useCollection","createCollectionScope","createCollection","createToastContext","createToastScope","createContextScope","ToastProviderProvider","useToastProviderContext","ToastProvider","__scopeToast","label","duration","swipeDirection","swipeThreshold","children","props","viewport","setViewport","React","toastCount","setToastCount","isFocusedToastEscapeKeyDownRef","isClosePausedRef","trim","console","error","concat","jsx","Provider","scope","onViewportChange","onToastAdd","prevCount","onToastRemove","displayName","VIEWPORT_NAME","VIEWPORT_DEFAULT_HOTKEY","VIEWPORT_PAUSE","VIEWPORT_RESUME","ToastViewport","forwardedRef","hotkey","viewportProps","context","getItems","wrapperRef","headFocusProxyRef","tailFocusProxyRef","ref","composedRefs","useComposedRefs","hotkeyLabel","join","replace","hasToasts","handleKeyDown","length","every","event","key","code","isHotkeyPressed","current","focus","document","addEventListener","removeEventListener","wrapper","handlePause","pauseEvent","CustomEvent","dispatchEvent","handleResume","resumeEvent","handleFocusOutResume","contains","relatedTarget","handlePointerLeaveResume","activeElement","window","getSortedTabbableCandidates","tabbingDirection","param","tabbableCandidates","toastItems","map","toastNode","toastItem","toastTabbableCandidates","getTabbableCandidates","container","nodes","walker","createTreeWalker","NodeFilter","SHOW_ELEMENT","acceptNode","isHiddenInput","node","tagName","type","disabled","hidden","FILTER_SKIP","tabIndex","FILTER_ACCEPT","nextNode","push","currentNode","reverse","flat","isMetaKey","altKey","ctrlKey","metaKey","focusedElement","isTabbingBackwards","shiftKey","targetIsViewport","target","sortedCandidates","index","findIndex","candidate","focusFirst","slice","preventDefault","jsxs","DismissableLayer","role","style","pointerEvents","FocusProxy","onFocusFromOutsideViewport","Slot","Primitive","ol","FOCUS_PROXY_NAME","proxyProps","VisuallyHidden","position","onFocus","prevFocusedElement","TOAST_NAME","Toast","forceMount","open","openProp","defaultOpen","onOpenChange","toastProps","setOpen","useControllableState","prop","defaultProp","onChange","caller","Presence","present","ToastImpl","onClose","onPause","useCallbackRef","onResume","onSwipeStart","composeEventHandlers","currentTarget","setAttribute","onSwipeMove","x","y","detail","delta","setProperty","onSwipeCancel","removeProperty","onSwipeEnd","ToastInteractiveProvider","useToastInteractiveContext","durationProp","onEscapeKeyDown","setNode","pointerStartRef","swipeDeltaRef","closeTimerStartTimeRef","closeTimerRemainingTimeRef","closeTimerRef","handleClose","isFocusInToast","startTimer","Infinity","clearTimeout","Date","getTime","setTimeout","elapsedTime","announceTextContent","getAnnounceTextContent","textContent","childNodes","from","forEach","nodeType","TEXT_NODE","ELEMENT_NODE","isHidden","ariaHidden","display","isExcluded","dataset","radixToastAnnounceExclude","altText","radixToastAnnounceAlt","Fragment","ToastAnnounce","ReactDOM","ItemSlot","asChild","li","userSelect","touchAction","onKeyDown","nativeEvent","defaultPrevented","onPointerDown","button","clientX","clientY","onPointerMove","hasSwipeMoveStarted","Boolean","isHorizontalSwipe","includes","clamp","Math","min","max","clampedX","clampedY","moveStartBuffer","pointerType","eventDetail","originalEvent","handleAndDispatchCustomEvent","discrete","isDeltaInDirection","setPointerCapture","pointerId","abs","onPointerUp","hasPointerCapture","releasePointerCapture","toast","once","announceProps","renderAnnounceText","setRenderAnnounceText","isAnnounced","setIsAnnounced","useNextFrame","callback","fn","useLayoutEffect","raf1","raf2","requestAnimationFrame","cancelAnimationFrame","timer","Portal","ToastTitle","titleProps","div","ToastDescription","descriptionProps","ACTION_NAME","ToastAction","actionProps","ToastAnnounceExclude","ToastClose","CLOSE_NAME","closeProps","interactiveContext","onClick","announceExcludeProps","name","handler","bubbles","cancelable","dispatchDiscreteCustomEvent","direction","threshold","deltaX","deltaY","isDeltaX","candidates","previouslyFocusedElement","some","Viewport","Root","Title","Description","Action","Close","focusManager","_subscribable_js__WEBPACK_IMPORTED_MODULE_0__","l","focused","cleanup","setup","_utils_js__WEBPACK_IMPORTED_MODULE_1__","sk","listener","onSubscribe","setEventListener","onUnsubscribe","hasListeners","setFocused","isFocused","listeners","globalThis","visibilityState","Mutation","_removable_js__WEBPACK_IMPORTED_MODULE_0__","F","observers","mutationCache","retryer","config","mutationId","state","getDefaultState","setOptions","options","scheduleGc","updateGcTime","gcTime","meta","addObserver","observer","clearGcTimeout","notify","mutation","removeObserver","filter","optionalRemove","status","remove","continue","execute","variables","onContinue","dispatch","_retryer_js__WEBPACK_IMPORTED_MODULE_1__","Mz","mutationFn","Promise","reject","onFail","failureCount","retry","retryDelay","networkMode","canRun","restored","isPaused","canStart","onMutate","data","start","onSuccess","onSettled","onError","runNext","action","reducer","failureReason","submittedAt","now","_notifyManager_js__WEBPACK_IMPORTED_MODULE_2__","Vr","batch","onMutationUpdate","defaultScheduler","cb","notifyManager","createNotifyManager","queue","transactions","notifyFn","batchNotifyFn","scheduleFn","schedule","flush","originalQueue","result","batchCalls","args","setNotifyFunction","setBatchNotifyFunction","setScheduler","onlineManager","online","onlineListener","onOnline","offlineListener","setOnline","bind","isOnline","Query","initialState","revertState","cache","client","defaultOptions","abortSignalConsumed","getQueryCache","queryKey","queryHash","initialData","hasData","initialDataUpdatedAt","dataUpdateCount","dataUpdatedAt","errorUpdateCount","errorUpdatedAt","fetchFailureCount","fetchFailureReason","fetchMeta","isInvalidated","fetchStatus","promise","setData","newData","oE","updatedAt","manual","setState","setStateOptions","cancel","then","ZT","catch","resolve","destroy","silent","reset","isActive","Nc","enabled","isDisabled","getObserversCount","queryFn","CN","isStatic","KC","staleTime","isStale","getCurrentResult","isStaleByTime","Kp","find","shouldFetchOnWindowFocus","refetch","cancelRefetch","shouldFetchOnReconnect","query","revert","cancelRetry","invalidate","fetch","fetchOptions","continueRetry","abortController","AbortController","addSignalProperty","Object","defineProperty","object","enumerable","get","signal","fetchFn","cG","queryFnContext","createQueryFnContext","queryFnContext2","persister","createFetchContext","context2","behavior","onFetch","_retryer_js__WEBPACK_IMPORTED_MODULE_2__","DV","initialPromise","abort","fetchState","_notifyManager_js__WEBPACK_IMPORTED_MODULE_3__","onQueryUpdate","Kw","QueryCache","subscribable","constructor","queries","Map","build","utils","Rm","modern_query","A","defaultQueryOptions","getQueryDefaults","add","has","set","queryInMap","delete","clear","getAll","values","filters","defaultedFilters","exact","_x","findAll","keys","MutationCache","mutations","Set","scopes","modern_mutation","m","defaultMutationOptions","scopeFor","scopedMutations","indexOf","splice","mutationsWithSameScope","firstPendingMutation","foundMutation","Array","X7","resumePausedMutations","pausedMutations","all","id","infiniteQueryBehavior","pages","fetchMore","oldPages","oldPageParams","pageParams","currentPage","cancelled","aborted","fetchPage","previous","pageParam","page","maxPages","addTo","Ht","VX","oldData","pageParamFn","getPreviousPageParam","getNextPageParam","remainingPages","initialPageParam","lastIndex","QueryClient","queryCache","queryDefaults","mutationDefaults","mountCount","unsubscribeFocus","unsubscribeOnline","mount","j","subscribe","N","unmount","isFetching","isMutating","getQueryData","ensureQueryData","defaultedOptions","cachedData","fetchQuery","revalidateIfStale","prefetchQuery","getQueriesData","setQueryData","updater","prevData","SE","setQueriesData","getQueryState","removeQueries","resetQueries","refetchQueries","cancelQueries","cancelOptions","defaultedCancelOptions","invalidateQueries","refetchType","throwOnError","fetchInfiniteQuery","prefetchInfiniteQuery","ensureInfiniteQueryData","getMutationCache","getDefaultOptions","setDefaultOptions","setQueryDefaults","Ym","defaults","to","queryDefault","assign","setMutationDefaults","mutationKey","getMutationDefaults","_defaulted","refetchOnReconnect","suspense","Removable","gcTimeout","_utils_js__WEBPACK_IMPORTED_MODULE_0__","PN","newGcTime","defaultRetryDelay","canFetch","_onlineManager_js__WEBPACK_IMPORTED_MODULE_0__","CancelledError","Error","isCancelledError","value","createRetryer","continueFn","isRetryCancelled","isResolved","thenable","_thenable_js__WEBPACK_IMPORTED_MODULE_1__","O","canContinue","_focusManager_js__WEBPACK_IMPORTED_MODULE_2__","pause","continueResolve","run","promiseOrValue","_utils_js__WEBPACK_IMPORTED_MODULE_3__","delay","shouldRetry","_v","Subscribable","size","pendingThenable","_resolve","_reject","finalize","reason","isServer","noop","functionalUpdate","input","isValidTimeout","timeUntilStale","resolveStaleTime","resolveEnabled","matchQuery","predicate","stale","hashQueryKeyByOptions","partialMatchKey","matchMutation","hashKey","hashFn","queryKeyHashFn","JSON","stringify","_","val","isPlainObject","sort","reduce","a","b","shallowEqualObjects","isPlainArray","isArray","o","hasObjectPrototype","ctor","prot","prototype","hasOwnProperty","getPrototypeOf","toString","call","sleep","timeout","replaceData","structuralSharing","replaceEqualDeep","array","aItems","aSize","bItems","bSize","copy","aItemsSet","equalItems","i","addToEnd","items","item","newItems","addToStart","skipToken","Symbol","ensureQueryFn","shouldThrowError","params","QueryClientContext","useQueryClient","queryClient","QueryClientProvider"],"sourceRoot":""}