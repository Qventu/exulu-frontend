{"version":3,"file":"static/chunks/3397-5a704b2e12e9e883.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@apollo/client/react/hooks/internal/useIsomorphicLayoutEffect.js","webpack://_N_E/./node_modules/@apollo/client/react/hooks/useMutation.js","webpack://_N_E/../src/presence.tsx","webpack://_N_E/../src/use-state-machine.tsx","webpack://_N_E/./node_modules/@radix-ui/react-scroll-area/node_modules/@radix-ui/primitive/dist/index.mjs","webpack://_N_E/../src/scroll-area.tsx","webpack://_N_E/../src/use-state-machine.ts"],"sourcesContent":["import * as React from \"rehackt\";\nimport { canUseDOM } from \"../../../utilities/index.js\";\n// use canUseDOM here instead of canUseLayoutEffect because we want to be able\n// to use useLayoutEffect in our jest tests. useLayoutEffect seems to work fine\n// in useSuspenseQuery tests, but to honor the original comment about the\n// warnings for useSyncExternalStore implementation, canUseLayoutEffect is left\n// alone.\nexport var useIsomorphicLayoutEffect = canUseDOM ? React.useLayoutEffect : React.useEffect;\n//# sourceMappingURL=useIsomorphicLayoutEffect.js.map","import { __assign } from \"tslib\";\nimport * as React from \"rehackt\";\nimport { mergeOptions } from \"../../utilities/index.js\";\nimport { equal } from \"@wry/equality\";\nimport { DocumentType, verifyDocumentType } from \"../parser/index.js\";\nimport { ApolloError } from \"../../errors/index.js\";\nimport { useApolloClient } from \"./useApolloClient.js\";\nimport { useIsomorphicLayoutEffect } from \"./internal/useIsomorphicLayoutEffect.js\";\n/**\n *\n *\n * > Refer to the [Mutations](https://www.apollographql.com/docs/react/data/mutations/) section for a more in-depth overview of `useMutation`.\n *\n * @example\n * ```jsx\n * import { gql, useMutation } from '@apollo/client';\n *\n * const ADD_TODO = gql`\n *   mutation AddTodo($type: String!) {\n *     addTodo(type: $type) {\n *       id\n *       type\n *     }\n *   }\n * `;\n *\n * function AddTodo() {\n *   let input;\n *   const [addTodo, { data }] = useMutation(ADD_TODO);\n *\n *   return (\n *     <div>\n *       <form\n *         onSubmit={e => {\n *           e.preventDefault();\n *           addTodo({ variables: { type: input.value } });\n *           input.value = '';\n *         }}\n *       >\n *         <input\n *           ref={node => {\n *             input = node;\n *           }}\n *         />\n *         <button type=\"submit\">Add Todo</button>\n *       </form>\n *     </div>\n *   );\n * }\n * ```\n * @since 3.0.0\n * @param mutation - A GraphQL mutation document parsed into an AST by `gql`.\n * @param options - Options to control how the mutation is executed.\n * @returns A tuple in the form of `[mutate, result]`\n */\nexport function useMutation(mutation, options) {\n    var client = useApolloClient(options === null || options === void 0 ? void 0 : options.client);\n    verifyDocumentType(mutation, DocumentType.Mutation);\n    var _a = React.useState({\n        called: false,\n        loading: false,\n        client: client,\n    }), result = _a[0], setResult = _a[1];\n    var ref = React.useRef({\n        result: result,\n        mutationId: 0,\n        isMounted: true,\n        client: client,\n        mutation: mutation,\n        options: options,\n    });\n    useIsomorphicLayoutEffect(function () {\n        Object.assign(ref.current, { client: client, options: options, mutation: mutation });\n    });\n    var execute = React.useCallback(function (executeOptions) {\n        if (executeOptions === void 0) { executeOptions = {}; }\n        var _a = ref.current, options = _a.options, mutation = _a.mutation;\n        var baseOptions = __assign(__assign({}, options), { mutation: mutation });\n        var client = executeOptions.client || ref.current.client;\n        if (!ref.current.result.loading &&\n            !baseOptions.ignoreResults &&\n            ref.current.isMounted) {\n            setResult((ref.current.result = {\n                loading: true,\n                error: void 0,\n                data: void 0,\n                called: true,\n                client: client,\n            }));\n        }\n        var mutationId = ++ref.current.mutationId;\n        var clientOptions = mergeOptions(baseOptions, executeOptions);\n        return client\n            .mutate(clientOptions)\n            .then(function (response) {\n            var _a, _b;\n            var data = response.data, errors = response.errors;\n            var error = errors && errors.length > 0 ?\n                new ApolloError({ graphQLErrors: errors })\n                : void 0;\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n            if (error && onError) {\n                onError(error, clientOptions);\n            }\n            if (mutationId === ref.current.mutationId &&\n                !clientOptions.ignoreResults) {\n                var result_1 = {\n                    called: true,\n                    loading: false,\n                    data: data,\n                    error: error,\n                    client: client,\n                };\n                if (ref.current.isMounted && !equal(ref.current.result, result_1)) {\n                    setResult((ref.current.result = result_1));\n                }\n            }\n            var onCompleted = executeOptions.onCompleted || ((_b = ref.current.options) === null || _b === void 0 ? void 0 : _b.onCompleted);\n            if (!error) {\n                onCompleted === null || onCompleted === void 0 ? void 0 : onCompleted(response.data, clientOptions);\n            }\n            return response;\n        }, function (error) {\n            var _a;\n            if (mutationId === ref.current.mutationId &&\n                ref.current.isMounted) {\n                var result_2 = {\n                    loading: false,\n                    error: error,\n                    data: void 0,\n                    called: true,\n                    client: client,\n                };\n                if (!equal(ref.current.result, result_2)) {\n                    setResult((ref.current.result = result_2));\n                }\n            }\n            var onError = executeOptions.onError || ((_a = ref.current.options) === null || _a === void 0 ? void 0 : _a.onError);\n            if (onError) {\n                onError(error, clientOptions);\n                // TODO(brian): why are we returning this here???\n                return { data: void 0, errors: error };\n            }\n            throw error;\n        });\n    }, []);\n    var reset = React.useCallback(function () {\n        if (ref.current.isMounted) {\n            var result_3 = {\n                called: false,\n                loading: false,\n                client: ref.current.client,\n            };\n            Object.assign(ref.current, { mutationId: 0, result: result_3 });\n            setResult(result_3);\n        }\n    }, []);\n    React.useEffect(function () {\n        var current = ref.current;\n        // eslint-disable-next-line react-compiler/react-compiler\n        current.isMounted = true;\n        return function () {\n            current.isMounted = false;\n        };\n    }, []);\n    return [execute, __assign({ reset: reset }, result)];\n}\n//# sourceMappingURL=useMutation.js.map","import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './use-state-machine';\n\ninterface PresenceProps {\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n  present: boolean;\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement<{ ref?: React.Ref<HTMLElement> }>;\n\n  const ref = useComposedRefs(presence.ref, getElementRef(child));\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration | null>(null);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      let timeoutId: number;\n      const ownerWindow = node.ownerDocument.defaultView ?? window;\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        // The event.animationName is unescaped for CSS syntax,\n        // so we need to escape it to compare with the animationName computed from the style.\n        const isCurrentAnimation = currentAnimationName.includes(CSS.escape(event.animationName));\n        if (event.target === node && isCurrentAnimation) {\n          // With React 18 concurrency this update is applied a frame after the\n          // animation ends, creating a flash of visible content. By setting the\n          // animation fill mode to \"forwards\", we force the node to keep the\n          // styles of the last keyframe, removing the flash.\n          //\n          // Previously we flushed the update via ReactDom.flushSync, but with\n          // exit animations this resulted in the node being removed from the\n          // DOM before the synthetic animationEnd event was dispatched, meaning\n          // user-provided event handlers would not be called.\n          // https://github.com/radix-ui/primitives/pull/1849\n          send('ANIMATION_END');\n          if (!prevPresentRef.current) {\n            const currentFillMode = node.style.animationFillMode;\n            node.style.animationFillMode = 'forwards';\n            // Reset the style after the node had time to unmount (for cases\n            // where the component chooses not to unmount). Doing this any\n            // sooner than `setTimeout` (e.g. with `requestAnimationFrame`)\n            // still causes a flash.\n            timeoutId = ownerWindow.setTimeout(() => {\n              if (node.style.animationFillMode === 'forwards') {\n                node.style.animationFillMode = currentFillMode;\n              }\n            });\n          }\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        ownerWindow.clearTimeout(timeoutId);\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      stylesRef.current = node ? getComputedStyle(node) : null;\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles: CSSStyleDeclaration | null) {\n  return styles?.animationName || 'none';\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement<{ ref?: React.Ref<unknown> }>) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n\n  // Not DEV\n  return element.props.ref || (element as any).ref;\n}\n\nconst Root = Presence;\n\nexport {\n  Presence,\n  //\n  Root,\n};\nexport type { PresenceProps };\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n","// src/primitive.tsx\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\nfunction getOwnerWindow(element) {\n  if (!canUseDOM) {\n    throw new Error(\"Cannot access window outside of the DOM\");\n  }\n  return element?.ownerDocument?.defaultView ?? window;\n}\nfunction getOwnerDocument(element) {\n  if (!canUseDOM) {\n    throw new Error(\"Cannot access document outside of the DOM\");\n  }\n  return element?.ownerDocument ?? document;\n}\nfunction getActiveElement(node, activeDescendant = false) {\n  const { activeElement } = getOwnerDocument(node);\n  if (!activeElement?.nodeName) {\n    return null;\n  }\n  if (isFrame(activeElement) && activeElement.contentDocument) {\n    return getActiveElement(activeElement.contentDocument.body, activeDescendant);\n  }\n  if (activeDescendant) {\n    const id = activeElement.getAttribute(\"aria-activedescendant\");\n    if (id) {\n      const element = getOwnerDocument(activeElement).getElementById(id);\n      if (element) {\n        return element;\n      }\n    }\n  }\n  return activeElement;\n}\nfunction isFrame(element) {\n  return element.tagName === \"IFRAME\";\n}\nexport {\n  canUseDOM,\n  composeEventHandlers,\n  getActiveElement,\n  getOwnerDocument,\n  getOwnerWindow,\n  isFrame\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from 'react';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { Presence } from '@radix-ui/react-presence';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useDirection } from '@radix-ui/react-direction';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { clamp } from '@radix-ui/number';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useStateMachine } from './use-state-machine';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype Direction = 'ltr' | 'rtl';\ntype Sizes = {\n  content: number;\n  viewport: number;\n  scrollbar: {\n    size: number;\n    paddingStart: number;\n    paddingEnd: number;\n  };\n};\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollArea\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLL_AREA_NAME = 'ScrollArea';\n\ntype ScopedProps<P> = P & { __scopeScrollArea?: Scope };\nconst [createScrollAreaContext, createScrollAreaScope] = createContextScope(SCROLL_AREA_NAME);\n\ntype ScrollAreaContextValue = {\n  type: 'auto' | 'always' | 'scroll' | 'hover';\n  dir: Direction;\n  scrollHideDelay: number;\n  scrollArea: ScrollAreaElement | null;\n  viewport: ScrollAreaViewportElement | null;\n  onViewportChange(viewport: ScrollAreaViewportElement | null): void;\n  content: HTMLDivElement | null;\n  onContentChange(content: HTMLDivElement): void;\n  scrollbarX: ScrollAreaScrollbarElement | null;\n  onScrollbarXChange(scrollbar: ScrollAreaScrollbarElement | null): void;\n  scrollbarXEnabled: boolean;\n  onScrollbarXEnabledChange(rendered: boolean): void;\n  scrollbarY: ScrollAreaScrollbarElement | null;\n  onScrollbarYChange(scrollbar: ScrollAreaScrollbarElement | null): void;\n  scrollbarYEnabled: boolean;\n  onScrollbarYEnabledChange(rendered: boolean): void;\n  onCornerWidthChange(width: number): void;\n  onCornerHeightChange(height: number): void;\n};\n\nconst [ScrollAreaProvider, useScrollAreaContext] =\n  createScrollAreaContext<ScrollAreaContextValue>(SCROLL_AREA_NAME);\n\ntype ScrollAreaElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface ScrollAreaProps extends PrimitiveDivProps {\n  type?: ScrollAreaContextValue['type'];\n  dir?: ScrollAreaContextValue['dir'];\n  scrollHideDelay?: number;\n}\n\nconst ScrollArea = React.forwardRef<ScrollAreaElement, ScrollAreaProps>(\n  (props: ScopedProps<ScrollAreaProps>, forwardedRef) => {\n    const {\n      __scopeScrollArea,\n      type = 'hover',\n      dir,\n      scrollHideDelay = 600,\n      ...scrollAreaProps\n    } = props;\n    const [scrollArea, setScrollArea] = React.useState<ScrollAreaElement | null>(null);\n    const [viewport, setViewport] = React.useState<ScrollAreaViewportElement | null>(null);\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const [scrollbarX, setScrollbarX] = React.useState<ScrollAreaScrollbarElement | null>(null);\n    const [scrollbarY, setScrollbarY] = React.useState<ScrollAreaScrollbarElement | null>(null);\n    const [cornerWidth, setCornerWidth] = React.useState(0);\n    const [cornerHeight, setCornerHeight] = React.useState(0);\n    const [scrollbarXEnabled, setScrollbarXEnabled] = React.useState(false);\n    const [scrollbarYEnabled, setScrollbarYEnabled] = React.useState(false);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setScrollArea(node));\n    const direction = useDirection(dir);\n\n    return (\n      <ScrollAreaProvider\n        scope={__scopeScrollArea}\n        type={type}\n        dir={direction}\n        scrollHideDelay={scrollHideDelay}\n        scrollArea={scrollArea}\n        viewport={viewport}\n        onViewportChange={setViewport}\n        content={content}\n        onContentChange={setContent}\n        scrollbarX={scrollbarX}\n        onScrollbarXChange={setScrollbarX}\n        scrollbarXEnabled={scrollbarXEnabled}\n        onScrollbarXEnabledChange={setScrollbarXEnabled}\n        scrollbarY={scrollbarY}\n        onScrollbarYChange={setScrollbarY}\n        scrollbarYEnabled={scrollbarYEnabled}\n        onScrollbarYEnabledChange={setScrollbarYEnabled}\n        onCornerWidthChange={setCornerWidth}\n        onCornerHeightChange={setCornerHeight}\n      >\n        <Primitive.div\n          dir={direction}\n          {...scrollAreaProps}\n          ref={composedRefs}\n          style={{\n            position: 'relative',\n            // Pass corner sizes as CSS vars to reduce re-renders of context consumers\n            ['--radix-scroll-area-corner-width' as any]: cornerWidth + 'px',\n            ['--radix-scroll-area-corner-height' as any]: cornerHeight + 'px',\n            ...props.style,\n          }}\n        />\n      </ScrollAreaProvider>\n    );\n  }\n);\n\nScrollArea.displayName = SCROLL_AREA_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaViewport\n * -----------------------------------------------------------------------------------------------*/\n\nconst VIEWPORT_NAME = 'ScrollAreaViewport';\n\ntype ScrollAreaViewportElement = React.ComponentRef<typeof Primitive.div>;\ninterface ScrollAreaViewportProps extends PrimitiveDivProps {\n  nonce?: string;\n}\n\nconst ScrollAreaViewport = React.forwardRef<ScrollAreaViewportElement, ScrollAreaViewportProps>(\n  (props: ScopedProps<ScrollAreaViewportProps>, forwardedRef) => {\n    const { __scopeScrollArea, children, nonce, ...viewportProps } = props;\n    const context = useScrollAreaContext(VIEWPORT_NAME, __scopeScrollArea);\n    const ref = React.useRef<ScrollAreaViewportElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onViewportChange);\n    return (\n      <>\n        {/* Hide scrollbars cross-browser and enable momentum scroll for touch devices */}\n        <style\n          dangerouslySetInnerHTML={{\n            __html: `[data-radix-scroll-area-viewport]{scrollbar-width:none;-ms-overflow-style:none;-webkit-overflow-scrolling:touch;}[data-radix-scroll-area-viewport]::-webkit-scrollbar{display:none}`,\n          }}\n          nonce={nonce}\n        />\n        <Primitive.div\n          data-radix-scroll-area-viewport=\"\"\n          {...viewportProps}\n          ref={composedRefs}\n          style={{\n            /**\n             * We don't support `visible` because the intention is to have at least one scrollbar\n             * if this component is used and `visible` will behave like `auto` in that case\n             * https://developer.mozilla.org/en-US/docs/Web/CSS/overflow#description\n             *\n             * We don't handle `auto` because the intention is for the native implementation\n             * to be hidden if using this component. We just want to ensure the node is scrollable\n             * so could have used either `scroll` or `auto` here. We picked `scroll` to prevent\n             * the browser from having to work out whether to render native scrollbars or not,\n             * we tell it to with the intention of hiding them in CSS.\n             */\n            overflowX: context.scrollbarXEnabled ? 'scroll' : 'hidden',\n            overflowY: context.scrollbarYEnabled ? 'scroll' : 'hidden',\n            ...props.style,\n          }}\n        >\n          {/**\n           * `display: table` ensures our content div will match the size of its children in both\n           * horizontal and vertical axis so we can determine if scroll width/height changed and\n           * recalculate thumb sizes. This doesn't account for children with *percentage*\n           * widths that change. We'll wait to see what use-cases consumers come up with there\n           * before trying to resolve it.\n           */}\n          <div ref={context.onContentChange} style={{ minWidth: '100%', display: 'table' }}>\n            {children}\n          </div>\n        </Primitive.div>\n      </>\n    );\n  }\n);\n\nScrollAreaViewport.displayName = VIEWPORT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaScrollbar\n * -----------------------------------------------------------------------------------------------*/\n\nconst SCROLLBAR_NAME = 'ScrollAreaScrollbar';\n\ntype ScrollAreaScrollbarElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbar = React.forwardRef<ScrollAreaScrollbarElement, ScrollAreaScrollbarProps>(\n  (props: ScopedProps<ScrollAreaScrollbarProps>, forwardedRef) => {\n    const { forceMount, ...scrollbarProps } = props;\n    const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n    const { onScrollbarXEnabledChange, onScrollbarYEnabledChange } = context;\n    const isHorizontal = props.orientation === 'horizontal';\n\n    React.useEffect(() => {\n      isHorizontal ? onScrollbarXEnabledChange(true) : onScrollbarYEnabledChange(true);\n      return () => {\n        isHorizontal ? onScrollbarXEnabledChange(false) : onScrollbarYEnabledChange(false);\n      };\n    }, [isHorizontal, onScrollbarXEnabledChange, onScrollbarYEnabledChange]);\n\n    return context.type === 'hover' ? (\n      <ScrollAreaScrollbarHover {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'scroll' ? (\n      <ScrollAreaScrollbarScroll {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'auto' ? (\n      <ScrollAreaScrollbarAuto {...scrollbarProps} ref={forwardedRef} forceMount={forceMount} />\n    ) : context.type === 'always' ? (\n      <ScrollAreaScrollbarVisible {...scrollbarProps} ref={forwardedRef} />\n    ) : null;\n  }\n);\n\nScrollAreaScrollbar.displayName = SCROLLBAR_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarHoverElement = ScrollAreaScrollbarAutoElement;\ninterface ScrollAreaScrollbarHoverProps extends ScrollAreaScrollbarAutoProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarHover = React.forwardRef<\n  ScrollAreaScrollbarHoverElement,\n  ScrollAreaScrollbarHoverProps\n>((props: ScopedProps<ScrollAreaScrollbarHoverProps>, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [visible, setVisible] = React.useState(false);\n\n  React.useEffect(() => {\n    const scrollArea = context.scrollArea;\n    let hideTimer = 0;\n    if (scrollArea) {\n      const handlePointerEnter = () => {\n        window.clearTimeout(hideTimer);\n        setVisible(true);\n      };\n      const handlePointerLeave = () => {\n        hideTimer = window.setTimeout(() => setVisible(false), context.scrollHideDelay);\n      };\n      scrollArea.addEventListener('pointerenter', handlePointerEnter);\n      scrollArea.addEventListener('pointerleave', handlePointerLeave);\n      return () => {\n        window.clearTimeout(hideTimer);\n        scrollArea.removeEventListener('pointerenter', handlePointerEnter);\n        scrollArea.removeEventListener('pointerleave', handlePointerLeave);\n      };\n    }\n  }, [context.scrollArea, context.scrollHideDelay]);\n\n  return (\n    <Presence present={forceMount || visible}>\n      <ScrollAreaScrollbarAuto\n        data-state={visible ? 'visible' : 'hidden'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n      />\n    </Presence>\n  );\n});\n\ntype ScrollAreaScrollbarScrollElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarScrollProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarScroll = React.forwardRef<\n  ScrollAreaScrollbarScrollElement,\n  ScrollAreaScrollbarScrollProps\n>((props: ScopedProps<ScrollAreaScrollbarScrollProps>, forwardedRef) => {\n  const { forceMount, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const isHorizontal = props.orientation === 'horizontal';\n  const debounceScrollEnd = useDebounceCallback(() => send('SCROLL_END'), 100);\n  const [state, send] = useStateMachine('hidden', {\n    hidden: {\n      SCROLL: 'scrolling',\n    },\n    scrolling: {\n      SCROLL_END: 'idle',\n      POINTER_ENTER: 'interacting',\n    },\n    interacting: {\n      SCROLL: 'interacting',\n      POINTER_LEAVE: 'idle',\n    },\n    idle: {\n      HIDE: 'hidden',\n      SCROLL: 'scrolling',\n      POINTER_ENTER: 'interacting',\n    },\n  });\n\n  React.useEffect(() => {\n    if (state === 'idle') {\n      const hideTimer = window.setTimeout(() => send('HIDE'), context.scrollHideDelay);\n      return () => window.clearTimeout(hideTimer);\n    }\n  }, [state, context.scrollHideDelay, send]);\n\n  React.useEffect(() => {\n    const viewport = context.viewport;\n    const scrollDirection = isHorizontal ? 'scrollLeft' : 'scrollTop';\n\n    if (viewport) {\n      let prevScrollPos = viewport[scrollDirection];\n      const handleScroll = () => {\n        const scrollPos = viewport[scrollDirection];\n        const hasScrollInDirectionChanged = prevScrollPos !== scrollPos;\n        if (hasScrollInDirectionChanged) {\n          send('SCROLL');\n          debounceScrollEnd();\n        }\n        prevScrollPos = scrollPos;\n      };\n      viewport.addEventListener('scroll', handleScroll);\n      return () => viewport.removeEventListener('scroll', handleScroll);\n    }\n  }, [context.viewport, isHorizontal, send, debounceScrollEnd]);\n\n  return (\n    <Presence present={forceMount || state !== 'hidden'}>\n      <ScrollAreaScrollbarVisible\n        data-state={state === 'hidden' ? 'hidden' : 'visible'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n        onPointerEnter={composeEventHandlers(props.onPointerEnter, () => send('POINTER_ENTER'))}\n        onPointerLeave={composeEventHandlers(props.onPointerLeave, () => send('POINTER_LEAVE'))}\n      />\n    </Presence>\n  );\n});\n\ntype ScrollAreaScrollbarAutoElement = ScrollAreaScrollbarVisibleElement;\ninterface ScrollAreaScrollbarAutoProps extends ScrollAreaScrollbarVisibleProps {\n  forceMount?: true;\n}\n\nconst ScrollAreaScrollbarAuto = React.forwardRef<\n  ScrollAreaScrollbarAutoElement,\n  ScrollAreaScrollbarAutoProps\n>((props: ScopedProps<ScrollAreaScrollbarAutoProps>, forwardedRef) => {\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const { forceMount, ...scrollbarProps } = props;\n  const [visible, setVisible] = React.useState(false);\n  const isHorizontal = props.orientation === 'horizontal';\n  const handleResize = useDebounceCallback(() => {\n    if (context.viewport) {\n      const isOverflowX = context.viewport.offsetWidth < context.viewport.scrollWidth;\n      const isOverflowY = context.viewport.offsetHeight < context.viewport.scrollHeight;\n      setVisible(isHorizontal ? isOverflowX : isOverflowY);\n    }\n  }, 10);\n\n  useResizeObserver(context.viewport, handleResize);\n  useResizeObserver(context.content, handleResize);\n\n  return (\n    <Presence present={forceMount || visible}>\n      <ScrollAreaScrollbarVisible\n        data-state={visible ? 'visible' : 'hidden'}\n        {...scrollbarProps}\n        ref={forwardedRef}\n      />\n    </Presence>\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarVisibleElement = ScrollAreaScrollbarAxisElement;\ninterface ScrollAreaScrollbarVisibleProps\n  extends Omit<ScrollAreaScrollbarAxisProps, keyof ScrollAreaScrollbarAxisPrivateProps> {\n  orientation?: 'horizontal' | 'vertical';\n}\n\nconst ScrollAreaScrollbarVisible = React.forwardRef<\n  ScrollAreaScrollbarVisibleElement,\n  ScrollAreaScrollbarVisibleProps\n>((props: ScopedProps<ScrollAreaScrollbarVisibleProps>, forwardedRef) => {\n  const { orientation = 'vertical', ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const thumbRef = React.useRef<ScrollAreaThumbElement | null>(null);\n  const pointerOffsetRef = React.useRef(0);\n  const [sizes, setSizes] = React.useState<Sizes>({\n    content: 0,\n    viewport: 0,\n    scrollbar: { size: 0, paddingStart: 0, paddingEnd: 0 },\n  });\n  const thumbRatio = getThumbRatio(sizes.viewport, sizes.content);\n\n  type UncommonProps = 'onThumbPositionChange' | 'onDragScroll' | 'onWheelScroll';\n  const commonProps: Omit<ScrollAreaScrollbarAxisPrivateProps, UncommonProps> = {\n    ...scrollbarProps,\n    sizes,\n    onSizesChange: setSizes,\n    hasThumb: Boolean(thumbRatio > 0 && thumbRatio < 1),\n    onThumbChange: (thumb) => (thumbRef.current = thumb),\n    onThumbPointerUp: () => (pointerOffsetRef.current = 0),\n    onThumbPointerDown: (pointerPos) => (pointerOffsetRef.current = pointerPos),\n  };\n\n  function getScrollPosition(pointerPos: number, dir?: Direction) {\n    return getScrollPositionFromPointer(pointerPos, pointerOffsetRef.current, sizes, dir);\n  }\n\n  if (orientation === 'horizontal') {\n    return (\n      <ScrollAreaScrollbarX\n        {...commonProps}\n        ref={forwardedRef}\n        onThumbPositionChange={() => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollLeft;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes, context.dir);\n            thumbRef.current.style.transform = `translate3d(${offset}px, 0, 0)`;\n          }\n        }}\n        onWheelScroll={(scrollPos) => {\n          if (context.viewport) context.viewport.scrollLeft = scrollPos;\n        }}\n        onDragScroll={(pointerPos) => {\n          if (context.viewport) {\n            context.viewport.scrollLeft = getScrollPosition(pointerPos, context.dir);\n          }\n        }}\n      />\n    );\n  }\n\n  if (orientation === 'vertical') {\n    return (\n      <ScrollAreaScrollbarY\n        {...commonProps}\n        ref={forwardedRef}\n        onThumbPositionChange={() => {\n          if (context.viewport && thumbRef.current) {\n            const scrollPos = context.viewport.scrollTop;\n            const offset = getThumbOffsetFromScroll(scrollPos, sizes);\n            thumbRef.current.style.transform = `translate3d(0, ${offset}px, 0)`;\n          }\n        }}\n        onWheelScroll={(scrollPos) => {\n          if (context.viewport) context.viewport.scrollTop = scrollPos;\n        }}\n        onDragScroll={(pointerPos) => {\n          if (context.viewport) context.viewport.scrollTop = getScrollPosition(pointerPos);\n        }}\n      />\n    );\n  }\n\n  return null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaScrollbarAxisPrivateProps = {\n  hasThumb: boolean;\n  sizes: Sizes;\n  onSizesChange(sizes: Sizes): void;\n  onThumbChange(thumb: ScrollAreaThumbElement | null): void;\n  onThumbPointerDown(pointerPos: number): void;\n  onThumbPointerUp(): void;\n  onThumbPositionChange(): void;\n  onWheelScroll(scrollPos: number): void;\n  onDragScroll(pointerPos: number): void;\n};\n\ntype ScrollAreaScrollbarAxisElement = ScrollAreaScrollbarImplElement;\ninterface ScrollAreaScrollbarAxisProps\n  extends Omit<ScrollAreaScrollbarImplProps, keyof ScrollAreaScrollbarImplPrivateProps>,\n    ScrollAreaScrollbarAxisPrivateProps {}\n\nconst ScrollAreaScrollbarX = React.forwardRef<\n  ScrollAreaScrollbarAxisElement,\n  ScrollAreaScrollbarAxisProps\n>((props: ScopedProps<ScrollAreaScrollbarAxisProps>, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const ref = React.useRef<ScrollAreaScrollbarAxisElement>(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarXChange);\n\n  React.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n\n  return (\n    <ScrollAreaScrollbarImpl\n      data-orientation=\"horizontal\"\n      {...scrollbarProps}\n      ref={composeRefs}\n      sizes={sizes}\n      style={{\n        bottom: 0,\n        left: context.dir === 'rtl' ? 'var(--radix-scroll-area-corner-width)' : 0,\n        right: context.dir === 'ltr' ? 'var(--radix-scroll-area-corner-width)' : 0,\n        ['--radix-scroll-area-thumb-width' as any]: getThumbSize(sizes) + 'px',\n        ...props.style,\n      }}\n      onThumbPointerDown={(pointerPos) => props.onThumbPointerDown(pointerPos.x)}\n      onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.x)}\n      onWheelScroll={(event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollLeft + event.deltaX;\n          props.onWheelScroll(scrollPos);\n          // prevent window scroll when wheeling on scrollbar\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      }}\n      onResize={() => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollWidth,\n            viewport: context.viewport.offsetWidth,\n            scrollbar: {\n              size: ref.current.clientWidth,\n              paddingStart: toInt(computedStyle.paddingLeft),\n              paddingEnd: toInt(computedStyle.paddingRight),\n            },\n          });\n        }\n      }}\n    />\n  );\n});\n\nconst ScrollAreaScrollbarY = React.forwardRef<\n  ScrollAreaScrollbarAxisElement,\n  ScrollAreaScrollbarAxisProps\n>((props: ScopedProps<ScrollAreaScrollbarAxisProps>, forwardedRef) => {\n  const { sizes, onSizesChange, ...scrollbarProps } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, props.__scopeScrollArea);\n  const [computedStyle, setComputedStyle] = React.useState<CSSStyleDeclaration>();\n  const ref = React.useRef<ScrollAreaScrollbarAxisElement>(null);\n  const composeRefs = useComposedRefs(forwardedRef, ref, context.onScrollbarYChange);\n\n  React.useEffect(() => {\n    if (ref.current) setComputedStyle(getComputedStyle(ref.current));\n  }, [ref]);\n\n  return (\n    <ScrollAreaScrollbarImpl\n      data-orientation=\"vertical\"\n      {...scrollbarProps}\n      ref={composeRefs}\n      sizes={sizes}\n      style={{\n        top: 0,\n        right: context.dir === 'ltr' ? 0 : undefined,\n        left: context.dir === 'rtl' ? 0 : undefined,\n        bottom: 'var(--radix-scroll-area-corner-height)',\n        ['--radix-scroll-area-thumb-height' as any]: getThumbSize(sizes) + 'px',\n        ...props.style,\n      }}\n      onThumbPointerDown={(pointerPos) => props.onThumbPointerDown(pointerPos.y)}\n      onDragScroll={(pointerPos) => props.onDragScroll(pointerPos.y)}\n      onWheelScroll={(event, maxScrollPos) => {\n        if (context.viewport) {\n          const scrollPos = context.viewport.scrollTop + event.deltaY;\n          props.onWheelScroll(scrollPos);\n          // prevent window scroll when wheeling on scrollbar\n          if (isScrollingWithinScrollbarBounds(scrollPos, maxScrollPos)) {\n            event.preventDefault();\n          }\n        }\n      }}\n      onResize={() => {\n        if (ref.current && context.viewport && computedStyle) {\n          onSizesChange({\n            content: context.viewport.scrollHeight,\n            viewport: context.viewport.offsetHeight,\n            scrollbar: {\n              size: ref.current.clientHeight,\n              paddingStart: toInt(computedStyle.paddingTop),\n              paddingEnd: toInt(computedStyle.paddingBottom),\n            },\n          });\n        }\n      }}\n    />\n  );\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollbarContext = {\n  hasThumb: boolean;\n  scrollbar: ScrollAreaScrollbarElement | null;\n  onThumbChange(thumb: ScrollAreaThumbElement | null): void;\n  onThumbPointerUp(): void;\n  onThumbPointerDown(pointerPos: { x: number; y: number }): void;\n  onThumbPositionChange(): void;\n};\n\nconst [ScrollbarProvider, useScrollbarContext] =\n  createScrollAreaContext<ScrollbarContext>(SCROLLBAR_NAME);\n\ntype ScrollAreaScrollbarImplElement = React.ComponentRef<typeof Primitive.div>;\ntype ScrollAreaScrollbarImplPrivateProps = {\n  sizes: Sizes;\n  hasThumb: boolean;\n  onThumbChange: ScrollbarContext['onThumbChange'];\n  onThumbPointerUp: ScrollbarContext['onThumbPointerUp'];\n  onThumbPointerDown: ScrollbarContext['onThumbPointerDown'];\n  onThumbPositionChange: ScrollbarContext['onThumbPositionChange'];\n  onWheelScroll(event: WheelEvent, maxScrollPos: number): void;\n  onDragScroll(pointerPos: { x: number; y: number }): void;\n  onResize(): void;\n};\ninterface ScrollAreaScrollbarImplProps\n  extends Omit<PrimitiveDivProps, keyof ScrollAreaScrollbarImplPrivateProps>,\n    ScrollAreaScrollbarImplPrivateProps {}\n\nconst ScrollAreaScrollbarImpl = React.forwardRef<\n  ScrollAreaScrollbarImplElement,\n  ScrollAreaScrollbarImplProps\n>((props: ScopedProps<ScrollAreaScrollbarImplProps>, forwardedRef) => {\n  const {\n    __scopeScrollArea,\n    sizes,\n    hasThumb,\n    onThumbChange,\n    onThumbPointerUp,\n    onThumbPointerDown,\n    onThumbPositionChange,\n    onDragScroll,\n    onWheelScroll,\n    onResize,\n    ...scrollbarProps\n  } = props;\n  const context = useScrollAreaContext(SCROLLBAR_NAME, __scopeScrollArea);\n  const [scrollbar, setScrollbar] = React.useState<ScrollAreaScrollbarElement | null>(null);\n  const composeRefs = useComposedRefs(forwardedRef, (node) => setScrollbar(node));\n  const rectRef = React.useRef<DOMRect | null>(null);\n  const prevWebkitUserSelectRef = React.useRef<string>('');\n  const viewport = context.viewport;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const handleWheelScroll = useCallbackRef(onWheelScroll);\n  const handleThumbPositionChange = useCallbackRef(onThumbPositionChange);\n  const handleResize = useDebounceCallback(onResize, 10);\n\n  function handleDragScroll(event: React.PointerEvent<HTMLElement>) {\n    if (rectRef.current) {\n      const x = event.clientX - rectRef.current.left;\n      const y = event.clientY - rectRef.current.top;\n      onDragScroll({ x, y });\n    }\n  }\n\n  /**\n   * We bind wheel event imperatively so we can switch off passive\n   * mode for document wheel event to allow it to be prevented\n   */\n  React.useEffect(() => {\n    const handleWheel = (event: WheelEvent) => {\n      const element = event.target as HTMLElement;\n      const isScrollbarWheel = scrollbar?.contains(element);\n      if (isScrollbarWheel) handleWheelScroll(event, maxScrollPos);\n    };\n    document.addEventListener('wheel', handleWheel, { passive: false });\n    return () => document.removeEventListener('wheel', handleWheel, { passive: false } as any);\n  }, [viewport, scrollbar, maxScrollPos, handleWheelScroll]);\n\n  /**\n   * Update thumb position on sizes change\n   */\n  React.useEffect(handleThumbPositionChange, [sizes, handleThumbPositionChange]);\n\n  useResizeObserver(scrollbar, handleResize);\n  useResizeObserver(context.content, handleResize);\n\n  return (\n    <ScrollbarProvider\n      scope={__scopeScrollArea}\n      scrollbar={scrollbar}\n      hasThumb={hasThumb}\n      onThumbChange={useCallbackRef(onThumbChange)}\n      onThumbPointerUp={useCallbackRef(onThumbPointerUp)}\n      onThumbPositionChange={handleThumbPositionChange}\n      onThumbPointerDown={useCallbackRef(onThumbPointerDown)}\n    >\n      <Primitive.div\n        {...scrollbarProps}\n        ref={composeRefs}\n        style={{ position: 'absolute', ...scrollbarProps.style }}\n        onPointerDown={composeEventHandlers(props.onPointerDown, (event) => {\n          const mainPointer = 0;\n          if (event.button === mainPointer) {\n            const element = event.target as HTMLElement;\n            element.setPointerCapture(event.pointerId);\n            rectRef.current = scrollbar!.getBoundingClientRect();\n            // pointer capture doesn't prevent text selection in Safari\n            // so we remove text selection manually when scrolling\n            prevWebkitUserSelectRef.current = document.body.style.webkitUserSelect;\n            document.body.style.webkitUserSelect = 'none';\n            if (context.viewport) context.viewport.style.scrollBehavior = 'auto';\n            handleDragScroll(event);\n          }\n        })}\n        onPointerMove={composeEventHandlers(props.onPointerMove, handleDragScroll)}\n        onPointerUp={composeEventHandlers(props.onPointerUp, (event) => {\n          const element = event.target as HTMLElement;\n          if (element.hasPointerCapture(event.pointerId)) {\n            element.releasePointerCapture(event.pointerId);\n          }\n          document.body.style.webkitUserSelect = prevWebkitUserSelectRef.current;\n          if (context.viewport) context.viewport.style.scrollBehavior = '';\n          rectRef.current = null;\n        })}\n      />\n    </ScrollbarProvider>\n  );\n});\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaThumb\n * -----------------------------------------------------------------------------------------------*/\n\nconst THUMB_NAME = 'ScrollAreaThumb';\n\ntype ScrollAreaThumbElement = ScrollAreaThumbImplElement;\ninterface ScrollAreaThumbProps extends ScrollAreaThumbImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst ScrollAreaThumb = React.forwardRef<ScrollAreaThumbElement, ScrollAreaThumbProps>(\n  (props: ScopedProps<ScrollAreaThumbProps>, forwardedRef) => {\n    const { forceMount, ...thumbProps } = props;\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, props.__scopeScrollArea);\n    return (\n      <Presence present={forceMount || scrollbarContext.hasThumb}>\n        <ScrollAreaThumbImpl ref={forwardedRef} {...thumbProps} />\n      </Presence>\n    );\n  }\n);\n\ntype ScrollAreaThumbImplElement = React.ComponentRef<typeof Primitive.div>;\ninterface ScrollAreaThumbImplProps extends PrimitiveDivProps {}\n\nconst ScrollAreaThumbImpl = React.forwardRef<ScrollAreaThumbImplElement, ScrollAreaThumbImplProps>(\n  (props: ScopedProps<ScrollAreaThumbImplProps>, forwardedRef) => {\n    const { __scopeScrollArea, style, ...thumbProps } = props;\n    const scrollAreaContext = useScrollAreaContext(THUMB_NAME, __scopeScrollArea);\n    const scrollbarContext = useScrollbarContext(THUMB_NAME, __scopeScrollArea);\n    const { onThumbPositionChange } = scrollbarContext;\n    const composedRef = useComposedRefs(forwardedRef, (node) =>\n      scrollbarContext.onThumbChange(node)\n    );\n    const removeUnlinkedScrollListenerRef = React.useRef<() => void>(undefined);\n    const debounceScrollEnd = useDebounceCallback(() => {\n      if (removeUnlinkedScrollListenerRef.current) {\n        removeUnlinkedScrollListenerRef.current();\n        removeUnlinkedScrollListenerRef.current = undefined;\n      }\n    }, 100);\n\n    React.useEffect(() => {\n      const viewport = scrollAreaContext.viewport;\n      if (viewport) {\n        /**\n         * We only bind to native scroll event so we know when scroll starts and ends.\n         * When scroll starts we start a requestAnimationFrame loop that checks for\n         * changes to scroll position. That rAF loop triggers our thumb position change\n         * when relevant to avoid scroll-linked effects. We cancel the loop when scroll ends.\n         * https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\n         */\n        const handleScroll = () => {\n          debounceScrollEnd();\n          if (!removeUnlinkedScrollListenerRef.current) {\n            const listener = addUnlinkedScrollListener(viewport, onThumbPositionChange);\n            removeUnlinkedScrollListenerRef.current = listener;\n            onThumbPositionChange();\n          }\n        };\n        onThumbPositionChange();\n        viewport.addEventListener('scroll', handleScroll);\n        return () => viewport.removeEventListener('scroll', handleScroll);\n      }\n    }, [scrollAreaContext.viewport, debounceScrollEnd, onThumbPositionChange]);\n\n    return (\n      <Primitive.div\n        data-state={scrollbarContext.hasThumb ? 'visible' : 'hidden'}\n        {...thumbProps}\n        ref={composedRef}\n        style={{\n          width: 'var(--radix-scroll-area-thumb-width)',\n          height: 'var(--radix-scroll-area-thumb-height)',\n          ...style,\n        }}\n        onPointerDownCapture={composeEventHandlers(props.onPointerDownCapture, (event) => {\n          const thumb = event.target as HTMLElement;\n          const thumbRect = thumb.getBoundingClientRect();\n          const x = event.clientX - thumbRect.left;\n          const y = event.clientY - thumbRect.top;\n          scrollbarContext.onThumbPointerDown({ x, y });\n        })}\n        onPointerUp={composeEventHandlers(props.onPointerUp, scrollbarContext.onThumbPointerUp)}\n      />\n    );\n  }\n);\n\nScrollAreaThumb.displayName = THUMB_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * ScrollAreaCorner\n * -----------------------------------------------------------------------------------------------*/\n\nconst CORNER_NAME = 'ScrollAreaCorner';\n\ntype ScrollAreaCornerElement = ScrollAreaCornerImplElement;\ninterface ScrollAreaCornerProps extends ScrollAreaCornerImplProps {}\n\nconst ScrollAreaCorner = React.forwardRef<ScrollAreaCornerElement, ScrollAreaCornerProps>(\n  (props: ScopedProps<ScrollAreaCornerProps>, forwardedRef) => {\n    const context = useScrollAreaContext(CORNER_NAME, props.__scopeScrollArea);\n    const hasBothScrollbarsVisible = Boolean(context.scrollbarX && context.scrollbarY);\n    const hasCorner = context.type !== 'scroll' && hasBothScrollbarsVisible;\n    return hasCorner ? <ScrollAreaCornerImpl {...props} ref={forwardedRef} /> : null;\n  }\n);\n\nScrollAreaCorner.displayName = CORNER_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype ScrollAreaCornerImplElement = React.ComponentRef<typeof Primitive.div>;\ninterface ScrollAreaCornerImplProps extends PrimitiveDivProps {}\n\nconst ScrollAreaCornerImpl = React.forwardRef<\n  ScrollAreaCornerImplElement,\n  ScrollAreaCornerImplProps\n>((props: ScopedProps<ScrollAreaCornerImplProps>, forwardedRef) => {\n  const { __scopeScrollArea, ...cornerProps } = props;\n  const context = useScrollAreaContext(CORNER_NAME, __scopeScrollArea);\n  const [width, setWidth] = React.useState(0);\n  const [height, setHeight] = React.useState(0);\n  const hasSize = Boolean(width && height);\n\n  useResizeObserver(context.scrollbarX, () => {\n    const height = context.scrollbarX?.offsetHeight || 0;\n    context.onCornerHeightChange(height);\n    setHeight(height);\n  });\n\n  useResizeObserver(context.scrollbarY, () => {\n    const width = context.scrollbarY?.offsetWidth || 0;\n    context.onCornerWidthChange(width);\n    setWidth(width);\n  });\n\n  return hasSize ? (\n    <Primitive.div\n      {...cornerProps}\n      ref={forwardedRef}\n      style={{\n        width,\n        height,\n        position: 'absolute',\n        right: context.dir === 'ltr' ? 0 : undefined,\n        left: context.dir === 'rtl' ? 0 : undefined,\n        bottom: 0,\n        ...props.style,\n      }}\n    />\n  ) : null;\n});\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction toInt(value?: string) {\n  return value ? parseInt(value, 10) : 0;\n}\n\nfunction getThumbRatio(viewportSize: number, contentSize: number) {\n  const ratio = viewportSize / contentSize;\n  return isNaN(ratio) ? 0 : ratio;\n}\n\nfunction getThumbSize(sizes: Sizes) {\n  const ratio = getThumbRatio(sizes.viewport, sizes.content);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const thumbSize = (sizes.scrollbar.size - scrollbarPadding) * ratio;\n  // minimum of 18 matches macOS minimum\n  return Math.max(thumbSize, 18);\n}\n\nfunction getScrollPositionFromPointer(\n  pointerPos: number,\n  pointerOffset: number,\n  sizes: Sizes,\n  dir: Direction = 'ltr'\n) {\n  const thumbSizePx = getThumbSize(sizes);\n  const thumbCenter = thumbSizePx / 2;\n  const offset = pointerOffset || thumbCenter;\n  const thumbOffsetFromEnd = thumbSizePx - offset;\n  const minPointerPos = sizes.scrollbar.paddingStart + offset;\n  const maxPointerPos = sizes.scrollbar.size - sizes.scrollbar.paddingEnd - thumbOffsetFromEnd;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const scrollRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const interpolate = linearScale([minPointerPos, maxPointerPos], scrollRange as [number, number]);\n  return interpolate(pointerPos);\n}\n\nfunction getThumbOffsetFromScroll(scrollPos: number, sizes: Sizes, dir: Direction = 'ltr') {\n  const thumbSizePx = getThumbSize(sizes);\n  const scrollbarPadding = sizes.scrollbar.paddingStart + sizes.scrollbar.paddingEnd;\n  const scrollbar = sizes.scrollbar.size - scrollbarPadding;\n  const maxScrollPos = sizes.content - sizes.viewport;\n  const maxThumbPos = scrollbar - thumbSizePx;\n  const scrollClampRange = dir === 'ltr' ? [0, maxScrollPos] : [maxScrollPos * -1, 0];\n  const scrollWithoutMomentum = clamp(scrollPos, scrollClampRange as [number, number]);\n  const interpolate = linearScale([0, maxScrollPos], [0, maxThumbPos]);\n  return interpolate(scrollWithoutMomentum);\n}\n\n// https://github.com/tmcw-up-for-adoption/simple-linear-scale/blob/master/index.js\nfunction linearScale(input: readonly [number, number], output: readonly [number, number]) {\n  return (value: number) => {\n    if (input[0] === input[1] || output[0] === output[1]) return output[0];\n    const ratio = (output[1] - output[0]) / (input[1] - input[0]);\n    return output[0] + ratio * (value - input[0]);\n  };\n}\n\nfunction isScrollingWithinScrollbarBounds(scrollPos: number, maxScrollPos: number) {\n  return scrollPos > 0 && scrollPos < maxScrollPos;\n}\n\n// Custom scroll handler to avoid scroll-linked effects\n// https://developer.mozilla.org/en-US/docs/Mozilla/Performance/Scroll-linked_effects\nconst addUnlinkedScrollListener = (node: HTMLElement, handler = () => {}) => {\n  let prevPosition = { left: node.scrollLeft, top: node.scrollTop };\n  let rAF = 0;\n  (function loop() {\n    const position = { left: node.scrollLeft, top: node.scrollTop };\n    const isHorizontalScroll = prevPosition.left !== position.left;\n    const isVerticalScroll = prevPosition.top !== position.top;\n    if (isHorizontalScroll || isVerticalScroll) handler();\n    prevPosition = position;\n    rAF = window.requestAnimationFrame(loop);\n  })();\n  return () => window.cancelAnimationFrame(rAF);\n};\n\nfunction useDebounceCallback(callback: () => void, delay: number) {\n  const handleCallback = useCallbackRef(callback);\n  const debounceTimerRef = React.useRef(0);\n  React.useEffect(() => () => window.clearTimeout(debounceTimerRef.current), []);\n  return React.useCallback(() => {\n    window.clearTimeout(debounceTimerRef.current);\n    debounceTimerRef.current = window.setTimeout(handleCallback, delay);\n  }, [handleCallback, delay]);\n}\n\nfunction useResizeObserver(element: HTMLElement | null, onResize: () => void) {\n  const handleResize = useCallbackRef(onResize);\n  useLayoutEffect(() => {\n    let rAF = 0;\n    if (element) {\n      /**\n       * Resize Observer will throw an often benign error that says `ResizeObserver loop\n       * completed with undelivered notifications`. This means that ResizeObserver was not\n       * able to deliver all observations within a single animation frame, so we use\n       * `requestAnimationFrame` to ensure we don't deliver unnecessary observations.\n       * Further reading: https://github.com/WICG/resize-observer/issues/38\n       */\n      const resizeObserver = new ResizeObserver(() => {\n        cancelAnimationFrame(rAF);\n        rAF = window.requestAnimationFrame(handleResize);\n      });\n      resizeObserver.observe(element);\n      return () => {\n        window.cancelAnimationFrame(rAF);\n        resizeObserver.unobserve(element);\n      };\n    }\n  }, [element, handleResize]);\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst Root = ScrollArea;\nconst Viewport = ScrollAreaViewport;\nconst Scrollbar = ScrollAreaScrollbar;\nconst Thumb = ScrollAreaThumb;\nconst Corner = ScrollAreaCorner;\n\nexport {\n  createScrollAreaScope,\n  //\n  ScrollArea,\n  ScrollAreaViewport,\n  ScrollAreaScrollbar,\n  ScrollAreaThumb,\n  ScrollAreaCorner,\n  //\n  Root,\n  Viewport,\n  Scrollbar,\n  Thumb,\n  Corner,\n};\nexport type {\n  ScrollAreaProps,\n  ScrollAreaViewportProps,\n  ScrollAreaScrollbarProps,\n  ScrollAreaThumbProps,\n  ScrollAreaCornerProps,\n};\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n"],"names":["useIsomorphicLayoutEffect","canUse","Nq","rehackt","useLayoutEffect","useEffect","useMutation","mutation","options","client","useApolloClient","x","parser","Vp","n_","Mutation","_a","useState","called","loading","result","setResult","ref","useRef","mutationId","isMounted","Object","assign","current","execute","useCallback","executeOptions","baseOptions","tslib_es6","pi","ignoreResults","error","data","clientOptions","mergeOptions","J","mutate","then","response","_b","errors","length","client_errors","cA","graphQLErrors","onError","result_1","lib","D","onCompleted","result_2","reset","result_3","Presence","getter","mayWarn","present","children","props","presence","usePresence","initialState","machine","node","setNode","React2","stylesRef","prevPresentRef","prevAnimationNameRef","state","send","mounted","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","React","event","nextState","currentAnimationName","getAnimationName","styles","wasPresent","prevAnimationName","display","timeoutId","ownerWindow","ownerDocument","defaultView","window","handleAnimationEnd","isCurrentAnimation","includes","CSS","escape","animationName","target","currentFillMode","style","animationFillMode","setTimeout","handleAnimationStart","addEventListener","clearTimeout","removeEventListener","isPresent","getComputedStyle","child","only","useComposedRefs","getOwnPropertyDescriptor","element","get","isReactWarning","forceMount","displayName","composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","defaultPrevented","document","createElement","SCROLL_AREA_NAME","createScrollAreaContext","createScrollAreaScope","createContextScope","ScrollAreaProvider","useScrollAreaContext","ScrollArea","forwardedRef","__scopeScrollArea","type","dir","scrollHideDelay","scrollAreaProps","scrollArea","setScrollArea","viewport","setViewport","content","setContent","scrollbarX","setScrollbarX","scrollbarY","setScrollbarY","cornerWidth","setCornerWidth","cornerHeight","setCornerHeight","scrollbarXEnabled","setScrollbarXEnabled","scrollbarYEnabled","setScrollbarYEnabled","composedRefs","direction","useDirection","jsx","scope","onViewportChange","onContentChange","onScrollbarXChange","onScrollbarXEnabledChange","onScrollbarYChange","onScrollbarYEnabledChange","onCornerWidthChange","onCornerHeightChange","Primitive","div","position","VIEWPORT_NAME","ScrollAreaViewport","nonce","viewportProps","context","jsxs","Fragment","dangerouslySetInnerHTML","__html","overflowX","overflowY","minWidth","SCROLLBAR_NAME","ScrollAreaScrollbar","scrollbarProps","isHorizontal","orientation","ScrollAreaScrollbarHover","ScrollAreaScrollbarScroll","ScrollAreaScrollbarAuto","ScrollAreaScrollbarVisible","visible","setVisible","hideTimer","handlePointerEnter","handlePointerLeave","debounceScrollEnd","useDebounceCallback","hidden","SCROLL","scrolling","SCROLL_END","POINTER_ENTER","interacting","POINTER_LEAVE","idle","HIDE","scrollDirection","prevScrollPos","handleScroll","scrollPos","onPointerEnter","onPointerLeave","handleResize","isOverflowX","offsetWidth","scrollWidth","isOverflowY","offsetHeight","scrollHeight","useResizeObserver","thumbRef","pointerOffsetRef","sizes","setSizes","scrollbar","size","paddingStart","paddingEnd","thumbRatio","getThumbRatio","commonProps","onSizesChange","hasThumb","Boolean","onThumbChange","thumb","onThumbPointerUp","onThumbPointerDown","pointerPos","getScrollPosition","getScrollPositionFromPointer","pointerOffset","thumbSizePx","getThumbSize","offset","minPointerPos","maxPointerPos","maxScrollPos","interpolate","ScrollAreaScrollbarX","onThumbPositionChange","getThumbOffsetFromScroll","scrollLeft","transform","concat","onWheelScroll","onDragScroll","ScrollAreaScrollbarY","scrollTop","computedStyle","setComputedStyle","composeRefs","ScrollAreaScrollbarImpl","bottom","left","right","deltaX","preventDefault","onResize","clientWidth","toInt","paddingLeft","paddingRight","top","y","deltaY","clientHeight","paddingTop","paddingBottom","ScrollbarProvider","useScrollbarContext","setScrollbar","rectRef","prevWebkitUserSelectRef","handleWheelScroll","useCallbackRef","handleThumbPositionChange","handleDragScroll","clientX","clientY","handleWheel","contains","passive","onPointerDown","button","setPointerCapture","pointerId","getBoundingClientRect","body","webkitUserSelect","scrollBehavior","onPointerMove","onPointerUp","hasPointerCapture","releasePointerCapture","THUMB_NAME","ScrollAreaThumb","thumbProps","scrollbarContext","ScrollAreaThumbImpl","scrollAreaContext","composedRef","removeUnlinkedScrollListenerRef","listener","addUnlinkedScrollListener","width","height","onPointerDownCapture","thumbRect","CORNER_NAME","ScrollAreaCorner","hasBothScrollbarsVisible","hasCorner","ScrollAreaCornerImpl","cornerProps","setWidth","setHeight","hasSize","value","parseInt","viewportSize","contentSize","ratio","isNaN","scrollbarPadding","Math","max","scrollWithoutMomentum","clamp","linearScale","input","output","handler","prevPosition","rAF","loop","isHorizontalScroll","isVerticalScroll","requestAnimationFrame","cancelAnimationFrame","callback","delay","handleCallback","debounceTimerRef","resizeObserver","ResizeObserver","observe","unobserve","Root","Viewport","Corner"],"sourceRoot":""}