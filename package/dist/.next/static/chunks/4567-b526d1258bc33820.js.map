{"version":3,"file":"static/chunks/4567-b526d1258bc33820.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@radix-ui/react-dialog/node_modules/@radix-ui/primitive/dist/index.mjs","webpack://_N_E/../src/dismissable-layer.tsx","webpack://_N_E/../src/presence.tsx","webpack://_N_E/../src/use-state-machine.tsx","webpack://_N_E/../src/focus-guards.tsx","webpack://_N_E/../src/dialog.tsx"],"sourcesContent":["// src/primitive.tsx\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\nfunction getOwnerWindow(element) {\n  if (!canUseDOM) {\n    throw new Error(\"Cannot access window outside of the DOM\");\n  }\n  return element?.ownerDocument?.defaultView ?? window;\n}\nfunction getOwnerDocument(element) {\n  if (!canUseDOM) {\n    throw new Error(\"Cannot access document outside of the DOM\");\n  }\n  return element?.ownerDocument ?? document;\n}\nfunction getActiveElement(node, activeDescendant = false) {\n  const { activeElement } = getOwnerDocument(node);\n  if (!activeElement?.nodeName) {\n    return null;\n  }\n  if (isFrame(activeElement) && activeElement.contentDocument) {\n    return getActiveElement(activeElement.contentDocument.body, activeDescendant);\n  }\n  if (activeDescendant) {\n    const id = activeElement.getAttribute(\"aria-activedescendant\");\n    if (id) {\n      const element = getOwnerDocument(activeElement).getElementById(id);\n      if (element) {\n        return element;\n      }\n    }\n  }\n  return activeElement;\n}\nfunction isFrame(element) {\n  return element.tagName === \"IFRAME\";\n}\nexport {\n  canUseDOM,\n  composeEventHandlers,\n  getActiveElement,\n  getOwnerDocument,\n  getOwnerWindow,\n  isFrame\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst CONTEXT_UPDATE = 'dismissableLayer.update';\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n\nlet originalBodyPointerEvents: string;\n\nconst DismissableLayerContext = React.createContext({\n  layers: new Set<DismissableLayerElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<DismissableLayerElement>(),\n  branches: new Set<DismissableLayerBranchElement>(),\n});\n\ntype DismissableLayerElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState<DismissableLayerElement | null>(null);\n    const ownerDocument = node?.ownerDocument ?? globalThis?.document;\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled!); // prettier-ignore\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault();\n        onDismiss();\n      }\n    }, ownerDocument);\n\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n          ownerDocument.body.style.pointerEvents = 'none';\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node);\n      }\n      context.layers.add(node);\n      dispatchUpdate();\n      return () => {\n        if (\n          disableOutsidePointerEvents &&\n          context.layersWithOutsidePointerEventsDisabled.size === 1\n        ) {\n          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      };\n    }, [node, ownerDocument, disableOutsidePointerEvents, context]);\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n\n    return (\n      <Primitive.div\n        {...layerProps}\n        ref={composedRefs}\n        style={{\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture)}\n        onBlurCapture={composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture)}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableLayerBranch';\n\ntype DismissableLayerBranchElement = React.ComponentRef<typeof Primitive.div>;\ninterface DismissableLayerBranchProps extends PrimitiveDivProps {}\n\nconst DismissableLayerBranch = React.forwardRef<\n  DismissableLayerBranchElement,\n  DismissableLayerBranchProps\n>((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef<DismissableLayerBranchElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n\n  return <Primitive.div {...props} ref={composedRefs} />;\n});\n\nDismissableLayerBranch.displayName = BRANCH_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n  const handleClickRef = React.useRef(() => {});\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          );\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executres events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          ownerDocument.addEventListener('click', handleClickRef.current, { once: true });\n        } else {\n          handleAndDispatchPointerDownOutsideEvent();\n        }\n      } else {\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.current);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown);\n      ownerDocument.removeEventListener('click', handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(\n  onFocusOutside?: (event: FocusOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false,\n        });\n      }\n    };\n    ownerDocument.addEventListener('focusin', handleFocus);\n    return () => ownerDocument.removeEventListener('focusin', handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\n\nfunction handleAndDispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event);\n  } else {\n    target.dispatchEvent(event);\n  }\n}\n\nconst Root = DismissableLayer;\nconst Branch = DismissableLayerBranch;\n\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n};\nexport type { DismissableLayerProps };\n","import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './use-state-machine';\n\ninterface PresenceProps {\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n  present: boolean;\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement<{ ref?: React.Ref<HTMLElement> }>;\n\n  const ref = useComposedRefs(presence.ref, getElementRef(child));\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration | null>(null);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      let timeoutId: number;\n      const ownerWindow = node.ownerDocument.defaultView ?? window;\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        // The event.animationName is unescaped for CSS syntax,\n        // so we need to escape it to compare with the animationName computed from the style.\n        const isCurrentAnimation = currentAnimationName.includes(CSS.escape(event.animationName));\n        if (event.target === node && isCurrentAnimation) {\n          // With React 18 concurrency this update is applied a frame after the\n          // animation ends, creating a flash of visible content. By setting the\n          // animation fill mode to \"forwards\", we force the node to keep the\n          // styles of the last keyframe, removing the flash.\n          //\n          // Previously we flushed the update via ReactDom.flushSync, but with\n          // exit animations this resulted in the node being removed from the\n          // DOM before the synthetic animationEnd event was dispatched, meaning\n          // user-provided event handlers would not be called.\n          // https://github.com/radix-ui/primitives/pull/1849\n          send('ANIMATION_END');\n          if (!prevPresentRef.current) {\n            const currentFillMode = node.style.animationFillMode;\n            node.style.animationFillMode = 'forwards';\n            // Reset the style after the node had time to unmount (for cases\n            // where the component chooses not to unmount). Doing this any\n            // sooner than `setTimeout` (e.g. with `requestAnimationFrame`)\n            // still causes a flash.\n            timeoutId = ownerWindow.setTimeout(() => {\n              if (node.style.animationFillMode === 'forwards') {\n                node.style.animationFillMode = currentFillMode;\n              }\n            });\n          }\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        ownerWindow.clearTimeout(timeoutId);\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      stylesRef.current = node ? getComputedStyle(node) : null;\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles: CSSStyleDeclaration | null) {\n  return styles?.animationName || 'none';\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement<{ ref?: React.Ref<unknown> }>) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n\n  // Not DEV\n  return element.props.ref || (element as any).ref;\n}\n\nconst Root = Presence;\n\nexport {\n  Presence,\n  //\n  Root,\n};\nexport type { PresenceProps };\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n","import * as React from 'react';\n\n/** Number of components which have requested interest to have focus guards */\nlet count = 0;\n\ninterface FocusGuardsProps {\n  children?: React.ReactNode;\n}\n\nfunction FocusGuards(props: FocusGuardsProps) {\n  useFocusGuards();\n  return props.children;\n}\n\n/**\n * Injects a pair of focus guards at the edges of the whole DOM tree\n * to ensure `focusin` & `focusout` events can be caught consistently.\n */\nfunction useFocusGuards() {\n  /* eslint-disable no-restricted-globals */\n  React.useEffect(() => {\n    const edgeGuards = document.querySelectorAll('[data-radix-focus-guard]');\n    document.body.insertAdjacentElement('afterbegin', edgeGuards[0] ?? createFocusGuard());\n    document.body.insertAdjacentElement('beforeend', edgeGuards[1] ?? createFocusGuard());\n    count++;\n\n    return () => {\n      if (count === 1) {\n        document.querySelectorAll('[data-radix-focus-guard]').forEach((node) => node.remove());\n      }\n      count--;\n    };\n  }, []);\n  /* eslint-enable no-restricted-globals */\n}\n\nfunction createFocusGuard() {\n  // eslint-disable-next-line no-restricted-globals\n  const element = document.createElement('span');\n  element.setAttribute('data-radix-focus-guard', '');\n  element.tabIndex = 0;\n  element.style.outline = 'none';\n  element.style.opacity = '0';\n  element.style.position = 'fixed';\n  element.style.pointerEvents = 'none';\n  return element;\n}\n\nexport {\n  FocusGuards,\n  //\n  FocusGuards as Root,\n  //\n  useFocusGuards,\n};\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContext, createContextScope } from '@radix-ui/react-context';\nimport { useId } from '@radix-ui/react-id';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { FocusScope } from '@radix-ui/react-focus-scope';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useFocusGuards } from '@radix-ui/react-focus-guards';\nimport { RemoveScroll } from 'react-remove-scroll';\nimport { hideOthers } from 'aria-hidden';\nimport { createSlot } from '@radix-ui/react-slot';\n\nimport type { Scope } from '@radix-ui/react-context';\n\n/* -------------------------------------------------------------------------------------------------\n * Dialog\n * -----------------------------------------------------------------------------------------------*/\n\nconst DIALOG_NAME = 'Dialog';\n\ntype ScopedProps<P> = P & { __scopeDialog?: Scope };\nconst [createDialogContext, createDialogScope] = createContextScope(DIALOG_NAME);\n\ntype DialogContextValue = {\n  triggerRef: React.RefObject<HTMLButtonElement | null>;\n  contentRef: React.RefObject<DialogContentElement | null>;\n  contentId: string;\n  titleId: string;\n  descriptionId: string;\n  open: boolean;\n  onOpenChange(open: boolean): void;\n  onOpenToggle(): void;\n  modal: boolean;\n};\n\nconst [DialogProvider, useDialogContext] = createDialogContext<DialogContextValue>(DIALOG_NAME);\n\ninterface DialogProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?(open: boolean): void;\n  modal?: boolean;\n}\n\nconst Dialog: React.FC<DialogProps> = (props: ScopedProps<DialogProps>) => {\n  const {\n    __scopeDialog,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    modal = true,\n  } = props;\n  const triggerRef = React.useRef<HTMLButtonElement>(null);\n  const contentRef = React.useRef<DialogContentElement>(null);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: onOpenChange,\n    caller: DIALOG_NAME,\n  });\n\n  return (\n    <DialogProvider\n      scope={__scopeDialog}\n      triggerRef={triggerRef}\n      contentRef={contentRef}\n      contentId={useId()}\n      titleId={useId()}\n      descriptionId={useId()}\n      open={open}\n      onOpenChange={setOpen}\n      onOpenToggle={React.useCallback(() => setOpen((prevOpen) => !prevOpen), [setOpen])}\n      modal={modal}\n    >\n      {children}\n    </DialogProvider>\n  );\n};\n\nDialog.displayName = DIALOG_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'DialogTrigger';\n\ntype DialogTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface DialogTriggerProps extends PrimitiveButtonProps {}\n\nconst DialogTrigger = React.forwardRef<DialogTriggerElement, DialogTriggerProps>(\n  (props: ScopedProps<DialogTriggerProps>, forwardedRef) => {\n    const { __scopeDialog, ...triggerProps } = props;\n    const context = useDialogContext(TRIGGER_NAME, __scopeDialog);\n    const composedTriggerRef = useComposedRefs(forwardedRef, context.triggerRef);\n    return (\n      <Primitive.button\n        type=\"button\"\n        aria-haspopup=\"dialog\"\n        aria-expanded={context.open}\n        aria-controls={context.contentId}\n        data-state={getState(context.open)}\n        {...triggerProps}\n        ref={composedTriggerRef}\n        onClick={composeEventHandlers(props.onClick, context.onOpenToggle)}\n      />\n    );\n  }\n);\n\nDialogTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'DialogPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createDialogContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface DialogPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogPortal: React.FC<DialogPortalProps> = (props: ScopedProps<DialogPortalProps>) => {\n  const { __scopeDialog, forceMount, children, container } = props;\n  const context = useDialogContext(PORTAL_NAME, __scopeDialog);\n  return (\n    <PortalProvider scope={__scopeDialog} forceMount={forceMount}>\n      {React.Children.map(children, (child) => (\n        <Presence present={forceMount || context.open}>\n          <PortalPrimitive asChild container={container}>\n            {child}\n          </PortalPrimitive>\n        </Presence>\n      ))}\n    </PortalProvider>\n  );\n};\n\nDialogPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogOverlay\n * -----------------------------------------------------------------------------------------------*/\n\nconst OVERLAY_NAME = 'DialogOverlay';\n\ntype DialogOverlayElement = DialogOverlayImplElement;\ninterface DialogOverlayProps extends DialogOverlayImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogOverlay = React.forwardRef<DialogOverlayElement, DialogOverlayProps>(\n  (props: ScopedProps<DialogOverlayProps>, forwardedRef) => {\n    const portalContext = usePortalContext(OVERLAY_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, props.__scopeDialog);\n    return context.modal ? (\n      <Presence present={forceMount || context.open}>\n        <DialogOverlayImpl {...overlayProps} ref={forwardedRef} />\n      </Presence>\n    ) : null;\n  }\n);\n\nDialogOverlay.displayName = OVERLAY_NAME;\n\ntype DialogOverlayImplElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DialogOverlayImplProps extends PrimitiveDivProps {}\n\nconst Slot = createSlot('DialogOverlay.RemoveScroll');\n\nconst DialogOverlayImpl = React.forwardRef<DialogOverlayImplElement, DialogOverlayImplProps>(\n  (props: ScopedProps<DialogOverlayImplProps>, forwardedRef) => {\n    const { __scopeDialog, ...overlayProps } = props;\n    const context = useDialogContext(OVERLAY_NAME, __scopeDialog);\n    return (\n      // Make sure `Content` is scrollable even when it doesn't live inside `RemoveScroll`\n      // ie. when `Overlay` and `Content` are siblings\n      <RemoveScroll as={Slot} allowPinchZoom shards={[context.contentRef]}>\n        <Primitive.div\n          data-state={getState(context.open)}\n          {...overlayProps}\n          ref={forwardedRef}\n          // We re-enable pointer-events prevented by `Dialog.Content` to allow scrolling the overlay.\n          style={{ pointerEvents: 'auto', ...overlayProps.style }}\n        />\n      </RemoveScroll>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'DialogContent';\n\ntype DialogContentElement = DialogContentTypeElement;\ninterface DialogContentProps extends DialogContentTypeProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst DialogContent = React.forwardRef<DialogContentElement, DialogContentProps>(\n  (props: ScopedProps<DialogContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeDialog);\n    const { forceMount = portalContext.forceMount, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.modal ? (\n          <DialogContentModal {...contentProps} ref={forwardedRef} />\n        ) : (\n          <DialogContentNonModal {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\nDialogContent.displayName = CONTENT_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentTypeElement = DialogContentImplElement;\ninterface DialogContentTypeProps\n  extends Omit<DialogContentImplProps, 'trapFocus' | 'disableOutsidePointerEvents'> {}\n\nconst DialogContentModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, context.contentRef, contentRef);\n\n    // aria-hide everything except the content (better supported equivalent to setting aria-modal)\n    React.useEffect(() => {\n      const content = contentRef.current;\n      if (content) return hideOthers(content);\n    }, []);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={composedRefs}\n        // we make sure focus isn't trapped once `DialogContent` has been closed\n        // (closed !== unmounted when animating out)\n        trapFocus={context.open}\n        disableOutsidePointerEvents\n        onCloseAutoFocus={composeEventHandlers(props.onCloseAutoFocus, (event) => {\n          event.preventDefault();\n          context.triggerRef.current?.focus();\n        })}\n        onPointerDownOutside={composeEventHandlers(props.onPointerDownOutside, (event) => {\n          const originalEvent = event.detail.originalEvent;\n          const ctrlLeftClick = originalEvent.button === 0 && originalEvent.ctrlKey === true;\n          const isRightClick = originalEvent.button === 2 || ctrlLeftClick;\n\n          // If the event is a right-click, we shouldn't close because\n          // it is effectively as if we right-clicked the `Overlay`.\n          if (isRightClick) event.preventDefault();\n        })}\n        // When focus is trapped, a `focusout` event may still happen.\n        // We make sure we don't trigger our `onDismiss` in such case.\n        onFocusOutside={composeEventHandlers(props.onFocusOutside, (event) =>\n          event.preventDefault()\n        )}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\nconst DialogContentNonModal = React.forwardRef<DialogContentTypeElement, DialogContentTypeProps>(\n  (props: ScopedProps<DialogContentTypeProps>, forwardedRef) => {\n    const context = useDialogContext(CONTENT_NAME, props.__scopeDialog);\n    const hasInteractedOutsideRef = React.useRef(false);\n    const hasPointerDownOutsideRef = React.useRef(false);\n\n    return (\n      <DialogContentImpl\n        {...props}\n        ref={forwardedRef}\n        trapFocus={false}\n        disableOutsidePointerEvents={false}\n        onCloseAutoFocus={(event) => {\n          props.onCloseAutoFocus?.(event);\n\n          if (!event.defaultPrevented) {\n            if (!hasInteractedOutsideRef.current) context.triggerRef.current?.focus();\n            // Always prevent auto focus because we either focus manually or want user agent focus\n            event.preventDefault();\n          }\n\n          hasInteractedOutsideRef.current = false;\n          hasPointerDownOutsideRef.current = false;\n        }}\n        onInteractOutside={(event) => {\n          props.onInteractOutside?.(event);\n\n          if (!event.defaultPrevented) {\n            hasInteractedOutsideRef.current = true;\n            if (event.detail.originalEvent.type === 'pointerdown') {\n              hasPointerDownOutsideRef.current = true;\n            }\n          }\n\n          // Prevent dismissing when clicking the trigger.\n          // As the trigger is already setup to close, without doing so would\n          // cause it to close and immediately open.\n          const target = event.target as HTMLElement;\n          const targetIsTrigger = context.triggerRef.current?.contains(target);\n          if (targetIsTrigger) event.preventDefault();\n\n          // On Safari if the trigger is inside a container with tabIndex={0}, when clicked\n          // we will get the pointer down outside event on the trigger, but then a subsequent\n          // focus outside event on the container, we ignore any focus outside event when we've\n          // already had a pointer down outside event.\n          if (event.detail.originalEvent.type === 'focusin' && hasPointerDownOutsideRef.current) {\n            event.preventDefault();\n          }\n        }}\n      />\n    );\n  }\n);\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype DialogContentImplElement = React.ComponentRef<typeof DismissableLayer>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype FocusScopeProps = React.ComponentPropsWithoutRef<typeof FocusScope>;\ninterface DialogContentImplProps extends Omit<DismissableLayerProps, 'onDismiss'> {\n  /**\n   * When `true`, focus cannot escape the `Content` via keyboard,\n   * pointer, or a programmatic focus.\n   * @defaultValue false\n   */\n  trapFocus?: FocusScopeProps['trapped'];\n\n  /**\n   * Event handler called when auto-focusing on open.\n   * Can be prevented.\n   */\n  onOpenAutoFocus?: FocusScopeProps['onMountAutoFocus'];\n\n  /**\n   * Event handler called when auto-focusing on close.\n   * Can be prevented.\n   */\n  onCloseAutoFocus?: FocusScopeProps['onUnmountAutoFocus'];\n}\n\nconst DialogContentImpl = React.forwardRef<DialogContentImplElement, DialogContentImplProps>(\n  (props: ScopedProps<DialogContentImplProps>, forwardedRef) => {\n    const { __scopeDialog, trapFocus, onOpenAutoFocus, onCloseAutoFocus, ...contentProps } = props;\n    const context = useDialogContext(CONTENT_NAME, __scopeDialog);\n    const contentRef = React.useRef<HTMLDivElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, contentRef);\n\n    // Make sure the whole tree has focus guards as our `Dialog` will be\n    // the last element in the DOM (because of the `Portal`)\n    useFocusGuards();\n\n    return (\n      <>\n        <FocusScope\n          asChild\n          loop\n          trapped={trapFocus}\n          onMountAutoFocus={onOpenAutoFocus}\n          onUnmountAutoFocus={onCloseAutoFocus}\n        >\n          <DismissableLayer\n            role=\"dialog\"\n            id={context.contentId}\n            aria-describedby={context.descriptionId}\n            aria-labelledby={context.titleId}\n            data-state={getState(context.open)}\n            {...contentProps}\n            ref={composedRefs}\n            onDismiss={() => context.onOpenChange(false)}\n          />\n        </FocusScope>\n        {process.env.NODE_ENV !== 'production' && (\n          <>\n            <TitleWarning titleId={context.titleId} />\n            <DescriptionWarning contentRef={contentRef} descriptionId={context.descriptionId} />\n          </>\n        )}\n      </>\n    );\n  }\n);\n\n/* -------------------------------------------------------------------------------------------------\n * DialogTitle\n * -----------------------------------------------------------------------------------------------*/\n\nconst TITLE_NAME = 'DialogTitle';\n\ntype DialogTitleElement = React.ComponentRef<typeof Primitive.h2>;\ntype PrimitiveHeading2Props = React.ComponentPropsWithoutRef<typeof Primitive.h2>;\ninterface DialogTitleProps extends PrimitiveHeading2Props {}\n\nconst DialogTitle = React.forwardRef<DialogTitleElement, DialogTitleProps>(\n  (props: ScopedProps<DialogTitleProps>, forwardedRef) => {\n    const { __scopeDialog, ...titleProps } = props;\n    const context = useDialogContext(TITLE_NAME, __scopeDialog);\n    return <Primitive.h2 id={context.titleId} {...titleProps} ref={forwardedRef} />;\n  }\n);\n\nDialogTitle.displayName = TITLE_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogDescription\n * -----------------------------------------------------------------------------------------------*/\n\nconst DESCRIPTION_NAME = 'DialogDescription';\n\ntype DialogDescriptionElement = React.ComponentRef<typeof Primitive.p>;\ntype PrimitiveParagraphProps = React.ComponentPropsWithoutRef<typeof Primitive.p>;\ninterface DialogDescriptionProps extends PrimitiveParagraphProps {}\n\nconst DialogDescription = React.forwardRef<DialogDescriptionElement, DialogDescriptionProps>(\n  (props: ScopedProps<DialogDescriptionProps>, forwardedRef) => {\n    const { __scopeDialog, ...descriptionProps } = props;\n    const context = useDialogContext(DESCRIPTION_NAME, __scopeDialog);\n    return <Primitive.p id={context.descriptionId} {...descriptionProps} ref={forwardedRef} />;\n  }\n);\n\nDialogDescription.displayName = DESCRIPTION_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DialogClose\n * -----------------------------------------------------------------------------------------------*/\n\nconst CLOSE_NAME = 'DialogClose';\n\ntype DialogCloseElement = React.ComponentRef<typeof Primitive.button>;\ninterface DialogCloseProps extends PrimitiveButtonProps {}\n\nconst DialogClose = React.forwardRef<DialogCloseElement, DialogCloseProps>(\n  (props: ScopedProps<DialogCloseProps>, forwardedRef) => {\n    const { __scopeDialog, ...closeProps } = props;\n    const context = useDialogContext(CLOSE_NAME, __scopeDialog);\n    return (\n      <Primitive.button\n        type=\"button\"\n        {...closeProps}\n        ref={forwardedRef}\n        onClick={composeEventHandlers(props.onClick, () => context.onOpenChange(false))}\n      />\n    );\n  }\n);\n\nDialogClose.displayName = CLOSE_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getState(open: boolean) {\n  return open ? 'open' : 'closed';\n}\n\nconst TITLE_WARNING_NAME = 'DialogTitleWarning';\n\nconst [WarningProvider, useWarningContext] = createContext(TITLE_WARNING_NAME, {\n  contentName: CONTENT_NAME,\n  titleName: TITLE_NAME,\n  docsSlug: 'dialog',\n});\n\ntype TitleWarningProps = { titleId?: string };\n\nconst TitleWarning: React.FC<TitleWarningProps> = ({ titleId }) => {\n  const titleWarningContext = useWarningContext(TITLE_WARNING_NAME);\n\n  const MESSAGE = `\\`${titleWarningContext.contentName}\\` requires a \\`${titleWarningContext.titleName}\\` for the component to be accessible for screen reader users.\n\nIf you want to hide the \\`${titleWarningContext.titleName}\\`, you can wrap it with our VisuallyHidden component.\n\nFor more information, see https://radix-ui.com/primitives/docs/components/${titleWarningContext.docsSlug}`;\n\n  React.useEffect(() => {\n    if (titleId) {\n      const hasTitle = document.getElementById(titleId);\n      if (!hasTitle) console.error(MESSAGE);\n    }\n  }, [MESSAGE, titleId]);\n\n  return null;\n};\n\nconst DESCRIPTION_WARNING_NAME = 'DialogDescriptionWarning';\n\ntype DescriptionWarningProps = {\n  contentRef: React.RefObject<DialogContentElement | null>;\n  descriptionId?: string;\n};\n\nconst DescriptionWarning: React.FC<DescriptionWarningProps> = ({ contentRef, descriptionId }) => {\n  const descriptionWarningContext = useWarningContext(DESCRIPTION_WARNING_NAME);\n  const MESSAGE = `Warning: Missing \\`Description\\` or \\`aria-describedby={undefined}\\` for {${descriptionWarningContext.contentName}}.`;\n\n  React.useEffect(() => {\n    const describedById = contentRef.current?.getAttribute('aria-describedby');\n    // if we have an id and the user hasn't set aria-describedby={undefined}\n    if (descriptionId && describedById) {\n      const hasDescription = document.getElementById(descriptionId);\n      if (!hasDescription) console.warn(MESSAGE);\n    }\n  }, [MESSAGE, contentRef, descriptionId]);\n\n  return null;\n};\n\nconst Root = Dialog;\nconst Trigger = DialogTrigger;\nconst Portal = DialogPortal;\nconst Overlay = DialogOverlay;\nconst Content = DialogContent;\nconst Title = DialogTitle;\nconst Description = DialogDescription;\nconst Close = DialogClose;\n\nexport {\n  createDialogScope,\n  //\n  Dialog,\n  DialogTrigger,\n  DialogPortal,\n  DialogOverlay,\n  DialogContent,\n  DialogTitle,\n  DialogDescription,\n  DialogClose,\n  //\n  Root,\n  Trigger,\n  Portal,\n  Overlay,\n  Content,\n  Title,\n  Description,\n  Close,\n  //\n  WarningProvider,\n};\nexport type {\n  DialogProps,\n  DialogTriggerProps,\n  DialogPortalProps,\n  DialogOverlayProps,\n  DialogContentProps,\n  DialogTitleProps,\n  DialogDescriptionProps,\n  DialogCloseProps,\n};\n"],"names":["originalBodyPointerEvents","composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","event","defaultPrevented","window","document","createElement","CONTEXT_UPDATE","DismissableLayerContext","React","layers","Set","layersWithOutsidePointerEventsDisabled","branches","DismissableLayer","props","forwardedRef","globalThis","node","disableOutsidePointerEvents","onEscapeKeyDown","onPointerDownOutside","onFocusOutside","onInteractOutside","onDismiss","layerProps","context","setNode","ownerDocument","force","composedRefs","useComposedRefs","Array","from","highestLayerWithOutsidePointerEventsDisabled","slice","highestLayerWithOutsidePointerEventsDisabledIndex","indexOf","index","isBodyPointerEventsDisabled","size","isPointerEventsEnabled","pointerDownOutside","usePointerDownOutside","handlePointerDownOutside","useCallbackRef","isPointerInsideReactTreeRef","handleClickRef","handlePointerDown","target","current","handleAndDispatchPointerDownOutsideEvent","handleAndDispatchCustomEvent","eventDetail","discrete","originalEvent","pointerType","removeEventListener","addEventListener","once","timerId","setTimeout","clearTimeout","onPointerDownCapture","isPointerDownOnBranch","some","branch","contains","focusOutside","useFocusOutside","handleFocusOutside","isFocusInsideReactTreeRef","handleFocus","onFocusCapture","onBlurCapture","useEscapeKeydown","preventDefault","body","style","pointerEvents","add","dispatchUpdate","delete","handleUpdate","jsx","Primitive","div","ref","CustomEvent","dispatchEvent","name","handler","detail","param","bubbles","cancelable","dispatchDiscreteCustomEvent","displayName","DismissableLayerBranch","Presence","Object","getter","mayWarn","present","children","presence","usePresence","initialState","machine","React2","stylesRef","prevPresentRef","prevAnimationNameRef","state","send","mounted","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","nextState","currentAnimationName","getAnimationName","useLayoutEffect","styles","wasPresent","prevAnimationName","display","timeoutId","ownerWindow","defaultView","handleAnimationEnd","isCurrentAnimation","includes","CSS","escape","animationName","currentFillMode","animationFillMode","handleAnimationStart","isPresent","getComputedStyle","child","only","getOwnPropertyDescriptor","element","get","isReactWarning","forceMount","count","createFocusGuard","setAttribute","tabIndex","outline","opacity","position","DIALOG_NAME","createDialogContext","createDialogScope","createContextScope","DialogProvider","useDialogContext","Dialog","__scopeDialog","open","openProp","defaultOpen","onOpenChange","modal","triggerRef","contentRef","setOpen","useControllableState","prop","defaultProp","onChange","caller","scope","contentId","useId","titleId","descriptionId","onOpenToggle","prevOpen","TRIGGER_NAME","DialogTrigger","triggerProps","composedTriggerRef","button","type","getState","onClick","PORTAL_NAME","PortalProvider","usePortalContext","DialogPortal","container","map","PortalPrimitive","asChild","OVERLAY_NAME","DialogOverlay","portalContext","overlayProps","DialogOverlayImpl","Slot","createSlot","RemoveScroll","as","allowPinchZoom","shards","CONTENT_NAME","DialogContent","contentProps","DialogContentModal","DialogContentNonModal","content","hideOthers","DialogContentImpl","trapFocus","onCloseAutoFocus","focus","ctrlLeftClick","ctrlKey","hasInteractedOutsideRef","hasPointerDownOutsideRef","targetIsTrigger","onOpenAutoFocus","edgeGuards","querySelectorAll","insertAdjacentElement","forEach","remove","jsxs","Fragment","FocusScope","loop","trapped","onMountAutoFocus","onUnmountAutoFocus","role","id","TitleWarning","DescriptionWarning","TITLE_NAME","DialogTitle","titleProps","h2","DESCRIPTION_NAME","DialogDescription","descriptionProps","p","CLOSE_NAME","DialogClose","closeProps","TITLE_WARNING_NAME","WarningProvider","useWarningContext","createContext","contentName","titleName","docsSlug","titleWarningContext","MESSAGE","concat","getElementById","console","error","descriptionWarningContext","describedById","getAttribute","warn","Root","Trigger","Portal","Overlay","Content","Title","Description","Close"],"sourceRoot":""}