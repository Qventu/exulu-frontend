{"version":3,"file":"static/chunks/3197.f00dc8cf065048fd.js","mappings":"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","sources":["webpack://_N_E/./node_modules/codemirror-graphql/esm/utils/info-addon.js"],"sourcesContent":["import CodeMirror from 'codemirror';\nCodeMirror.defineOption('info', false, (cm, options, old) => {\n    if (old && old !== CodeMirror.Init) {\n        const oldOnMouseOver = cm.state.info.onMouseOver;\n        CodeMirror.off(cm.getWrapperElement(), 'mouseover', oldOnMouseOver);\n        clearTimeout(cm.state.info.hoverTimeout);\n        delete cm.state.info;\n    }\n    if (options) {\n        const state = (cm.state.info = createState(options));\n        state.onMouseOver = onMouseOver.bind(null, cm);\n        CodeMirror.on(cm.getWrapperElement(), 'mouseover', state.onMouseOver);\n    }\n});\nfunction createState(options) {\n    return {\n        options: options instanceof Function\n            ? { render: options }\n            : options === true\n                ? {}\n                : options,\n    };\n}\nfunction getHoverTime(cm) {\n    const { options } = cm.state.info;\n    return (options === null || options === void 0 ? void 0 : options.hoverTime) || 500;\n}\nfunction onMouseOver(cm, e) {\n    const state = cm.state.info;\n    const target = e.target || e.srcElement;\n    if (!(target instanceof HTMLElement)) {\n        return;\n    }\n    if (target.nodeName !== 'SPAN' || state.hoverTimeout !== undefined) {\n        return;\n    }\n    const box = target.getBoundingClientRect();\n    const onMouseMove = function () {\n        clearTimeout(state.hoverTimeout);\n        state.hoverTimeout = setTimeout(onHover, hoverTime);\n    };\n    const onMouseOut = function () {\n        CodeMirror.off(document, 'mousemove', onMouseMove);\n        CodeMirror.off(cm.getWrapperElement(), 'mouseout', onMouseOut);\n        clearTimeout(state.hoverTimeout);\n        state.hoverTimeout = undefined;\n    };\n    const onHover = function () {\n        CodeMirror.off(document, 'mousemove', onMouseMove);\n        CodeMirror.off(cm.getWrapperElement(), 'mouseout', onMouseOut);\n        state.hoverTimeout = undefined;\n        onMouseHover(cm, box);\n    };\n    const hoverTime = getHoverTime(cm);\n    state.hoverTimeout = setTimeout(onHover, hoverTime);\n    CodeMirror.on(document, 'mousemove', onMouseMove);\n    CodeMirror.on(cm.getWrapperElement(), 'mouseout', onMouseOut);\n}\nfunction onMouseHover(cm, box) {\n    const pos = cm.coordsChar({\n        left: (box.left + box.right) / 2,\n        top: (box.top + box.bottom) / 2,\n    }, 'window');\n    const state = cm.state.info;\n    const { options } = state;\n    const render = options.render || cm.getHelper(pos, 'info');\n    if (render) {\n        const token = cm.getTokenAt(pos, true);\n        if (token) {\n            const info = render(token, options, cm, pos);\n            if (info) {\n                showPopup(cm, box, info);\n            }\n        }\n    }\n}\nfunction showPopup(cm, box, info) {\n    const popup = document.createElement('div');\n    popup.className = 'CodeMirror-info';\n    popup.append(info);\n    document.body.append(popup);\n    const popupBox = popup.getBoundingClientRect();\n    const { marginLeft, marginRight, marginBottom, marginTop } = getComputedStyle(popup);\n    const popupWidth = popupBox.right -\n        popupBox.left +\n        parseFloat(marginLeft) +\n        parseFloat(marginRight);\n    const popupHeight = popupBox.bottom -\n        popupBox.top +\n        parseFloat(marginTop) +\n        parseFloat(marginBottom);\n    let topPos = box.bottom;\n    if (popupHeight > window.innerHeight - box.bottom - 15 &&\n        box.top > window.innerHeight - box.bottom) {\n        topPos = box.top - popupHeight;\n    }\n    if (topPos < 0) {\n        topPos = box.bottom;\n    }\n    let leftPos = Math.max(0, window.innerWidth - popupWidth - 15);\n    if (leftPos > box.left) {\n        leftPos = box.left;\n    }\n    popup.style.opacity = '1';\n    popup.style.top = topPos + 'px';\n    popup.style.left = leftPos + 'px';\n    let popupTimeout;\n    const onMouseOverPopup = function () {\n        clearTimeout(popupTimeout);\n    };\n    const onMouseOut = function () {\n        clearTimeout(popupTimeout);\n        popupTimeout = setTimeout(hidePopup, 200);\n    };\n    const hidePopup = function () {\n        CodeMirror.off(popup, 'mouseover', onMouseOverPopup);\n        CodeMirror.off(popup, 'mouseout', onMouseOut);\n        CodeMirror.off(cm.getWrapperElement(), 'mouseout', onMouseOut);\n        if (popup.style.opacity) {\n            popup.style.opacity = '0';\n            setTimeout(() => {\n                if (popup.parentNode) {\n                    popup.remove();\n                }\n            }, 600);\n        }\n        else if (popup.parentNode) {\n            popup.remove();\n        }\n    };\n    CodeMirror.on(popup, 'mouseover', onMouseOverPopup);\n    CodeMirror.on(popup, 'mouseout', onMouseOut);\n    CodeMirror.on(cm.getWrapperElement(), 'mouseout', onMouseOut);\n}\n//# sourceMappingURL=info-addon.js.map"],"names":["onMouseOver","cm","e","state","info","target","srcElement","HTMLElement","nodeName","undefined","hoverTimeout","box","getBoundingClientRect","onMouseMove","clearTimeout","setTimeout","onHover","hoverTime","onMouseOut","codemirror__WEBPACK_IMPORTED_MODULE_0___default","off","document","getWrapperElement","onMouseHover","pos","coordsChar","left","right","top","bottom","options","render","getHelper","token","getTokenAt","showPopup","popupTimeout","popup","createElement","className","append","body","popupBox","marginLeft","marginRight","marginBottom","marginTop","getComputedStyle","popupWidth","parseFloat","popupHeight","topPos","window","innerHeight","leftPos","Math","max","innerWidth","style","opacity","onMouseOverPopup","hidePopup","parentNode","remove","on","getHoverTime","defineOption","old","Init","oldOnMouseOver","Function","bind"],"sourceRoot":""}