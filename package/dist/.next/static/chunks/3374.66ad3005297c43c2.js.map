{"version":3,"file":"static/chunks/3374.66ad3005297c43c2.js","mappings":"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","sources":["webpack://_N_E/./node_modules/codemirror-graphql/esm/utils/jump-addon.js","webpack://_N_E/./node_modules/codemirror-graphql/esm/jump.js","webpack://_N_E/./node_modules/codemirror-graphql/esm/utils/SchemaReference.js","webpack://_N_E/./node_modules/codemirror-graphql/esm/utils/forEachState.js","webpack://_N_E/./node_modules/codemirror-graphql/esm/utils/getTypeInfo.js"],"sourcesContent":["import CodeMirror from 'codemirror';\nCodeMirror.defineOption('jump', false, (cm, options, old) => {\n    if (old && old !== CodeMirror.Init) {\n        const oldOnMouseOver = cm.state.jump.onMouseOver;\n        CodeMirror.off(cm.getWrapperElement(), 'mouseover', oldOnMouseOver);\n        const oldOnMouseOut = cm.state.jump.onMouseOut;\n        CodeMirror.off(cm.getWrapperElement(), 'mouseout', oldOnMouseOut);\n        CodeMirror.off(document, 'keydown', cm.state.jump.onKeyDown);\n        delete cm.state.jump;\n    }\n    if (options) {\n        const state = (cm.state.jump = {\n            options,\n            onMouseOver: onMouseOver.bind(null, cm),\n            onMouseOut: onMouseOut.bind(null, cm),\n            onKeyDown: onKeyDown.bind(null, cm),\n        });\n        CodeMirror.on(cm.getWrapperElement(), 'mouseover', state.onMouseOver);\n        CodeMirror.on(cm.getWrapperElement(), 'mouseout', state.onMouseOut);\n        CodeMirror.on(document, 'keydown', state.onKeyDown);\n    }\n});\nfunction onMouseOver(cm, event) {\n    const target = event.target || event.srcElement;\n    if (!(target instanceof HTMLElement)) {\n        return;\n    }\n    if ((target === null || target === void 0 ? void 0 : target.nodeName) !== 'SPAN') {\n        return;\n    }\n    const box = target.getBoundingClientRect();\n    const cursor = {\n        left: (box.left + box.right) / 2,\n        top: (box.top + box.bottom) / 2,\n    };\n    cm.state.jump.cursor = cursor;\n    if (cm.state.jump.isHoldingModifier) {\n        enableJumpMode(cm);\n    }\n}\nfunction onMouseOut(cm) {\n    if (!cm.state.jump.isHoldingModifier && cm.state.jump.cursor) {\n        cm.state.jump.cursor = null;\n        return;\n    }\n    if (cm.state.jump.isHoldingModifier && cm.state.jump.marker) {\n        disableJumpMode(cm);\n    }\n}\nfunction onKeyDown(cm, event) {\n    if (cm.state.jump.isHoldingModifier || !isJumpModifier(event.key)) {\n        return;\n    }\n    cm.state.jump.isHoldingModifier = true;\n    if (cm.state.jump.cursor) {\n        enableJumpMode(cm);\n    }\n    const onKeyUp = (upEvent) => {\n        if (upEvent.code !== event.code) {\n            return;\n        }\n        cm.state.jump.isHoldingModifier = false;\n        if (cm.state.jump.marker) {\n            disableJumpMode(cm);\n        }\n        CodeMirror.off(document, 'keyup', onKeyUp);\n        CodeMirror.off(document, 'click', onClick);\n        cm.off('mousedown', onMouseDown);\n    };\n    const onClick = (clickEvent) => {\n        const { destination, options } = cm.state.jump;\n        if (destination) {\n            options.onClick(destination, clickEvent);\n        }\n    };\n    const onMouseDown = (_, downEvent) => {\n        if (cm.state.jump.destination) {\n            downEvent.codemirrorIgnore = true;\n        }\n    };\n    CodeMirror.on(document, 'keyup', onKeyUp);\n    CodeMirror.on(document, 'click', onClick);\n    cm.on('mousedown', onMouseDown);\n}\nconst isMac = typeof navigator !== 'undefined' && navigator.userAgent.includes('Mac');\nfunction isJumpModifier(key) {\n    return key === (isMac ? 'Meta' : 'Control');\n}\nfunction enableJumpMode(cm) {\n    if (cm.state.jump.marker) {\n        return;\n    }\n    const { cursor, options } = cm.state.jump;\n    const pos = cm.coordsChar(cursor);\n    const token = cm.getTokenAt(pos, true);\n    const getDestination = options.getDestination || cm.getHelper(pos, 'jump');\n    if (getDestination) {\n        const destination = getDestination(token, options, cm);\n        if (destination) {\n            const marker = cm.markText({ line: pos.line, ch: token.start }, { line: pos.line, ch: token.end }, { className: 'CodeMirror-jump-token' });\n            cm.state.jump.marker = marker;\n            cm.state.jump.destination = destination;\n        }\n    }\n}\nfunction disableJumpMode(cm) {\n    const { marker } = cm.state.jump;\n    cm.state.jump.marker = null;\n    cm.state.jump.destination = null;\n    marker.clear();\n}\n//# sourceMappingURL=jump-addon.js.map","import CodeMirror from 'codemirror';\nimport getTypeInfo from './utils/getTypeInfo';\nimport { getArgumentReference, getDirectiveReference, getEnumValueReference, getFieldReference, getTypeReference, } from './utils/SchemaReference';\nimport './utils/jump-addon';\nCodeMirror.registerHelper('jump', 'graphql', (token, options) => {\n    if (!options.schema || !options.onClick || !token.state) {\n        return;\n    }\n    const { state } = token;\n    const { kind, step } = state;\n    const typeInfo = getTypeInfo(options.schema, state);\n    if ((kind === 'Field' && step === 0 && typeInfo.fieldDef) ||\n        (kind === 'AliasedField' && step === 2 && typeInfo.fieldDef)) {\n        return getFieldReference(typeInfo);\n    }\n    if (kind === 'Directive' && step === 1 && typeInfo.directiveDef) {\n        return getDirectiveReference(typeInfo);\n    }\n    if (kind === 'Argument' && step === 0 && typeInfo.argDef) {\n        return getArgumentReference(typeInfo);\n    }\n    if (kind === 'EnumValue' && typeInfo.enumValue) {\n        return getEnumValueReference(typeInfo);\n    }\n    if (kind === 'NamedType' && typeInfo.type) {\n        return getTypeReference(typeInfo);\n    }\n});\n//# sourceMappingURL=jump.js.map","import { getNamedType } from 'graphql';\nexport function getFieldReference(typeInfo) {\n    return {\n        kind: 'Field',\n        schema: typeInfo.schema,\n        field: typeInfo.fieldDef,\n        type: isMetaField(typeInfo.fieldDef) ? null : typeInfo.parentType,\n    };\n}\nexport function getDirectiveReference(typeInfo) {\n    return {\n        kind: 'Directive',\n        schema: typeInfo.schema,\n        directive: typeInfo.directiveDef,\n    };\n}\nexport function getArgumentReference(typeInfo) {\n    return typeInfo.directiveDef\n        ? {\n            kind: 'Argument',\n            schema: typeInfo.schema,\n            argument: typeInfo.argDef,\n            directive: typeInfo.directiveDef,\n        }\n        : {\n            kind: 'Argument',\n            schema: typeInfo.schema,\n            argument: typeInfo.argDef,\n            field: typeInfo.fieldDef,\n            type: isMetaField(typeInfo.fieldDef) ? null : typeInfo.parentType,\n        };\n}\nexport function getEnumValueReference(typeInfo) {\n    return {\n        kind: 'EnumValue',\n        value: typeInfo.enumValue || undefined,\n        type: typeInfo.inputType\n            ? getNamedType(typeInfo.inputType)\n            : undefined,\n    };\n}\nexport function getTypeReference(typeInfo, type) {\n    return {\n        kind: 'Type',\n        schema: typeInfo.schema,\n        type: type || typeInfo.type,\n    };\n}\nfunction isMetaField(fieldDef) {\n    return fieldDef.name.slice(0, 2) === '__';\n}\n//# sourceMappingURL=SchemaReference.js.map","export default function forEachState(stack, fn) {\n    const reverseStateStack = [];\n    let state = stack;\n    while (state === null || state === void 0 ? void 0 : state.kind) {\n        reverseStateStack.push(state);\n        state = state.prevState;\n    }\n    for (let i = reverseStateStack.length - 1; i >= 0; i--) {\n        fn(reverseStateStack[i]);\n    }\n}\n//# sourceMappingURL=forEachState.js.map","import { isCompositeType, getNullableType, getNamedType, GraphQLEnumType, GraphQLInputObjectType, GraphQLList, SchemaMetaFieldDef, TypeMetaFieldDef, TypeNameMetaFieldDef, } from 'graphql';\nimport forEachState from './forEachState';\nexport default function getTypeInfo(schema, tokenState) {\n    const info = {\n        schema,\n        type: null,\n        parentType: null,\n        inputType: null,\n        directiveDef: null,\n        fieldDef: null,\n        argDef: null,\n        argDefs: null,\n        objectFieldDefs: null,\n    };\n    forEachState(tokenState, (state) => {\n        var _a, _b;\n        switch (state.kind) {\n            case 'Query':\n            case 'ShortQuery':\n                info.type = schema.getQueryType();\n                break;\n            case 'Mutation':\n                info.type = schema.getMutationType();\n                break;\n            case 'Subscription':\n                info.type = schema.getSubscriptionType();\n                break;\n            case 'InlineFragment':\n            case 'FragmentDefinition':\n                if (state.type) {\n                    info.type = schema.getType(state.type);\n                }\n                break;\n            case 'Field':\n            case 'AliasedField':\n                info.fieldDef =\n                    info.type && state.name\n                        ? getFieldDef(schema, info.parentType, state.name)\n                        : null;\n                info.type = (_a = info.fieldDef) === null || _a === void 0 ? void 0 : _a.type;\n                break;\n            case 'SelectionSet':\n                info.parentType = info.type ? getNamedType(info.type) : null;\n                break;\n            case 'Directive':\n                info.directiveDef = state.name ? schema.getDirective(state.name) : null;\n                break;\n            case 'Arguments':\n                const parentDef = state.prevState\n                    ? state.prevState.kind === 'Field'\n                        ? info.fieldDef\n                        : state.prevState.kind === 'Directive'\n                            ? info.directiveDef\n                            : state.prevState.kind === 'AliasedField'\n                                ? state.prevState.name &&\n                                    getFieldDef(schema, info.parentType, state.prevState.name)\n                                : null\n                    : null;\n                info.argDefs = parentDef ? parentDef.args : null;\n                break;\n            case 'Argument':\n                info.argDef = null;\n                if (info.argDefs) {\n                    for (let i = 0; i < info.argDefs.length; i++) {\n                        if (info.argDefs[i].name === state.name) {\n                            info.argDef = info.argDefs[i];\n                            break;\n                        }\n                    }\n                }\n                info.inputType = (_b = info.argDef) === null || _b === void 0 ? void 0 : _b.type;\n                break;\n            case 'EnumValue':\n                const enumType = info.inputType ? getNamedType(info.inputType) : null;\n                info.enumValue =\n                    enumType instanceof GraphQLEnumType\n                        ? find(enumType.getValues(), val => val.value === state.name)\n                        : null;\n                break;\n            case 'ListValue':\n                const nullableType = info.inputType\n                    ? getNullableType(info.inputType)\n                    : null;\n                info.inputType =\n                    nullableType instanceof GraphQLList ? nullableType.ofType : null;\n                break;\n            case 'ObjectValue':\n                const objectType = info.inputType ? getNamedType(info.inputType) : null;\n                info.objectFieldDefs =\n                    objectType instanceof GraphQLInputObjectType\n                        ? objectType.getFields()\n                        : null;\n                break;\n            case 'ObjectField':\n                const objectField = state.name && info.objectFieldDefs\n                    ? info.objectFieldDefs[state.name]\n                    : null;\n                info.inputType = objectField === null || objectField === void 0 ? void 0 : objectField.type;\n                info.fieldDef = objectField;\n                break;\n            case 'NamedType':\n                info.type = state.name ? schema.getType(state.name) : null;\n                break;\n        }\n    });\n    return info;\n}\nfunction getFieldDef(schema, type, fieldName) {\n    if (fieldName === SchemaMetaFieldDef.name && schema.getQueryType() === type) {\n        return SchemaMetaFieldDef;\n    }\n    if (fieldName === TypeMetaFieldDef.name && schema.getQueryType() === type) {\n        return TypeMetaFieldDef;\n    }\n    if (fieldName === TypeNameMetaFieldDef.name && isCompositeType(type)) {\n        return TypeNameMetaFieldDef;\n    }\n    if (type && type.getFields) {\n        return type.getFields()[fieldName];\n    }\n}\nfunction find(array, predicate) {\n    for (let i = 0; i < array.length; i++) {\n        if (predicate(array[i])) {\n            return array[i];\n        }\n    }\n}\n//# sourceMappingURL=getTypeInfo.js.map"],"names":["onMouseOver","cm","event","target","srcElement","HTMLElement","nodeName","box","getBoundingClientRect","cursor","left","right","top","bottom","state","jump","isHoldingModifier","enableJumpMode","onMouseOut","marker","disableJumpMode","onKeyDown","key","isMac","onKeyUp","upEvent","code","codemirror_default","off","document","onClick","onMouseDown","destination","options","clickEvent","_","downEvent","codemirrorIgnore","on","defineOption","old","Init","oldOnMouseOver","getWrapperElement","oldOnMouseOut","bind","navigator","userAgent","includes","pos","coordsChar","token","getTokenAt","getDestination","getHelper","markText","line","ch","start","end","className","clear","registerHelper","schema","kind","step","typeInfo","getTypeInfo","Z","fieldDef","SchemaReference","bm","directiveDef","NW","argDef","cr","enumValue","rK","type","Jm","getFieldReference","field","isMetaField","parentType","getDirectiveReference","directive","getArgumentReference","argument","getEnumValueReference","value","undefined","inputType","graphql__WEBPACK_IMPORTED_MODULE_0__","xC","getTypeReference","name","slice","forEachState","stack","fn","reverseStateStack","push","prevState","i","length","tokenState","info","argDefs","objectFieldDefs","_forEachState__WEBPACK_IMPORTED_MODULE_0__","_a","_b","getQueryType","getMutationType","getSubscriptionType","getType","getFieldDef","graphql__WEBPACK_IMPORTED_MODULE_1__","getDirective","parentDef","args","enumType","mR","find","array","predicate","getValues","val","nullableType","tf","p2","ofType","objectType","sR","getFields","objectField","fieldName","graphql__WEBPACK_IMPORTED_MODULE_2__","Az","tF","hU","Gv"],"sourceRoot":""}