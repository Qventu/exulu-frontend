{"version":3,"file":"static/chunks/4957-da407878e1e8153f.js","mappings":"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","sources":["webpack://_N_E/./node_modules/@radix-ui/react-tooltip/node_modules/@radix-ui/primitive/dist/index.mjs","webpack://_N_E/../src/dismissable-layer.tsx","webpack://_N_E/../src/popper.tsx","webpack://_N_E/../src/presence.tsx","webpack://_N_E/../src/use-state-machine.tsx","webpack://_N_E/../src/tooltip.tsx","webpack://_N_E/./node_modules/@radix-ui/react-visually-hidden/dist/index.mjs"],"sourcesContent":["// src/primitive.tsx\nvar canUseDOM = !!(typeof window !== \"undefined\" && window.document && window.document.createElement);\nfunction composeEventHandlers(originalEventHandler, ourEventHandler, { checkForDefaultPrevented = true } = {}) {\n  return function handleEvent(event) {\n    originalEventHandler?.(event);\n    if (checkForDefaultPrevented === false || !event.defaultPrevented) {\n      return ourEventHandler?.(event);\n    }\n  };\n}\nfunction getOwnerWindow(element) {\n  if (!canUseDOM) {\n    throw new Error(\"Cannot access window outside of the DOM\");\n  }\n  return element?.ownerDocument?.defaultView ?? window;\n}\nfunction getOwnerDocument(element) {\n  if (!canUseDOM) {\n    throw new Error(\"Cannot access document outside of the DOM\");\n  }\n  return element?.ownerDocument ?? document;\n}\nfunction getActiveElement(node, activeDescendant = false) {\n  const { activeElement } = getOwnerDocument(node);\n  if (!activeElement?.nodeName) {\n    return null;\n  }\n  if (isFrame(activeElement) && activeElement.contentDocument) {\n    return getActiveElement(activeElement.contentDocument.body, activeDescendant);\n  }\n  if (activeDescendant) {\n    const id = activeElement.getAttribute(\"aria-activedescendant\");\n    if (id) {\n      const element = getOwnerDocument(activeElement).getElementById(id);\n      if (element) {\n        return element;\n      }\n    }\n  }\n  return activeElement;\n}\nfunction isFrame(element) {\n  return element.tagName === \"IFRAME\";\n}\nexport {\n  canUseDOM,\n  composeEventHandlers,\n  getActiveElement,\n  getOwnerDocument,\n  getOwnerWindow,\n  isFrame\n};\n//# sourceMappingURL=index.mjs.map\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { Primitive, dispatchDiscreteCustomEvent } from '@radix-ui/react-primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useEscapeKeydown } from '@radix-ui/react-use-escape-keydown';\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayer\n * -----------------------------------------------------------------------------------------------*/\n\nconst DISMISSABLE_LAYER_NAME = 'DismissableLayer';\nconst CONTEXT_UPDATE = 'dismissableLayer.update';\nconst POINTER_DOWN_OUTSIDE = 'dismissableLayer.pointerDownOutside';\nconst FOCUS_OUTSIDE = 'dismissableLayer.focusOutside';\n\nlet originalBodyPointerEvents: string;\n\nconst DismissableLayerContext = React.createContext({\n  layers: new Set<DismissableLayerElement>(),\n  layersWithOutsidePointerEventsDisabled: new Set<DismissableLayerElement>(),\n  branches: new Set<DismissableLayerBranchElement>(),\n});\n\ntype DismissableLayerElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface DismissableLayerProps extends PrimitiveDivProps {\n  /**\n   * When `true`, hover/focus/click interactions will be disabled on elements outside\n   * the `DismissableLayer`. Users will need to click twice on outside elements to\n   * interact with them: once to close the `DismissableLayer`, and again to trigger the element.\n   */\n  disableOutsidePointerEvents?: boolean;\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: (event: KeyboardEvent) => void;\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void;\n  /**\n   * Event handler called when the focus moves outside of the `DismissableLayer`.\n   * Can be prevented.\n   */\n  onFocusOutside?: (event: FocusOutsideEvent) => void;\n  /**\n   * Event handler called when an interaction happens outside the `DismissableLayer`.\n   * Specifically, when a `pointerdown` event happens outside or focus moves outside of it.\n   * Can be prevented.\n   */\n  onInteractOutside?: (event: PointerDownOutsideEvent | FocusOutsideEvent) => void;\n  /**\n   * Handler called when the `DismissableLayer` should be dismissed\n   */\n  onDismiss?: () => void;\n}\n\nconst DismissableLayer = React.forwardRef<DismissableLayerElement, DismissableLayerProps>(\n  (props, forwardedRef) => {\n    const {\n      disableOutsidePointerEvents = false,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      onFocusOutside,\n      onInteractOutside,\n      onDismiss,\n      ...layerProps\n    } = props;\n    const context = React.useContext(DismissableLayerContext);\n    const [node, setNode] = React.useState<DismissableLayerElement | null>(null);\n    const ownerDocument = node?.ownerDocument ?? globalThis?.document;\n    const [, force] = React.useState({});\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setNode(node));\n    const layers = Array.from(context.layers);\n    const [highestLayerWithOutsidePointerEventsDisabled] = [...context.layersWithOutsidePointerEventsDisabled].slice(-1); // prettier-ignore\n    const highestLayerWithOutsidePointerEventsDisabledIndex = layers.indexOf(highestLayerWithOutsidePointerEventsDisabled!); // prettier-ignore\n    const index = node ? layers.indexOf(node) : -1;\n    const isBodyPointerEventsDisabled = context.layersWithOutsidePointerEventsDisabled.size > 0;\n    const isPointerEventsEnabled = index >= highestLayerWithOutsidePointerEventsDisabledIndex;\n\n    const pointerDownOutside = usePointerDownOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isPointerDownOnBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (!isPointerEventsEnabled || isPointerDownOnBranch) return;\n      onPointerDownOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    const focusOutside = useFocusOutside((event) => {\n      const target = event.target as HTMLElement;\n      const isFocusInBranch = [...context.branches].some((branch) => branch.contains(target));\n      if (isFocusInBranch) return;\n      onFocusOutside?.(event);\n      onInteractOutside?.(event);\n      if (!event.defaultPrevented) onDismiss?.();\n    }, ownerDocument);\n\n    useEscapeKeydown((event) => {\n      const isHighestLayer = index === context.layers.size - 1;\n      if (!isHighestLayer) return;\n      onEscapeKeyDown?.(event);\n      if (!event.defaultPrevented && onDismiss) {\n        event.preventDefault();\n        onDismiss();\n      }\n    }, ownerDocument);\n\n    React.useEffect(() => {\n      if (!node) return;\n      if (disableOutsidePointerEvents) {\n        if (context.layersWithOutsidePointerEventsDisabled.size === 0) {\n          originalBodyPointerEvents = ownerDocument.body.style.pointerEvents;\n          ownerDocument.body.style.pointerEvents = 'none';\n        }\n        context.layersWithOutsidePointerEventsDisabled.add(node);\n      }\n      context.layers.add(node);\n      dispatchUpdate();\n      return () => {\n        if (\n          disableOutsidePointerEvents &&\n          context.layersWithOutsidePointerEventsDisabled.size === 1\n        ) {\n          ownerDocument.body.style.pointerEvents = originalBodyPointerEvents;\n        }\n      };\n    }, [node, ownerDocument, disableOutsidePointerEvents, context]);\n\n    /**\n     * We purposefully prevent combining this effect with the `disableOutsidePointerEvents` effect\n     * because a change to `disableOutsidePointerEvents` would remove this layer from the stack\n     * and add it to the end again so the layering order wouldn't be _creation order_.\n     * We only want them to be removed from context stacks when unmounted.\n     */\n    React.useEffect(() => {\n      return () => {\n        if (!node) return;\n        context.layers.delete(node);\n        context.layersWithOutsidePointerEventsDisabled.delete(node);\n        dispatchUpdate();\n      };\n    }, [node, context]);\n\n    React.useEffect(() => {\n      const handleUpdate = () => force({});\n      document.addEventListener(CONTEXT_UPDATE, handleUpdate);\n      return () => document.removeEventListener(CONTEXT_UPDATE, handleUpdate);\n    }, []);\n\n    return (\n      <Primitive.div\n        {...layerProps}\n        ref={composedRefs}\n        style={{\n          pointerEvents: isBodyPointerEventsDisabled\n            ? isPointerEventsEnabled\n              ? 'auto'\n              : 'none'\n            : undefined,\n          ...props.style,\n        }}\n        onFocusCapture={composeEventHandlers(props.onFocusCapture, focusOutside.onFocusCapture)}\n        onBlurCapture={composeEventHandlers(props.onBlurCapture, focusOutside.onBlurCapture)}\n        onPointerDownCapture={composeEventHandlers(\n          props.onPointerDownCapture,\n          pointerDownOutside.onPointerDownCapture\n        )}\n      />\n    );\n  }\n);\n\nDismissableLayer.displayName = DISMISSABLE_LAYER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * DismissableLayerBranch\n * -----------------------------------------------------------------------------------------------*/\n\nconst BRANCH_NAME = 'DismissableLayerBranch';\n\ntype DismissableLayerBranchElement = React.ComponentRef<typeof Primitive.div>;\ninterface DismissableLayerBranchProps extends PrimitiveDivProps {}\n\nconst DismissableLayerBranch = React.forwardRef<\n  DismissableLayerBranchElement,\n  DismissableLayerBranchProps\n>((props, forwardedRef) => {\n  const context = React.useContext(DismissableLayerContext);\n  const ref = React.useRef<DismissableLayerBranchElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n\n  React.useEffect(() => {\n    const node = ref.current;\n    if (node) {\n      context.branches.add(node);\n      return () => {\n        context.branches.delete(node);\n      };\n    }\n  }, [context.branches]);\n\n  return <Primitive.div {...props} ref={composedRefs} />;\n});\n\nDismissableLayerBranch.displayName = BRANCH_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype PointerDownOutsideEvent = CustomEvent<{ originalEvent: PointerEvent }>;\ntype FocusOutsideEvent = CustomEvent<{ originalEvent: FocusEvent }>;\n\n/**\n * Listens for `pointerdown` outside a react subtree. We use `pointerdown` rather than `pointerup`\n * to mimic layer dismissing behaviour present in OS.\n * Returns props to pass to the node we want to check for outside events.\n */\nfunction usePointerDownOutside(\n  onPointerDownOutside?: (event: PointerDownOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handlePointerDownOutside = useCallbackRef(onPointerDownOutside) as EventListener;\n  const isPointerInsideReactTreeRef = React.useRef(false);\n  const handleClickRef = React.useRef(() => {});\n\n  React.useEffect(() => {\n    const handlePointerDown = (event: PointerEvent) => {\n      if (event.target && !isPointerInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n\n        function handleAndDispatchPointerDownOutsideEvent() {\n          handleAndDispatchCustomEvent(\n            POINTER_DOWN_OUTSIDE,\n            handlePointerDownOutside,\n            eventDetail,\n            { discrete: true }\n          );\n        }\n\n        /**\n         * On touch devices, we need to wait for a click event because browsers implement\n         * a ~350ms delay between the time the user stops touching the display and when the\n         * browser executres events. We need to ensure we don't reactivate pointer-events within\n         * this timeframe otherwise the browser may execute events that should have been prevented.\n         *\n         * Additionally, this also lets us deal automatically with cancellations when a click event\n         * isn't raised because the page was considered scrolled/drag-scrolled, long-pressed, etc.\n         *\n         * This is why we also continuously remove the previous listener, because we cannot be\n         * certain that it was raised, and therefore cleaned-up.\n         */\n        if (event.pointerType === 'touch') {\n          ownerDocument.removeEventListener('click', handleClickRef.current);\n          handleClickRef.current = handleAndDispatchPointerDownOutsideEvent;\n          ownerDocument.addEventListener('click', handleClickRef.current, { once: true });\n        } else {\n          handleAndDispatchPointerDownOutsideEvent();\n        }\n      } else {\n        // We need to remove the event listener in case the outside click has been canceled.\n        // See: https://github.com/radix-ui/primitives/issues/2171\n        ownerDocument.removeEventListener('click', handleClickRef.current);\n      }\n      isPointerInsideReactTreeRef.current = false;\n    };\n    /**\n     * if this hook executes in a component that mounts via a `pointerdown` event, the event\n     * would bubble up to the document and trigger a `pointerDownOutside` event. We avoid\n     * this by delaying the event listener registration on the document.\n     * This is not React specific, but rather how the DOM works, ie:\n     * ```\n     * button.addEventListener('pointerdown', () => {\n     *   console.log('I will log');\n     *   document.addEventListener('pointerdown', () => {\n     *     console.log('I will also log');\n     *   })\n     * });\n     */\n    const timerId = window.setTimeout(() => {\n      ownerDocument.addEventListener('pointerdown', handlePointerDown);\n    }, 0);\n    return () => {\n      window.clearTimeout(timerId);\n      ownerDocument.removeEventListener('pointerdown', handlePointerDown);\n      ownerDocument.removeEventListener('click', handleClickRef.current);\n    };\n  }, [ownerDocument, handlePointerDownOutside]);\n\n  return {\n    // ensures we check React component tree (not just DOM tree)\n    onPointerDownCapture: () => (isPointerInsideReactTreeRef.current = true),\n  };\n}\n\n/**\n * Listens for when focus happens outside a react subtree.\n * Returns props to pass to the root (node) of the subtree we want to check.\n */\nfunction useFocusOutside(\n  onFocusOutside?: (event: FocusOutsideEvent) => void,\n  ownerDocument: Document = globalThis?.document\n) {\n  const handleFocusOutside = useCallbackRef(onFocusOutside) as EventListener;\n  const isFocusInsideReactTreeRef = React.useRef(false);\n\n  React.useEffect(() => {\n    const handleFocus = (event: FocusEvent) => {\n      if (event.target && !isFocusInsideReactTreeRef.current) {\n        const eventDetail = { originalEvent: event };\n        handleAndDispatchCustomEvent(FOCUS_OUTSIDE, handleFocusOutside, eventDetail, {\n          discrete: false,\n        });\n      }\n    };\n    ownerDocument.addEventListener('focusin', handleFocus);\n    return () => ownerDocument.removeEventListener('focusin', handleFocus);\n  }, [ownerDocument, handleFocusOutside]);\n\n  return {\n    onFocusCapture: () => (isFocusInsideReactTreeRef.current = true),\n    onBlurCapture: () => (isFocusInsideReactTreeRef.current = false),\n  };\n}\n\nfunction dispatchUpdate() {\n  const event = new CustomEvent(CONTEXT_UPDATE);\n  document.dispatchEvent(event);\n}\n\nfunction handleAndDispatchCustomEvent<E extends CustomEvent, OriginalEvent extends Event>(\n  name: string,\n  handler: ((event: E) => void) | undefined,\n  detail: { originalEvent: OriginalEvent } & (E extends CustomEvent<infer D> ? D : never),\n  { discrete }: { discrete: boolean }\n) {\n  const target = detail.originalEvent.target;\n  const event = new CustomEvent(name, { bubbles: false, cancelable: true, detail });\n  if (handler) target.addEventListener(name, handler as EventListener, { once: true });\n\n  if (discrete) {\n    dispatchDiscreteCustomEvent(target, event);\n  } else {\n    target.dispatchEvent(event);\n  }\n}\n\nconst Root = DismissableLayer;\nconst Branch = DismissableLayerBranch;\n\nexport {\n  DismissableLayer,\n  DismissableLayerBranch,\n  //\n  Root,\n  Branch,\n};\nexport type { DismissableLayerProps };\n","import * as React from 'react';\nimport {\n  useFloating,\n  autoUpdate,\n  offset,\n  shift,\n  limitShift,\n  hide,\n  arrow as floatingUIarrow,\n  flip,\n  size,\n} from '@floating-ui/react-dom';\nimport * as ArrowPrimitive from '@radix-ui/react-arrow';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { useCallbackRef } from '@radix-ui/react-use-callback-ref';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useSize } from '@radix-ui/react-use-size';\n\nimport type { Placement, Middleware } from '@floating-ui/react-dom';\nimport type { Scope } from '@radix-ui/react-context';\nimport type { Measurable } from '@radix-ui/rect';\n\nconst SIDE_OPTIONS = ['top', 'right', 'bottom', 'left'] as const;\nconst ALIGN_OPTIONS = ['start', 'center', 'end'] as const;\n\ntype Side = (typeof SIDE_OPTIONS)[number];\ntype Align = (typeof ALIGN_OPTIONS)[number];\n\n/* -------------------------------------------------------------------------------------------------\n * Popper\n * -----------------------------------------------------------------------------------------------*/\n\nconst POPPER_NAME = 'Popper';\n\ntype ScopedProps<P> = P & { __scopePopper?: Scope };\nconst [createPopperContext, createPopperScope] = createContextScope(POPPER_NAME);\n\ntype PopperContextValue = {\n  anchor: Measurable | null;\n  onAnchorChange(anchor: Measurable | null): void;\n};\nconst [PopperProvider, usePopperContext] = createPopperContext<PopperContextValue>(POPPER_NAME);\n\ninterface PopperProps {\n  children?: React.ReactNode;\n}\nconst Popper: React.FC<PopperProps> = (props: ScopedProps<PopperProps>) => {\n  const { __scopePopper, children } = props;\n  const [anchor, setAnchor] = React.useState<Measurable | null>(null);\n  return (\n    <PopperProvider scope={__scopePopper} anchor={anchor} onAnchorChange={setAnchor}>\n      {children}\n    </PopperProvider>\n  );\n};\n\nPopper.displayName = POPPER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperAnchor\n * -----------------------------------------------------------------------------------------------*/\n\nconst ANCHOR_NAME = 'PopperAnchor';\n\ntype PopperAnchorElement = React.ComponentRef<typeof Primitive.div>;\ntype PrimitiveDivProps = React.ComponentPropsWithoutRef<typeof Primitive.div>;\ninterface PopperAnchorProps extends PrimitiveDivProps {\n  virtualRef?: React.RefObject<Measurable>;\n}\n\nconst PopperAnchor = React.forwardRef<PopperAnchorElement, PopperAnchorProps>(\n  (props: ScopedProps<PopperAnchorProps>, forwardedRef) => {\n    const { __scopePopper, virtualRef, ...anchorProps } = props;\n    const context = usePopperContext(ANCHOR_NAME, __scopePopper);\n    const ref = React.useRef<PopperAnchorElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref);\n\n    const anchorRef = React.useRef<Measurable | null>(null);\n    React.useEffect(() => {\n      const previousAnchor = anchorRef.current;\n      anchorRef.current = virtualRef?.current || ref.current;\n      if (previousAnchor !== anchorRef.current) {\n        // Consumer can anchor the popper to something that isn't\n        // a DOM node e.g. pointer position, so we override the\n        // `anchorRef` with their virtual ref in this case.\n        context.onAnchorChange(anchorRef.current);\n      }\n    });\n\n    return virtualRef ? null : <Primitive.div {...anchorProps} ref={composedRefs} />;\n  }\n);\n\nPopperAnchor.displayName = ANCHOR_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'PopperContent';\n\ntype PopperContentContextValue = {\n  placedSide: Side;\n  onArrowChange(arrow: HTMLSpanElement | null): void;\n  arrowX?: number;\n  arrowY?: number;\n  shouldHideArrow: boolean;\n};\n\nconst [PopperContentProvider, useContentContext] =\n  createPopperContext<PopperContentContextValue>(CONTENT_NAME);\n\ntype Boundary = Element | null;\n\ntype PopperContentElement = React.ComponentRef<typeof Primitive.div>;\ninterface PopperContentProps extends PrimitiveDivProps {\n  side?: Side;\n  sideOffset?: number;\n  align?: Align;\n  alignOffset?: number;\n  arrowPadding?: number;\n  avoidCollisions?: boolean;\n  collisionBoundary?: Boundary | Boundary[];\n  collisionPadding?: number | Partial<Record<Side, number>>;\n  sticky?: 'partial' | 'always';\n  hideWhenDetached?: boolean;\n  updatePositionStrategy?: 'optimized' | 'always';\n  onPlaced?: () => void;\n}\n\nconst PopperContent = React.forwardRef<PopperContentElement, PopperContentProps>(\n  (props: ScopedProps<PopperContentProps>, forwardedRef) => {\n    const {\n      __scopePopper,\n      side = 'bottom',\n      sideOffset = 0,\n      align = 'center',\n      alignOffset = 0,\n      arrowPadding = 0,\n      avoidCollisions = true,\n      collisionBoundary = [],\n      collisionPadding: collisionPaddingProp = 0,\n      sticky = 'partial',\n      hideWhenDetached = false,\n      updatePositionStrategy = 'optimized',\n      onPlaced,\n      ...contentProps\n    } = props;\n\n    const context = usePopperContext(CONTENT_NAME, __scopePopper);\n\n    const [content, setContent] = React.useState<HTMLDivElement | null>(null);\n    const composedRefs = useComposedRefs(forwardedRef, (node) => setContent(node));\n\n    const [arrow, setArrow] = React.useState<HTMLSpanElement | null>(null);\n    const arrowSize = useSize(arrow);\n    const arrowWidth = arrowSize?.width ?? 0;\n    const arrowHeight = arrowSize?.height ?? 0;\n\n    const desiredPlacement = (side + (align !== 'center' ? '-' + align : '')) as Placement;\n\n    const collisionPadding =\n      typeof collisionPaddingProp === 'number'\n        ? collisionPaddingProp\n        : { top: 0, right: 0, bottom: 0, left: 0, ...collisionPaddingProp };\n\n    const boundary = Array.isArray(collisionBoundary) ? collisionBoundary : [collisionBoundary];\n    const hasExplicitBoundaries = boundary.length > 0;\n\n    const detectOverflowOptions = {\n      padding: collisionPadding,\n      boundary: boundary.filter(isNotNull),\n      // with `strategy: 'fixed'`, this is the only way to get it to respect boundaries\n      altBoundary: hasExplicitBoundaries,\n    };\n\n    const { refs, floatingStyles, placement, isPositioned, middlewareData } = useFloating({\n      // default to `fixed` strategy so users don't have to pick and we also avoid focus scroll issues\n      strategy: 'fixed',\n      placement: desiredPlacement,\n      whileElementsMounted: (...args) => {\n        const cleanup = autoUpdate(...args, {\n          animationFrame: updatePositionStrategy === 'always',\n        });\n        return cleanup;\n      },\n      elements: {\n        reference: context.anchor,\n      },\n      middleware: [\n        offset({ mainAxis: sideOffset + arrowHeight, alignmentAxis: alignOffset }),\n        avoidCollisions &&\n          shift({\n            mainAxis: true,\n            crossAxis: false,\n            limiter: sticky === 'partial' ? limitShift() : undefined,\n            ...detectOverflowOptions,\n          }),\n        avoidCollisions && flip({ ...detectOverflowOptions }),\n        size({\n          ...detectOverflowOptions,\n          apply: ({ elements, rects, availableWidth, availableHeight }) => {\n            const { width: anchorWidth, height: anchorHeight } = rects.reference;\n            const contentStyle = elements.floating.style;\n            contentStyle.setProperty('--radix-popper-available-width', `${availableWidth}px`);\n            contentStyle.setProperty('--radix-popper-available-height', `${availableHeight}px`);\n            contentStyle.setProperty('--radix-popper-anchor-width', `${anchorWidth}px`);\n            contentStyle.setProperty('--radix-popper-anchor-height', `${anchorHeight}px`);\n          },\n        }),\n        arrow && floatingUIarrow({ element: arrow, padding: arrowPadding }),\n        transformOrigin({ arrowWidth, arrowHeight }),\n        hideWhenDetached && hide({ strategy: 'referenceHidden', ...detectOverflowOptions }),\n      ],\n    });\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n\n    const handlePlaced = useCallbackRef(onPlaced);\n    useLayoutEffect(() => {\n      if (isPositioned) {\n        handlePlaced?.();\n      }\n    }, [isPositioned, handlePlaced]);\n\n    const arrowX = middlewareData.arrow?.x;\n    const arrowY = middlewareData.arrow?.y;\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n\n    const [contentZIndex, setContentZIndex] = React.useState<string>();\n    useLayoutEffect(() => {\n      if (content) setContentZIndex(window.getComputedStyle(content).zIndex);\n    }, [content]);\n\n    return (\n      <div\n        ref={refs.setFloating}\n        data-radix-popper-content-wrapper=\"\"\n        style={{\n          ...floatingStyles,\n          transform: isPositioned ? floatingStyles.transform : 'translate(0, -200%)', // keep off the page when measuring\n          minWidth: 'max-content',\n          zIndex: contentZIndex,\n          ['--radix-popper-transform-origin' as any]: [\n            middlewareData.transformOrigin?.x,\n            middlewareData.transformOrigin?.y,\n          ].join(' '),\n\n          // hide the content if using the hide middleware and should be hidden\n          // set visibility to hidden and disable pointer events so the UI behaves\n          // as if the PopperContent isn't there at all\n          ...(middlewareData.hide?.referenceHidden && {\n            visibility: 'hidden',\n            pointerEvents: 'none',\n          }),\n        }}\n        // Floating UI interally calculates logical alignment based the `dir` attribute on\n        // the reference/floating node, we must add this attribute here to ensure\n        // this is calculated when portalled as well as inline.\n        dir={props.dir}\n      >\n        <PopperContentProvider\n          scope={__scopePopper}\n          placedSide={placedSide}\n          onArrowChange={setArrow}\n          arrowX={arrowX}\n          arrowY={arrowY}\n          shouldHideArrow={cannotCenterArrow}\n        >\n          <Primitive.div\n            data-side={placedSide}\n            data-align={placedAlign}\n            {...contentProps}\n            ref={composedRefs}\n            style={{\n              ...contentProps.style,\n              // if the PopperContent hasn't been placed yet (not all measurements done)\n              // we prevent animations so that users's animation don't kick in too early referring wrong sides\n              animation: !isPositioned ? 'none' : undefined,\n            }}\n          />\n        </PopperContentProvider>\n      </div>\n    );\n  }\n);\n\nPopperContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * PopperArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'PopperArrow';\n\nconst OPPOSITE_SIDE: Record<Side, Side> = {\n  top: 'bottom',\n  right: 'left',\n  bottom: 'top',\n  left: 'right',\n};\n\ntype PopperArrowElement = React.ComponentRef<typeof ArrowPrimitive.Root>;\ntype ArrowProps = React.ComponentPropsWithoutRef<typeof ArrowPrimitive.Root>;\ninterface PopperArrowProps extends ArrowProps {}\n\nconst PopperArrow = React.forwardRef<PopperArrowElement, PopperArrowProps>(function PopperArrow(\n  props: ScopedProps<PopperArrowProps>,\n  forwardedRef\n) {\n  const { __scopePopper, ...arrowProps } = props;\n  const contentContext = useContentContext(ARROW_NAME, __scopePopper);\n  const baseSide = OPPOSITE_SIDE[contentContext.placedSide];\n\n  return (\n    // we have to use an extra wrapper because `ResizeObserver` (used by `useSize`)\n    // doesn't report size as we'd expect on SVG elements.\n    // it reports their bounding box which is effectively the largest path inside the SVG.\n    <span\n      ref={contentContext.onArrowChange}\n      style={{\n        position: 'absolute',\n        left: contentContext.arrowX,\n        top: contentContext.arrowY,\n        [baseSide]: 0,\n        transformOrigin: {\n          top: '',\n          right: '0 0',\n          bottom: 'center 0',\n          left: '100% 0',\n        }[contentContext.placedSide],\n        transform: {\n          top: 'translateY(100%)',\n          right: 'translateY(50%) rotate(90deg) translateX(-50%)',\n          bottom: `rotate(180deg)`,\n          left: 'translateY(50%) rotate(-90deg) translateX(50%)',\n        }[contentContext.placedSide],\n        visibility: contentContext.shouldHideArrow ? 'hidden' : undefined,\n      }}\n    >\n      <ArrowPrimitive.Root\n        {...arrowProps}\n        ref={forwardedRef}\n        style={{\n          ...arrowProps.style,\n          // ensures the element can be measured correctly (mostly for if SVG)\n          display: 'block',\n        }}\n      />\n    </span>\n  );\n});\n\nPopperArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction isNotNull<T>(value: T | null): value is T {\n  return value !== null;\n}\n\nconst transformOrigin = (options: { arrowWidth: number; arrowHeight: number }): Middleware => ({\n  name: 'transformOrigin',\n  options,\n  fn(data) {\n    const { placement, rects, middlewareData } = data;\n\n    const cannotCenterArrow = middlewareData.arrow?.centerOffset !== 0;\n    const isArrowHidden = cannotCenterArrow;\n    const arrowWidth = isArrowHidden ? 0 : options.arrowWidth;\n    const arrowHeight = isArrowHidden ? 0 : options.arrowHeight;\n\n    const [placedSide, placedAlign] = getSideAndAlignFromPlacement(placement);\n    const noArrowAlign = { start: '0%', center: '50%', end: '100%' }[placedAlign];\n\n    const arrowXCenter = (middlewareData.arrow?.x ?? 0) + arrowWidth / 2;\n    const arrowYCenter = (middlewareData.arrow?.y ?? 0) + arrowHeight / 2;\n\n    let x = '';\n    let y = '';\n\n    if (placedSide === 'bottom') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${-arrowHeight}px`;\n    } else if (placedSide === 'top') {\n      x = isArrowHidden ? noArrowAlign : `${arrowXCenter}px`;\n      y = `${rects.floating.height + arrowHeight}px`;\n    } else if (placedSide === 'right') {\n      x = `${-arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    } else if (placedSide === 'left') {\n      x = `${rects.floating.width + arrowHeight}px`;\n      y = isArrowHidden ? noArrowAlign : `${arrowYCenter}px`;\n    }\n    return { data: { x, y } };\n  },\n});\n\nfunction getSideAndAlignFromPlacement(placement: Placement) {\n  const [side, align = 'center'] = placement.split('-');\n  return [side as Side, align as Align] as const;\n}\n\nconst Root = Popper;\nconst Anchor = PopperAnchor;\nconst Content = PopperContent;\nconst Arrow = PopperArrow;\n\nexport {\n  createPopperScope,\n  //\n  Popper,\n  PopperAnchor,\n  PopperContent,\n  PopperArrow,\n  //\n  Root,\n  Anchor,\n  Content,\n  Arrow,\n  //\n  SIDE_OPTIONS,\n  ALIGN_OPTIONS,\n};\nexport type { PopperProps, PopperAnchorProps, PopperContentProps, PopperArrowProps };\n","import * as React from 'react';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { useLayoutEffect } from '@radix-ui/react-use-layout-effect';\nimport { useStateMachine } from './use-state-machine';\n\ninterface PresenceProps {\n  children: React.ReactElement | ((props: { present: boolean }) => React.ReactElement);\n  present: boolean;\n}\n\nconst Presence: React.FC<PresenceProps> = (props) => {\n  const { present, children } = props;\n  const presence = usePresence(present);\n\n  const child = (\n    typeof children === 'function'\n      ? children({ present: presence.isPresent })\n      : React.Children.only(children)\n  ) as React.ReactElement<{ ref?: React.Ref<HTMLElement> }>;\n\n  const ref = useComposedRefs(presence.ref, getElementRef(child));\n  const forceMount = typeof children === 'function';\n  return forceMount || presence.isPresent ? React.cloneElement(child, { ref }) : null;\n};\n\nPresence.displayName = 'Presence';\n\n/* -------------------------------------------------------------------------------------------------\n * usePresence\n * -----------------------------------------------------------------------------------------------*/\n\nfunction usePresence(present: boolean) {\n  const [node, setNode] = React.useState<HTMLElement>();\n  const stylesRef = React.useRef<CSSStyleDeclaration | null>(null);\n  const prevPresentRef = React.useRef(present);\n  const prevAnimationNameRef = React.useRef<string>('none');\n  const initialState = present ? 'mounted' : 'unmounted';\n  const [state, send] = useStateMachine(initialState, {\n    mounted: {\n      UNMOUNT: 'unmounted',\n      ANIMATION_OUT: 'unmountSuspended',\n    },\n    unmountSuspended: {\n      MOUNT: 'mounted',\n      ANIMATION_END: 'unmounted',\n    },\n    unmounted: {\n      MOUNT: 'mounted',\n    },\n  });\n\n  React.useEffect(() => {\n    const currentAnimationName = getAnimationName(stylesRef.current);\n    prevAnimationNameRef.current = state === 'mounted' ? currentAnimationName : 'none';\n  }, [state]);\n\n  useLayoutEffect(() => {\n    const styles = stylesRef.current;\n    const wasPresent = prevPresentRef.current;\n    const hasPresentChanged = wasPresent !== present;\n\n    if (hasPresentChanged) {\n      const prevAnimationName = prevAnimationNameRef.current;\n      const currentAnimationName = getAnimationName(styles);\n\n      if (present) {\n        send('MOUNT');\n      } else if (currentAnimationName === 'none' || styles?.display === 'none') {\n        // If there is no exit animation or the element is hidden, animations won't run\n        // so we unmount instantly\n        send('UNMOUNT');\n      } else {\n        /**\n         * When `present` changes to `false`, we check changes to animation-name to\n         * determine whether an animation has started. We chose this approach (reading\n         * computed styles) because there is no `animationrun` event and `animationstart`\n         * fires after `animation-delay` has expired which would be too late.\n         */\n        const isAnimating = prevAnimationName !== currentAnimationName;\n\n        if (wasPresent && isAnimating) {\n          send('ANIMATION_OUT');\n        } else {\n          send('UNMOUNT');\n        }\n      }\n\n      prevPresentRef.current = present;\n    }\n  }, [present, send]);\n\n  useLayoutEffect(() => {\n    if (node) {\n      let timeoutId: number;\n      const ownerWindow = node.ownerDocument.defaultView ?? window;\n      /**\n       * Triggering an ANIMATION_OUT during an ANIMATION_IN will fire an `animationcancel`\n       * event for ANIMATION_IN after we have entered `unmountSuspended` state. So, we\n       * make sure we only trigger ANIMATION_END for the currently active animation.\n       */\n      const handleAnimationEnd = (event: AnimationEvent) => {\n        const currentAnimationName = getAnimationName(stylesRef.current);\n        // The event.animationName is unescaped for CSS syntax,\n        // so we need to escape it to compare with the animationName computed from the style.\n        const isCurrentAnimation = currentAnimationName.includes(CSS.escape(event.animationName));\n        if (event.target === node && isCurrentAnimation) {\n          // With React 18 concurrency this update is applied a frame after the\n          // animation ends, creating a flash of visible content. By setting the\n          // animation fill mode to \"forwards\", we force the node to keep the\n          // styles of the last keyframe, removing the flash.\n          //\n          // Previously we flushed the update via ReactDom.flushSync, but with\n          // exit animations this resulted in the node being removed from the\n          // DOM before the synthetic animationEnd event was dispatched, meaning\n          // user-provided event handlers would not be called.\n          // https://github.com/radix-ui/primitives/pull/1849\n          send('ANIMATION_END');\n          if (!prevPresentRef.current) {\n            const currentFillMode = node.style.animationFillMode;\n            node.style.animationFillMode = 'forwards';\n            // Reset the style after the node had time to unmount (for cases\n            // where the component chooses not to unmount). Doing this any\n            // sooner than `setTimeout` (e.g. with `requestAnimationFrame`)\n            // still causes a flash.\n            timeoutId = ownerWindow.setTimeout(() => {\n              if (node.style.animationFillMode === 'forwards') {\n                node.style.animationFillMode = currentFillMode;\n              }\n            });\n          }\n        }\n      };\n      const handleAnimationStart = (event: AnimationEvent) => {\n        if (event.target === node) {\n          // if animation occurred, store its name as the previous animation.\n          prevAnimationNameRef.current = getAnimationName(stylesRef.current);\n        }\n      };\n      node.addEventListener('animationstart', handleAnimationStart);\n      node.addEventListener('animationcancel', handleAnimationEnd);\n      node.addEventListener('animationend', handleAnimationEnd);\n      return () => {\n        ownerWindow.clearTimeout(timeoutId);\n        node.removeEventListener('animationstart', handleAnimationStart);\n        node.removeEventListener('animationcancel', handleAnimationEnd);\n        node.removeEventListener('animationend', handleAnimationEnd);\n      };\n    } else {\n      // Transition to the unmounted state if the node is removed prematurely.\n      // We avoid doing so during cleanup as the node may change but still exist.\n      send('ANIMATION_END');\n    }\n  }, [node, send]);\n\n  return {\n    isPresent: ['mounted', 'unmountSuspended'].includes(state),\n    ref: React.useCallback((node: HTMLElement) => {\n      stylesRef.current = node ? getComputedStyle(node) : null;\n      setNode(node);\n    }, []),\n  };\n}\n\n/* -----------------------------------------------------------------------------------------------*/\n\nfunction getAnimationName(styles: CSSStyleDeclaration | null) {\n  return styles?.animationName || 'none';\n}\n\n// Before React 19 accessing `element.props.ref` will throw a warning and suggest using `element.ref`\n// After React 19 accessing `element.ref` does the opposite.\n// https://github.com/facebook/react/pull/28348\n//\n// Access the ref using the method that doesn't yield a warning.\nfunction getElementRef(element: React.ReactElement<{ ref?: React.Ref<unknown> }>) {\n  // React <=18 in DEV\n  let getter = Object.getOwnPropertyDescriptor(element.props, 'ref')?.get;\n  let mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return (element as any).ref;\n  }\n\n  // React 19 in DEV\n  getter = Object.getOwnPropertyDescriptor(element, 'ref')?.get;\n  mayWarn = getter && 'isReactWarning' in getter && getter.isReactWarning;\n  if (mayWarn) {\n    return element.props.ref;\n  }\n\n  // Not DEV\n  return element.props.ref || (element as any).ref;\n}\n\nconst Root = Presence;\n\nexport {\n  Presence,\n  //\n  Root,\n};\nexport type { PresenceProps };\n","import * as React from 'react';\n\ntype Machine<S> = { [k: string]: { [k: string]: S } };\ntype MachineState<T> = keyof T;\ntype MachineEvent<T> = keyof UnionToIntersection<T[keyof T]>;\n\n// 🤯 https://fettblog.eu/typescript-union-to-intersection/\ntype UnionToIntersection<T> = (T extends any ? (x: T) => any : never) extends (x: infer R) => any\n  ? R\n  : never;\n\nexport function useStateMachine<M>(\n  initialState: MachineState<M>,\n  machine: M & Machine<MachineState<M>>\n) {\n  return React.useReducer((state: MachineState<M>, event: MachineEvent<M>): MachineState<M> => {\n    const nextState = (machine[state] as any)[event];\n    return nextState ?? state;\n  }, initialState);\n}\n","import * as React from 'react';\nimport { composeEventHandlers } from '@radix-ui/primitive';\nimport { useComposedRefs } from '@radix-ui/react-compose-refs';\nimport { createContextScope } from '@radix-ui/react-context';\nimport { DismissableLayer } from '@radix-ui/react-dismissable-layer';\nimport { useId } from '@radix-ui/react-id';\nimport * as PopperPrimitive from '@radix-ui/react-popper';\nimport { createPopperScope } from '@radix-ui/react-popper';\nimport { Portal as PortalPrimitive } from '@radix-ui/react-portal';\nimport { Presence } from '@radix-ui/react-presence';\nimport { Primitive } from '@radix-ui/react-primitive';\nimport { createSlottable } from '@radix-ui/react-slot';\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport * as VisuallyHiddenPrimitive from '@radix-ui/react-visually-hidden';\n\nimport type { Scope } from '@radix-ui/react-context';\n\ntype ScopedProps<P = {}> = P & { __scopeTooltip?: Scope };\nconst [createTooltipContext, createTooltipScope] = createContextScope('Tooltip', [\n  createPopperScope,\n]);\nconst usePopperScope = createPopperScope();\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipProvider\n * -----------------------------------------------------------------------------------------------*/\n\nconst PROVIDER_NAME = 'TooltipProvider';\nconst DEFAULT_DELAY_DURATION = 700;\nconst TOOLTIP_OPEN = 'tooltip.open';\n\ntype TooltipProviderContextValue = {\n  isOpenDelayedRef: React.MutableRefObject<boolean>;\n  delayDuration: number;\n  onOpen(): void;\n  onClose(): void;\n  onPointerInTransitChange(inTransit: boolean): void;\n  isPointerInTransitRef: React.MutableRefObject<boolean>;\n  disableHoverableContent: boolean;\n};\n\nconst [TooltipProviderContextProvider, useTooltipProviderContext] =\n  createTooltipContext<TooltipProviderContextValue>(PROVIDER_NAME);\n\ninterface TooltipProviderProps {\n  children: React.ReactNode;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened.\n   * @defaultValue 700\n   */\n  delayDuration?: number;\n  /**\n   * How much time a user has to enter another trigger without incurring a delay again.\n   * @defaultValue 300\n   */\n  skipDelayDuration?: number;\n  /**\n   * When `true`, trying to hover the content will result in the tooltip closing as the pointer leaves the trigger.\n   * @defaultValue false\n   */\n  disableHoverableContent?: boolean;\n}\n\nconst TooltipProvider: React.FC<TooltipProviderProps> = (\n  props: ScopedProps<TooltipProviderProps>\n) => {\n  const {\n    __scopeTooltip,\n    delayDuration = DEFAULT_DELAY_DURATION,\n    skipDelayDuration = 300,\n    disableHoverableContent = false,\n    children,\n  } = props;\n  const isOpenDelayedRef = React.useRef(true);\n  const isPointerInTransitRef = React.useRef(false);\n  const skipDelayTimerRef = React.useRef(0);\n\n  React.useEffect(() => {\n    const skipDelayTimer = skipDelayTimerRef.current;\n    return () => window.clearTimeout(skipDelayTimer);\n  }, []);\n\n  return (\n    <TooltipProviderContextProvider\n      scope={__scopeTooltip}\n      isOpenDelayedRef={isOpenDelayedRef}\n      delayDuration={delayDuration}\n      onOpen={React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        isOpenDelayedRef.current = false;\n      }, [])}\n      onClose={React.useCallback(() => {\n        window.clearTimeout(skipDelayTimerRef.current);\n        skipDelayTimerRef.current = window.setTimeout(\n          () => (isOpenDelayedRef.current = true),\n          skipDelayDuration\n        );\n      }, [skipDelayDuration])}\n      isPointerInTransitRef={isPointerInTransitRef}\n      onPointerInTransitChange={React.useCallback((inTransit: boolean) => {\n        isPointerInTransitRef.current = inTransit;\n      }, [])}\n      disableHoverableContent={disableHoverableContent}\n    >\n      {children}\n    </TooltipProviderContextProvider>\n  );\n};\n\nTooltipProvider.displayName = PROVIDER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * Tooltip\n * -----------------------------------------------------------------------------------------------*/\n\nconst TOOLTIP_NAME = 'Tooltip';\n\ntype TooltipContextValue = {\n  contentId: string;\n  open: boolean;\n  stateAttribute: 'closed' | 'delayed-open' | 'instant-open';\n  trigger: TooltipTriggerElement | null;\n  onTriggerChange(trigger: TooltipTriggerElement | null): void;\n  onTriggerEnter(): void;\n  onTriggerLeave(): void;\n  onOpen(): void;\n  onClose(): void;\n  disableHoverableContent: boolean;\n};\n\nconst [TooltipContextProvider, useTooltipContext] =\n  createTooltipContext<TooltipContextValue>(TOOLTIP_NAME);\n\ninterface TooltipProps {\n  children?: React.ReactNode;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  /**\n   * The duration from when the pointer enters the trigger until the tooltip gets opened. This will\n   * override the prop with the same name passed to Provider.\n   * @defaultValue 700\n   */\n  delayDuration?: number;\n  /**\n   * When `true`, trying to hover the content will result in the tooltip closing as the pointer leaves the trigger.\n   * @defaultValue false\n   */\n  disableHoverableContent?: boolean;\n}\n\nconst Tooltip: React.FC<TooltipProps> = (props: ScopedProps<TooltipProps>) => {\n  const {\n    __scopeTooltip,\n    children,\n    open: openProp,\n    defaultOpen,\n    onOpenChange,\n    disableHoverableContent: disableHoverableContentProp,\n    delayDuration: delayDurationProp,\n  } = props;\n  const providerContext = useTooltipProviderContext(TOOLTIP_NAME, props.__scopeTooltip);\n  const popperScope = usePopperScope(__scopeTooltip);\n  const [trigger, setTrigger] = React.useState<HTMLButtonElement | null>(null);\n  const contentId = useId();\n  const openTimerRef = React.useRef(0);\n  const disableHoverableContent =\n    disableHoverableContentProp ?? providerContext.disableHoverableContent;\n  const delayDuration = delayDurationProp ?? providerContext.delayDuration;\n  const wasOpenDelayedRef = React.useRef(false);\n  const [open, setOpen] = useControllableState({\n    prop: openProp,\n    defaultProp: defaultOpen ?? false,\n    onChange: (open) => {\n      if (open) {\n        providerContext.onOpen();\n\n        // as `onChange` is called within a lifecycle method we\n        // avoid dispatching via `dispatchDiscreteCustomEvent`.\n        document.dispatchEvent(new CustomEvent(TOOLTIP_OPEN));\n      } else {\n        providerContext.onClose();\n      }\n      onOpenChange?.(open);\n    },\n    caller: TOOLTIP_NAME,\n  });\n  const stateAttribute = React.useMemo(() => {\n    return open ? (wasOpenDelayedRef.current ? 'delayed-open' : 'instant-open') : 'closed';\n  }, [open]);\n\n  const handleOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    openTimerRef.current = 0;\n    wasOpenDelayedRef.current = false;\n    setOpen(true);\n  }, [setOpen]);\n\n  const handleClose = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    openTimerRef.current = 0;\n    setOpen(false);\n  }, [setOpen]);\n\n  const handleDelayedOpen = React.useCallback(() => {\n    window.clearTimeout(openTimerRef.current);\n    openTimerRef.current = window.setTimeout(() => {\n      wasOpenDelayedRef.current = true;\n      setOpen(true);\n      openTimerRef.current = 0;\n    }, delayDuration);\n  }, [delayDuration, setOpen]);\n\n  React.useEffect(() => {\n    return () => {\n      if (openTimerRef.current) {\n        window.clearTimeout(openTimerRef.current);\n        openTimerRef.current = 0;\n      }\n    };\n  }, []);\n\n  return (\n    <PopperPrimitive.Root {...popperScope}>\n      <TooltipContextProvider\n        scope={__scopeTooltip}\n        contentId={contentId}\n        open={open}\n        stateAttribute={stateAttribute}\n        trigger={trigger}\n        onTriggerChange={setTrigger}\n        onTriggerEnter={React.useCallback(() => {\n          if (providerContext.isOpenDelayedRef.current) handleDelayedOpen();\n          else handleOpen();\n        }, [providerContext.isOpenDelayedRef, handleDelayedOpen, handleOpen])}\n        onTriggerLeave={React.useCallback(() => {\n          if (disableHoverableContent) {\n            handleClose();\n          } else {\n            // Clear the timer in case the pointer leaves the trigger before the tooltip is opened.\n            window.clearTimeout(openTimerRef.current);\n            openTimerRef.current = 0;\n          }\n        }, [handleClose, disableHoverableContent])}\n        onOpen={handleOpen}\n        onClose={handleClose}\n        disableHoverableContent={disableHoverableContent}\n      >\n        {children}\n      </TooltipContextProvider>\n    </PopperPrimitive.Root>\n  );\n};\n\nTooltip.displayName = TOOLTIP_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipTrigger\n * -----------------------------------------------------------------------------------------------*/\n\nconst TRIGGER_NAME = 'TooltipTrigger';\n\ntype TooltipTriggerElement = React.ComponentRef<typeof Primitive.button>;\ntype PrimitiveButtonProps = React.ComponentPropsWithoutRef<typeof Primitive.button>;\ninterface TooltipTriggerProps extends PrimitiveButtonProps {}\n\nconst TooltipTrigger = React.forwardRef<TooltipTriggerElement, TooltipTriggerProps>(\n  (props: ScopedProps<TooltipTriggerProps>, forwardedRef) => {\n    const { __scopeTooltip, ...triggerProps } = props;\n    const context = useTooltipContext(TRIGGER_NAME, __scopeTooltip);\n    const providerContext = useTooltipProviderContext(TRIGGER_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const ref = React.useRef<TooltipTriggerElement>(null);\n    const composedRefs = useComposedRefs(forwardedRef, ref, context.onTriggerChange);\n    const isPointerDownRef = React.useRef(false);\n    const hasPointerMoveOpenedRef = React.useRef(false);\n    const handlePointerUp = React.useCallback(() => (isPointerDownRef.current = false), []);\n\n    React.useEffect(() => {\n      return () => document.removeEventListener('pointerup', handlePointerUp);\n    }, [handlePointerUp]);\n\n    return (\n      <PopperPrimitive.Anchor asChild {...popperScope}>\n        <Primitive.button\n          // We purposefully avoid adding `type=button` here because tooltip triggers are also\n          // commonly anchors and the anchor `type` attribute signifies MIME type.\n          aria-describedby={context.open ? context.contentId : undefined}\n          data-state={context.stateAttribute}\n          {...triggerProps}\n          ref={composedRefs}\n          onPointerMove={composeEventHandlers(props.onPointerMove, (event) => {\n            if (event.pointerType === 'touch') return;\n            if (\n              !hasPointerMoveOpenedRef.current &&\n              !providerContext.isPointerInTransitRef.current\n            ) {\n              context.onTriggerEnter();\n              hasPointerMoveOpenedRef.current = true;\n            }\n          })}\n          onPointerLeave={composeEventHandlers(props.onPointerLeave, () => {\n            context.onTriggerLeave();\n            hasPointerMoveOpenedRef.current = false;\n          })}\n          onPointerDown={composeEventHandlers(props.onPointerDown, () => {\n            if (context.open) {\n              context.onClose();\n            }\n            isPointerDownRef.current = true;\n            document.addEventListener('pointerup', handlePointerUp, { once: true });\n          })}\n          onFocus={composeEventHandlers(props.onFocus, () => {\n            if (!isPointerDownRef.current) context.onOpen();\n          })}\n          onBlur={composeEventHandlers(props.onBlur, context.onClose)}\n          onClick={composeEventHandlers(props.onClick, context.onClose)}\n        />\n      </PopperPrimitive.Anchor>\n    );\n  }\n);\n\nTooltipTrigger.displayName = TRIGGER_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipPortal\n * -----------------------------------------------------------------------------------------------*/\n\nconst PORTAL_NAME = 'TooltipPortal';\n\ntype PortalContextValue = { forceMount?: true };\nconst [PortalProvider, usePortalContext] = createTooltipContext<PortalContextValue>(PORTAL_NAME, {\n  forceMount: undefined,\n});\n\ntype PortalProps = React.ComponentPropsWithoutRef<typeof PortalPrimitive>;\ninterface TooltipPortalProps {\n  children?: React.ReactNode;\n  /**\n   * Specify a container element to portal the content into.\n   */\n  container?: PortalProps['container'];\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TooltipPortal: React.FC<TooltipPortalProps> = (props: ScopedProps<TooltipPortalProps>) => {\n  const { __scopeTooltip, forceMount, children, container } = props;\n  const context = useTooltipContext(PORTAL_NAME, __scopeTooltip);\n  return (\n    <PortalProvider scope={__scopeTooltip} forceMount={forceMount}>\n      <Presence present={forceMount || context.open}>\n        <PortalPrimitive asChild container={container}>\n          {children}\n        </PortalPrimitive>\n      </Presence>\n    </PortalProvider>\n  );\n};\n\nTooltipPortal.displayName = PORTAL_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipContent\n * -----------------------------------------------------------------------------------------------*/\n\nconst CONTENT_NAME = 'TooltipContent';\n\ntype TooltipContentElement = TooltipContentImplElement;\ninterface TooltipContentProps extends TooltipContentImplProps {\n  /**\n   * Used to force mounting when more control is needed. Useful when\n   * controlling animation with React animation libraries.\n   */\n  forceMount?: true;\n}\n\nconst TooltipContent = React.forwardRef<TooltipContentElement, TooltipContentProps>(\n  (props: ScopedProps<TooltipContentProps>, forwardedRef) => {\n    const portalContext = usePortalContext(CONTENT_NAME, props.__scopeTooltip);\n    const { forceMount = portalContext.forceMount, side = 'top', ...contentProps } = props;\n    const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n\n    return (\n      <Presence present={forceMount || context.open}>\n        {context.disableHoverableContent ? (\n          <TooltipContentImpl side={side} {...contentProps} ref={forwardedRef} />\n        ) : (\n          <TooltipContentHoverable side={side} {...contentProps} ref={forwardedRef} />\n        )}\n      </Presence>\n    );\n  }\n);\n\ntype Point = { x: number; y: number };\ntype Polygon = Point[];\n\ntype TooltipContentHoverableElement = TooltipContentImplElement;\ninterface TooltipContentHoverableProps extends TooltipContentImplProps {}\n\nconst TooltipContentHoverable = React.forwardRef<\n  TooltipContentHoverableElement,\n  TooltipContentHoverableProps\n>((props: ScopedProps<TooltipContentHoverableProps>, forwardedRef) => {\n  const context = useTooltipContext(CONTENT_NAME, props.__scopeTooltip);\n  const providerContext = useTooltipProviderContext(CONTENT_NAME, props.__scopeTooltip);\n  const ref = React.useRef<TooltipContentHoverableElement>(null);\n  const composedRefs = useComposedRefs(forwardedRef, ref);\n  const [pointerGraceArea, setPointerGraceArea] = React.useState<Polygon | null>(null);\n\n  const { trigger, onClose } = context;\n  const content = ref.current;\n\n  const { onPointerInTransitChange } = providerContext;\n\n  const handleRemoveGraceArea = React.useCallback(() => {\n    setPointerGraceArea(null);\n    onPointerInTransitChange(false);\n  }, [onPointerInTransitChange]);\n\n  const handleCreateGraceArea = React.useCallback(\n    (event: PointerEvent, hoverTarget: HTMLElement) => {\n      const currentTarget = event.currentTarget as HTMLElement;\n      const exitPoint = { x: event.clientX, y: event.clientY };\n      const exitSide = getExitSideFromRect(exitPoint, currentTarget.getBoundingClientRect());\n      const paddedExitPoints = getPaddedExitPoints(exitPoint, exitSide);\n      const hoverTargetPoints = getPointsFromRect(hoverTarget.getBoundingClientRect());\n      const graceArea = getHull([...paddedExitPoints, ...hoverTargetPoints]);\n      setPointerGraceArea(graceArea);\n      onPointerInTransitChange(true);\n    },\n    [onPointerInTransitChange]\n  );\n\n  React.useEffect(() => {\n    return () => handleRemoveGraceArea();\n  }, [handleRemoveGraceArea]);\n\n  React.useEffect(() => {\n    if (trigger && content) {\n      const handleTriggerLeave = (event: PointerEvent) => handleCreateGraceArea(event, content);\n      const handleContentLeave = (event: PointerEvent) => handleCreateGraceArea(event, trigger);\n\n      trigger.addEventListener('pointerleave', handleTriggerLeave);\n      content.addEventListener('pointerleave', handleContentLeave);\n      return () => {\n        trigger.removeEventListener('pointerleave', handleTriggerLeave);\n        content.removeEventListener('pointerleave', handleContentLeave);\n      };\n    }\n  }, [trigger, content, handleCreateGraceArea, handleRemoveGraceArea]);\n\n  React.useEffect(() => {\n    if (pointerGraceArea) {\n      const handleTrackPointerGrace = (event: PointerEvent) => {\n        const target = event.target as HTMLElement;\n        const pointerPosition = { x: event.clientX, y: event.clientY };\n        const hasEnteredTarget = trigger?.contains(target) || content?.contains(target);\n        const isPointerOutsideGraceArea = !isPointInPolygon(pointerPosition, pointerGraceArea);\n\n        if (hasEnteredTarget) {\n          handleRemoveGraceArea();\n        } else if (isPointerOutsideGraceArea) {\n          handleRemoveGraceArea();\n          onClose();\n        }\n      };\n      document.addEventListener('pointermove', handleTrackPointerGrace);\n      return () => document.removeEventListener('pointermove', handleTrackPointerGrace);\n    }\n  }, [trigger, content, pointerGraceArea, onClose, handleRemoveGraceArea]);\n\n  return <TooltipContentImpl {...props} ref={composedRefs} />;\n});\n\nconst [VisuallyHiddenContentContextProvider, useVisuallyHiddenContentContext] =\n  createTooltipContext(TOOLTIP_NAME, { isInside: false });\n\ntype TooltipContentImplElement = React.ComponentRef<typeof PopperPrimitive.Content>;\ntype DismissableLayerProps = React.ComponentPropsWithoutRef<typeof DismissableLayer>;\ntype PopperContentProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Content>;\ninterface TooltipContentImplProps extends Omit<PopperContentProps, 'onPlaced'> {\n  /**\n   * A more descriptive label for accessibility purpose\n   */\n  'aria-label'?: string;\n\n  /**\n   * Event handler called when the escape key is down.\n   * Can be prevented.\n   */\n  onEscapeKeyDown?: DismissableLayerProps['onEscapeKeyDown'];\n  /**\n   * Event handler called when the a `pointerdown` event happens outside of the `Tooltip`.\n   * Can be prevented.\n   */\n  onPointerDownOutside?: DismissableLayerProps['onPointerDownOutside'];\n}\n\nconst Slottable = createSlottable('TooltipContent');\n\nconst TooltipContentImpl = React.forwardRef<TooltipContentImplElement, TooltipContentImplProps>(\n  (props: ScopedProps<TooltipContentImplProps>, forwardedRef) => {\n    const {\n      __scopeTooltip,\n      children,\n      'aria-label': ariaLabel,\n      onEscapeKeyDown,\n      onPointerDownOutside,\n      ...contentProps\n    } = props;\n    const context = useTooltipContext(CONTENT_NAME, __scopeTooltip);\n    const popperScope = usePopperScope(__scopeTooltip);\n    const { onClose } = context;\n\n    // Close this tooltip if another one opens\n    React.useEffect(() => {\n      document.addEventListener(TOOLTIP_OPEN, onClose);\n      return () => document.removeEventListener(TOOLTIP_OPEN, onClose);\n    }, [onClose]);\n\n    // Close the tooltip if the trigger is scrolled\n    React.useEffect(() => {\n      if (context.trigger) {\n        const handleScroll = (event: Event) => {\n          const target = event.target as HTMLElement;\n          if (target?.contains(context.trigger)) onClose();\n        };\n        window.addEventListener('scroll', handleScroll, { capture: true });\n        return () => window.removeEventListener('scroll', handleScroll, { capture: true });\n      }\n    }, [context.trigger, onClose]);\n\n    return (\n      <DismissableLayer\n        asChild\n        disableOutsidePointerEvents={false}\n        onEscapeKeyDown={onEscapeKeyDown}\n        onPointerDownOutside={onPointerDownOutside}\n        onFocusOutside={(event) => event.preventDefault()}\n        onDismiss={onClose}\n      >\n        <PopperPrimitive.Content\n          data-state={context.stateAttribute}\n          {...popperScope}\n          {...contentProps}\n          ref={forwardedRef}\n          style={{\n            ...contentProps.style,\n            // re-namespace exposed content custom properties\n            ...{\n              '--radix-tooltip-content-transform-origin': 'var(--radix-popper-transform-origin)',\n              '--radix-tooltip-content-available-width': 'var(--radix-popper-available-width)',\n              '--radix-tooltip-content-available-height': 'var(--radix-popper-available-height)',\n              '--radix-tooltip-trigger-width': 'var(--radix-popper-anchor-width)',\n              '--radix-tooltip-trigger-height': 'var(--radix-popper-anchor-height)',\n            },\n          }}\n        >\n          <Slottable>{children}</Slottable>\n          <VisuallyHiddenContentContextProvider scope={__scopeTooltip} isInside={true}>\n            <VisuallyHiddenPrimitive.Root id={context.contentId} role=\"tooltip\">\n              {ariaLabel || children}\n            </VisuallyHiddenPrimitive.Root>\n          </VisuallyHiddenContentContextProvider>\n        </PopperPrimitive.Content>\n      </DismissableLayer>\n    );\n  }\n);\n\nTooltipContent.displayName = CONTENT_NAME;\n\n/* -------------------------------------------------------------------------------------------------\n * TooltipArrow\n * -----------------------------------------------------------------------------------------------*/\n\nconst ARROW_NAME = 'TooltipArrow';\n\ntype TooltipArrowElement = React.ComponentRef<typeof PopperPrimitive.Arrow>;\ntype PopperArrowProps = React.ComponentPropsWithoutRef<typeof PopperPrimitive.Arrow>;\ninterface TooltipArrowProps extends PopperArrowProps {}\n\nconst TooltipArrow = React.forwardRef<TooltipArrowElement, TooltipArrowProps>(\n  (props: ScopedProps<TooltipArrowProps>, forwardedRef) => {\n    const { __scopeTooltip, ...arrowProps } = props;\n    const popperScope = usePopperScope(__scopeTooltip);\n    const visuallyHiddenContentContext = useVisuallyHiddenContentContext(\n      ARROW_NAME,\n      __scopeTooltip\n    );\n    // if the arrow is inside the `VisuallyHidden`, we don't want to render it all to\n    // prevent issues in positioning the arrow due to the duplicate\n    return visuallyHiddenContentContext.isInside ? null : (\n      <PopperPrimitive.Arrow {...popperScope} {...arrowProps} ref={forwardedRef} />\n    );\n  }\n);\n\nTooltipArrow.displayName = ARROW_NAME;\n\n/* -----------------------------------------------------------------------------------------------*/\n\ntype Side = NonNullable<TooltipContentProps['side']>;\n\nfunction getExitSideFromRect(point: Point, rect: DOMRect): Side {\n  const top = Math.abs(rect.top - point.y);\n  const bottom = Math.abs(rect.bottom - point.y);\n  const right = Math.abs(rect.right - point.x);\n  const left = Math.abs(rect.left - point.x);\n\n  switch (Math.min(top, bottom, right, left)) {\n    case left:\n      return 'left';\n    case right:\n      return 'right';\n    case top:\n      return 'top';\n    case bottom:\n      return 'bottom';\n    default:\n      throw new Error('unreachable');\n  }\n}\n\nfunction getPaddedExitPoints(exitPoint: Point, exitSide: Side, padding = 5) {\n  const paddedExitPoints: Point[] = [];\n  switch (exitSide) {\n    case 'top':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y + padding },\n        { x: exitPoint.x + padding, y: exitPoint.y + padding }\n      );\n      break;\n    case 'bottom':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y - padding },\n        { x: exitPoint.x + padding, y: exitPoint.y - padding }\n      );\n      break;\n    case 'left':\n      paddedExitPoints.push(\n        { x: exitPoint.x + padding, y: exitPoint.y - padding },\n        { x: exitPoint.x + padding, y: exitPoint.y + padding }\n      );\n      break;\n    case 'right':\n      paddedExitPoints.push(\n        { x: exitPoint.x - padding, y: exitPoint.y - padding },\n        { x: exitPoint.x - padding, y: exitPoint.y + padding }\n      );\n      break;\n  }\n  return paddedExitPoints;\n}\n\nfunction getPointsFromRect(rect: DOMRect) {\n  const { top, right, bottom, left } = rect;\n  return [\n    { x: left, y: top },\n    { x: right, y: top },\n    { x: right, y: bottom },\n    { x: left, y: bottom },\n  ];\n}\n\n// Determine if a point is inside of a polygon.\n// Based on https://github.com/substack/point-in-polygon\nfunction isPointInPolygon(point: Point, polygon: Polygon) {\n  const { x, y } = point;\n  let inside = false;\n  for (let i = 0, j = polygon.length - 1; i < polygon.length; j = i++) {\n    const ii = polygon[i]!;\n    const jj = polygon[j]!;\n    const xi = ii.x;\n    const yi = ii.y;\n    const xj = jj.x;\n    const yj = jj.y;\n\n    // prettier-ignore\n    const intersect = ((yi > y) !== (yj > y)) && (x < (xj - xi) * (y - yi) / (yj - yi) + xi);\n    if (intersect) inside = !inside;\n  }\n\n  return inside;\n}\n\n// Returns a new array of points representing the convex hull of the given set of points.\n// https://www.nayuki.io/page/convex-hull-algorithm\nfunction getHull<P extends Point>(points: Readonly<Array<P>>): Array<P> {\n  const newPoints: Array<P> = points.slice();\n  newPoints.sort((a: Point, b: Point) => {\n    if (a.x < b.x) return -1;\n    else if (a.x > b.x) return +1;\n    else if (a.y < b.y) return -1;\n    else if (a.y > b.y) return +1;\n    else return 0;\n  });\n  return getHullPresorted(newPoints);\n}\n\n// Returns the convex hull, assuming that each points[i] <= points[i + 1]. Runs in O(n) time.\nfunction getHullPresorted<P extends Point>(points: Readonly<Array<P>>): Array<P> {\n  if (points.length <= 1) return points.slice();\n\n  const upperHull: Array<P> = [];\n  for (let i = 0; i < points.length; i++) {\n    const p = points[i]!;\n    while (upperHull.length >= 2) {\n      const q = upperHull[upperHull.length - 1]!;\n      const r = upperHull[upperHull.length - 2]!;\n      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) upperHull.pop();\n      else break;\n    }\n    upperHull.push(p);\n  }\n  upperHull.pop();\n\n  const lowerHull: Array<P> = [];\n  for (let i = points.length - 1; i >= 0; i--) {\n    const p = points[i]!;\n    while (lowerHull.length >= 2) {\n      const q = lowerHull[lowerHull.length - 1]!;\n      const r = lowerHull[lowerHull.length - 2]!;\n      if ((q.x - r.x) * (p.y - r.y) >= (q.y - r.y) * (p.x - r.x)) lowerHull.pop();\n      else break;\n    }\n    lowerHull.push(p);\n  }\n  lowerHull.pop();\n\n  if (\n    upperHull.length === 1 &&\n    lowerHull.length === 1 &&\n    upperHull[0]!.x === lowerHull[0]!.x &&\n    upperHull[0]!.y === lowerHull[0]!.y\n  ) {\n    return upperHull;\n  } else {\n    return upperHull.concat(lowerHull);\n  }\n}\n\nconst Provider = TooltipProvider;\nconst Root = Tooltip;\nconst Trigger = TooltipTrigger;\nconst Portal = TooltipPortal;\nconst Content = TooltipContent;\nconst Arrow = TooltipArrow;\n\nexport {\n  createTooltipScope,\n  //\n  TooltipProvider,\n  Tooltip,\n  TooltipTrigger,\n  TooltipPortal,\n  TooltipContent,\n  TooltipArrow,\n  //\n  Provider,\n  Root,\n  Trigger,\n  Portal,\n  Content,\n  Arrow,\n};\nexport type {\n  TooltipProviderProps,\n  TooltipProps,\n  TooltipTriggerProps,\n  TooltipPortalProps,\n  TooltipContentProps,\n  TooltipArrowProps,\n};\n","// src/visually-hidden.tsx\nimport * as React from \"react\";\nimport { Primitive } from \"@radix-ui/react-primitive\";\nimport { jsx } from \"react/jsx-runtime\";\nvar VISUALLY_HIDDEN_STYLES = Object.freeze({\n  // See: https://github.com/twbs/bootstrap/blob/main/scss/mixins/_visually-hidden.scss\n  position: \"absolute\",\n  border: 0,\n  width: 1,\n  height: 1,\n  padding: 0,\n  margin: -1,\n  overflow: \"hidden\",\n  clip: \"rect(0, 0, 0, 0)\",\n  whiteSpace: \"nowrap\",\n  wordWrap: \"normal\"\n});\nvar NAME = \"VisuallyHidden\";\nvar VisuallyHidden = React.forwardRef(\n  (props, forwardedRef) => {\n    return /* @__PURE__ */ jsx(\n      Primitive.span,\n      {\n        ...props,\n        ref: forwardedRef,\n        style: { ...VISUALLY_HIDDEN_STYLES, ...props.style }\n      }\n    );\n  }\n);\nVisuallyHidden.displayName = NAME;\nvar Root = VisuallyHidden;\nexport {\n  Root,\n  VISUALLY_HIDDEN_STYLES,\n  VisuallyHidden\n};\n//# sourceMappingURL=index.mjs.map\n"],"names":["originalBodyPointerEvents","composeEventHandlers","originalEventHandler","ourEventHandler","checkForDefaultPrevented","event","defaultPrevented","window","document","createElement","CONTEXT_UPDATE","DismissableLayerContext","React","layers","Set","layersWithOutsidePointerEventsDisabled","branches","DismissableLayer","props","forwardedRef","globalThis","node","disableOutsidePointerEvents","onEscapeKeyDown","onPointerDownOutside","onFocusOutside","onInteractOutside","onDismiss","layerProps","context","setNode","ownerDocument","force","composedRefs","useComposedRefs","Array","from","highestLayerWithOutsidePointerEventsDisabled","slice","highestLayerWithOutsidePointerEventsDisabledIndex","indexOf","index","isBodyPointerEventsDisabled","size","isPointerEventsEnabled","pointerDownOutside","usePointerDownOutside","handlePointerDownOutside","useCallbackRef","isPointerInsideReactTreeRef","handleClickRef","handlePointerDown","target","current","handleAndDispatchPointerDownOutsideEvent","handleAndDispatchCustomEvent","eventDetail","discrete","originalEvent","pointerType","removeEventListener","addEventListener","once","timerId","setTimeout","clearTimeout","onPointerDownCapture","isPointerDownOnBranch","some","branch","contains","focusOutside","useFocusOutside","handleFocusOutside","isFocusInsideReactTreeRef","handleFocus","onFocusCapture","onBlurCapture","useEscapeKeydown","preventDefault","body","style","pointerEvents","add","dispatchUpdate","delete","handleUpdate","jsx","Primitive","div","ref","CustomEvent","dispatchEvent","name","handler","detail","param","bubbles","cancelable","dispatchDiscreteCustomEvent","displayName","DismissableLayerBranch","POPPER_NAME","createPopperContext","createPopperScope","createContextScope","PopperProvider","usePopperContext","Popper","__scopePopper","children","anchor","setAnchor","scope","onAnchorChange","ANCHOR_NAME","PopperAnchor","virtualRef","anchorProps","anchorRef","previousAnchor","CONTENT_NAME","PopperContentProvider","useContentContext","PopperContent","middlewareData","arrowSize","side","sideOffset","align","alignOffset","arrowPadding","avoidCollisions","collisionBoundary","collisionPadding","collisionPaddingProp","sticky","hideWhenDetached","updatePositionStrategy","onPlaced","contentProps","content","setContent","arrow","setArrow","useSize","arrowWidth","width","arrowHeight","height","top","right","bottom","left","boundary","isArray","hasExplicitBoundaries","length","detectOverflowOptions","padding","filter","isNotNull","altBoundary","refs","floatingStyles","placement","isPositioned","useFloating","strategy","whileElementsMounted","args","autoUpdate","animationFrame","elements","reference","middleware","offset","mainAxis","alignmentAxis","shift","crossAxis","limiter","limitShift","flip","apply","rects","availableWidth","availableHeight","anchorWidth","anchorHeight","contentStyle","floating","setProperty","concat","floatingUIarrow","element","transformOrigin","hide","placedSide","placedAlign","getSideAndAlignFromPlacement","handlePlaced","useLayoutEffect","arrowX","x","arrowY","y","cannotCenterArrow","centerOffset","contentZIndex","setContentZIndex","getComputedStyle","zIndex","setFloating","transform","minWidth","join","referenceHidden","visibility","dir","onArrowChange","shouldHideArrow","animation","ARROW_NAME","OPPOSITE_SIDE","PopperArrow","arrowProps","contentContext","baseSide","position","ArrowPrimitive","display","value","options","fn","data","isArrowHidden","noArrowAlign","start","center","end","arrowXCenter","arrowYCenter","split","Presence","Object","getter","mayWarn","present","presence","usePresence","initialState","machine","React2","stylesRef","prevPresentRef","prevAnimationNameRef","state","send","mounted","UNMOUNT","ANIMATION_OUT","unmountSuspended","MOUNT","ANIMATION_END","unmounted","nextState","currentAnimationName","getAnimationName","styles","wasPresent","prevAnimationName","timeoutId","ownerWindow","defaultView","handleAnimationEnd","isCurrentAnimation","includes","CSS","escape","animationName","currentFillMode","animationFillMode","handleAnimationStart","isPresent","child","only","getOwnPropertyDescriptor","get","isReactWarning","forceMount","createTooltipContext","createTooltipScope","usePopperScope","PROVIDER_NAME","TOOLTIP_OPEN","TooltipProviderContextProvider","useTooltipProviderContext","TooltipProvider","__scopeTooltip","delayDuration","skipDelayDuration","disableHoverableContent","isOpenDelayedRef","isPointerInTransitRef","skipDelayTimerRef","skipDelayTimer","onOpen","onClose","onPointerInTransitChange","inTransit","TOOLTIP_NAME","TooltipContextProvider","useTooltipContext","Tooltip","open","openProp","defaultOpen","onOpenChange","disableHoverableContentProp","delayDurationProp","providerContext","popperScope","trigger","setTrigger","contentId","useId","openTimerRef","wasOpenDelayedRef","setOpen","useControllableState","prop","defaultProp","onChange","caller","stateAttribute","handleOpen","handleClose","handleDelayedOpen","onTriggerChange","onTriggerEnter","onTriggerLeave","TRIGGER_NAME","TooltipTrigger","triggerProps","isPointerDownRef","hasPointerMoveOpenedRef","handlePointerUp","asChild","button","onPointerMove","onPointerLeave","onPointerDown","onFocus","onBlur","onClick","PORTAL_NAME","PortalProvider","usePortalContext","TooltipPortal","container","PortalPrimitive","TooltipContent","portalContext","TooltipContentImpl","TooltipContentHoverable","pointerGraceArea","setPointerGraceArea","handleRemoveGraceArea","handleCreateGraceArea","hoverTarget","currentTarget","exitPoint","clientX","clientY","exitSide","getExitSideFromRect","point","rect","Math","abs","min","getBoundingClientRect","getHull","points","newPoints","sort","a","b","getHullPresorted","upperHull","i","p","q","r","pop","push","lowerHull","getPaddedExitPoints","paddedExitPoints","getPointsFromRect","handleTriggerLeave","handleContentLeave","handleTrackPointerGrace","pointerPosition","hasEnteredTarget","isPointerOutsideGraceArea","isPointInPolygon","polygon","inside","j","ii","jj","xi","yi","xj","yj","VisuallyHiddenContentContextProvider","useVisuallyHiddenContentContext","isInside","Slottable","createSlottable","ariaLabel","handleScroll","capture","jsxs","VisuallyHiddenPrimitive","id","role","TooltipArrow","visuallyHiddenContentContext","Provider","Root","Trigger","Portal","Content","VISUALLY_HIDDEN_STYLES","freeze","border","margin","overflow","clip","whiteSpace","wordWrap","VisuallyHidden","react__WEBPACK_IMPORTED_MODULE_0__","forwardRef","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_1__","_radix_ui_react_primitive__WEBPACK_IMPORTED_MODULE_2__","WV","span"],"sourceRoot":""}