{"version":3,"file":"static/chunks/1002-a2d6d2c2b4a8d321.js","mappings":"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","sources":["webpack://_N_E/./components/ai-elements/code-block.tsx","webpack://_N_E/./components/ai-elements/conversation.tsx","webpack://_N_E/./components/ai-elements/response.tsx","webpack://_N_E/./components/ai-elements/message.tsx","webpack://_N_E/./components/ai-elements/actions.tsx","webpack://_N_E/./components/ai-elements/reasoning.tsx","webpack://_N_E/./components/ai-elements/source.tsx","webpack://_N_E/./components/message-renderer.tsx","webpack://_N_E/./components/ui/alert.tsx","webpack://_N_E/./components/ui/collapsible.tsx","webpack://_N_E/./components/ui/tabs.tsx","webpack://_N_E/./hooks/use-uppy.tsx","webpack://_N_E/./components/uppy-dashboard.tsx"],"sourcesContent":["'use client';\n\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\nimport { CheckIcon, CopyIcon } from 'lucide-react';\nimport type { ComponentProps, HTMLAttributes, ReactNode } from 'react';\nimport { createContext, useContext, useState } from 'react';\nimport { Prism as SyntaxHighlighter } from 'react-syntax-highlighter';\nimport {\n  oneDark,\n  oneLight,\n} from 'react-syntax-highlighter/dist/esm/styles/prism';\n\ntype CodeBlockContextType = {\n  code: string;\n};\n\nconst CodeBlockContext = createContext<CodeBlockContextType>({\n  code: '',\n});\n\nexport type CodeBlockProps = HTMLAttributes<HTMLDivElement> & {\n  code: string;\n  language: string;\n  showLineNumbers?: boolean;\n  children?: ReactNode;\n};\n\nexport const CodeBlock = ({\n  code,\n  language,\n  showLineNumbers = false,\n  className,\n  children,\n  ...props\n}: CodeBlockProps) => (\n  <CodeBlockContext.Provider value={{ code }}>\n    <div\n      className={cn(\n        'relative w-full overflow-hidden rounded-md border bg-background text-foreground',\n        className\n      )}\n      {...props}\n    >\n      <div className=\"relative\">\n        <SyntaxHighlighter\n          className=\"overflow-hidden dark:hidden\"\n          codeTagProps={{\n            className: 'font-mono text-sm',\n          }}\n          customStyle={{\n            margin: 0,\n            padding: '1rem',\n            fontSize: '0.875rem',\n            background: 'hsl(var(--background))',\n            color: 'hsl(var(--foreground))',\n          }}\n          language={language}\n          lineNumberStyle={{\n            color: 'hsl(var(--muted-foreground))',\n            paddingRight: '1rem',\n            minWidth: '2.5rem',\n          }}\n          showLineNumbers={showLineNumbers}\n          style={oneLight}\n        >\n          {code}\n        </SyntaxHighlighter>\n        <SyntaxHighlighter\n          className=\"hidden overflow-hidden dark:block\"\n          codeTagProps={{\n            className: 'font-mono text-sm',\n          }}\n          customStyle={{\n            margin: 0,\n            padding: '1rem',\n            fontSize: '0.875rem',\n            background: 'hsl(var(--background))',\n            color: 'hsl(var(--foreground))',\n          }}\n          language={language}\n          lineNumberStyle={{\n            color: 'hsl(var(--muted-foreground))',\n            paddingRight: '1rem',\n            minWidth: '2.5rem',\n          }}\n          showLineNumbers={showLineNumbers}\n          style={oneDark}\n        >\n          {code}\n        </SyntaxHighlighter>\n        {children && (\n          <div className=\"absolute top-2 right-2 flex items-center gap-2\">\n            {children}\n          </div>\n        )}\n      </div>\n    </div>\n  </CodeBlockContext.Provider>\n);\n\nexport type CodeBlockCopyButtonProps = ComponentProps<typeof Button> & {\n  onCopy?: () => void;\n  onError?: (error: Error) => void;\n  timeout?: number;\n};\n\nexport const CodeBlockCopyButton = ({\n  onCopy,\n  onError,\n  timeout = 2000,\n  children,\n  className,\n  ...props\n}: CodeBlockCopyButtonProps) => {\n  const [isCopied, setIsCopied] = useState(false);\n  const { code } = useContext(CodeBlockContext);\n\n  const copyToClipboard = async () => {\n    if (typeof window === 'undefined' || !navigator.clipboard.writeText) {\n      onError?.(new Error('Clipboard API not available'));\n      return;\n    }\n\n    try {\n      await navigator.clipboard.writeText(code);\n      setIsCopied(true);\n      onCopy?.();\n      setTimeout(() => setIsCopied(false), timeout);\n    } catch (error) {\n      onError?.(error as Error);\n    }\n  };\n\n  const Icon = isCopied ? CheckIcon : CopyIcon;\n\n  return (\n    <Button\n      className={cn('shrink-0', className)}\n      onClick={copyToClipboard}\n      size=\"icon\"\n      variant=\"ghost\"\n      {...props}\n    >\n      {children ?? <Icon size={14} />}\n    </Button>\n  );\n};\n","'use client';\n\nimport { Button } from '@/components/ui/button';\nimport { cn } from '@/lib/utils';\nimport { ArrowDownIcon } from 'lucide-react';\nimport type { ComponentProps } from 'react';\nimport { useCallback } from 'react';\nimport { StickToBottom, useStickToBottomContext } from 'use-stick-to-bottom';\n\n// @ts-ignore\nexport type ConversationProps = ComponentProps<typeof StickToBottom>;\n\n// @ts-ignore\nexport const Conversation = ({ className, ...props }: ConversationProps) => (\n// @ts-ignore\n  <StickToBottom\n    className={cn('relative flex-1 overflow-y-auto', className)}\n    initial=\"smooth\"\n    resize=\"smooth\"\n    role=\"log\"\n    {...props}\n  />\n);\n\nexport type ConversationContentProps = ComponentProps<\n  // @ts-ignore\n  typeof StickToBottom.Content\n>;\n\nexport const ConversationContent = ({\n  // @ts-ignore\n  className,\n  ...props\n}: ConversationContentProps) => (\n  // @ts-ignore\n  <StickToBottom.Content className={cn('p-4', className)} {...props} />\n);\n\nexport type ConversationScrollButtonProps = ComponentProps<typeof Button>;\n\nexport const ConversationScrollButton = ({\n  className,\n  ...props\n}: ConversationScrollButtonProps) => {\n  const { isAtBottom, scrollToBottom } = useStickToBottomContext();\n\n  const handleScrollToBottom = useCallback(() => {\n    scrollToBottom();\n  }, [scrollToBottom]);\n\n  return (\n    !isAtBottom && (\n      <Button\n        className={cn(\n          'absolute bottom-4 left-[50%] translate-x-[-50%] rounded-full',\n          className\n        )}\n        onClick={handleScrollToBottom}\n        size=\"icon\"\n        type=\"button\"\n        variant=\"outline\"\n        {...props}\n      >\n        <ArrowDownIcon className=\"size-4\" />\n      </Button>\n    )\n  );\n};\n","'use client';\n\nimport { cn } from '@/lib/utils';\nimport type { ComponentProps, HTMLAttributes } from 'react';\nimport { isValidElement, memo } from 'react';\nimport ReactMarkdown, { type Options } from 'react-markdown';\nimport rehypeKatex from 'rehype-katex';\nimport remarkGfm from 'remark-gfm';\nimport remarkMath from 'remark-math';\nimport { CodeBlock, CodeBlockCopyButton } from './code-block';\nimport 'katex/dist/katex.min.css';\nimport hardenReactMarkdown from 'harden-react-markdown';\n\n/**\n * Parses markdown text and removes incomplete tokens to prevent partial rendering\n * of links, images, bold, and italic formatting during streaming.\n */\nfunction parseIncompleteMarkdown(text: string): string {\n  if (!text || typeof text !== 'string') {\n    return text;\n  }\n\n  let result = text;\n\n  // Handle incomplete links and images\n  // Pattern: [...] or ![...] where the closing ] is missing\n  const linkImagePattern = /(!?\\[)([^\\]]*?)$/;\n  const linkMatch = result.match(linkImagePattern);\n  if (linkMatch) {\n    // If we have an unterminated [ or ![, remove it and everything after\n    const startIndex = result.lastIndexOf(linkMatch[1]);\n    result = result.substring(0, startIndex);\n  }\n\n  // Handle incomplete bold formatting (**)\n  const boldPattern = /(\\*\\*)([^*]*?)$/;\n  const boldMatch = result.match(boldPattern);\n  if (boldMatch) {\n    // Count the number of ** in the entire string\n    const asteriskPairs = (result.match(/\\*\\*/g) || []).length;\n    // If odd number of **, we have an incomplete bold - complete it\n    if (asteriskPairs % 2 === 1) {\n      result = `${result}**`;\n    }\n  }\n\n  // Handle incomplete italic formatting (__)\n  const italicPattern = /(__)([^_]*?)$/;\n  const italicMatch = result.match(italicPattern);\n  if (italicMatch) {\n    // Count the number of __ in the entire string\n    const underscorePairs = (result.match(/__/g) || []).length;\n    // If odd number of __, we have an incomplete italic - complete it\n    if (underscorePairs % 2 === 1) {\n      result = `${result}__`;\n    }\n  }\n\n  // Handle incomplete single asterisk italic (*)\n  const singleAsteriskPattern = /(\\*)([^*]*?)$/;\n  const singleAsteriskMatch = result.match(singleAsteriskPattern);\n  if (singleAsteriskMatch) {\n    // Count single asterisks that aren't part of **\n    const singleAsterisks = result.split('').reduce((acc, char, index) => {\n      if (char === '*') {\n        // Check if it's part of a ** pair\n        const prevChar = result[index - 1];\n        const nextChar = result[index + 1];\n        if (prevChar !== '*' && nextChar !== '*') {\n          return acc + 1;\n        }\n      }\n      return acc;\n    }, 0);\n\n    // If odd number of single *, we have an incomplete italic - complete it\n    if (singleAsterisks % 2 === 1) {\n      result = `${result}*`;\n    }\n  }\n\n  // Handle incomplete single underscore italic (_)\n  const singleUnderscorePattern = /(_)([^_]*?)$/;\n  const singleUnderscoreMatch = result.match(singleUnderscorePattern);\n  if (singleUnderscoreMatch) {\n    // Count single underscores that aren't part of __\n    const singleUnderscores = result.split('').reduce((acc, char, index) => {\n      if (char === '_') {\n        // Check if it's part of a __ pair\n        const prevChar = result[index - 1];\n        const nextChar = result[index + 1];\n        if (prevChar !== '_' && nextChar !== '_') {\n          return acc + 1;\n        }\n      }\n      return acc;\n    }, 0);\n\n    // If odd number of single _, we have an incomplete italic - complete it\n    if (singleUnderscores % 2 === 1) {\n      result = `${result}_`;\n    }\n  }\n\n  // Handle incomplete inline code blocks (`) - but avoid code blocks (```)\n  const inlineCodePattern = /(`)([^`]*?)$/;\n  const inlineCodeMatch = result.match(inlineCodePattern);\n  if (inlineCodeMatch) {\n    // Check if we're dealing with a code block (triple backticks)\n    const hasCodeBlockStart = result.includes('```');\n    const codeBlockPattern = /```[\\s\\S]*?```/g;\n    const completeCodeBlocks = (result.match(codeBlockPattern) || []).length;\n    const allTripleBackticks = (result.match(/```/g) || []).length;\n\n    // If we have an odd number of ``` sequences, we're inside an incomplete code block\n    // In this case, don't complete inline code\n    const insideIncompleteCodeBlock = allTripleBackticks % 2 === 1;\n\n    if (!insideIncompleteCodeBlock) {\n      // Count the number of single backticks that are NOT part of triple backticks\n      let singleBacktickCount = 0;\n      for (let i = 0; i < result.length; i++) {\n        if (result[i] === '`') {\n          // Check if this backtick is part of a triple backtick sequence\n          const isTripleStart = result.substring(i, i + 3) === '```';\n          const isTripleMiddle =\n            i > 0 && result.substring(i - 1, i + 2) === '```';\n          const isTripleEnd = i > 1 && result.substring(i - 2, i + 1) === '```';\n\n          if (!(isTripleStart || isTripleMiddle || isTripleEnd)) {\n            singleBacktickCount++;\n          }\n        }\n      }\n\n      // If odd number of single backticks, we have an incomplete inline code - complete it\n      if (singleBacktickCount % 2 === 1) {\n        result = `${result}\\``;\n      }\n    }\n  }\n\n  // Handle incomplete strikethrough formatting (~~)\n  const strikethroughPattern = /(~~)([^~]*?)$/;\n  const strikethroughMatch = result.match(strikethroughPattern);\n  if (strikethroughMatch) {\n    // Count the number of ~~ in the entire string\n    const tildePairs = (result.match(/~~/g) || []).length;\n    // If odd number of ~~, we have an incomplete strikethrough - complete it\n    if (tildePairs % 2 === 1) {\n      result = `${result}~~`;\n    }\n  }\n\n  return result;\n}\n\n// Create a hardened version of ReactMarkdown\nconst HardenedMarkdown = hardenReactMarkdown(ReactMarkdown);\n\nexport type ResponseProps = HTMLAttributes<HTMLDivElement> & {\n  options?: Options;\n  children: Options['children'];\n  allowedImagePrefixes?: ComponentProps<\n    ReturnType<typeof hardenReactMarkdown>\n  >['allowedImagePrefixes'];\n  allowedLinkPrefixes?: ComponentProps<\n    ReturnType<typeof hardenReactMarkdown>\n  >['allowedLinkPrefixes'];\n  defaultOrigin?: ComponentProps<\n    ReturnType<typeof hardenReactMarkdown>\n  >['defaultOrigin'];\n  parseIncompleteMarkdown?: boolean;\n};\n\nconst components: Options['components'] = {\n  ol: ({ node, children, className, ...props }) => (\n    <ol className={cn('ml-4 list-outside list-decimal', className)} {...props}>\n      {children}\n    </ol>\n  ),\n  li: ({ node, children, className, ...props }) => (\n    <li className={cn('py-1', className)} {...props}>\n      {children}\n    </li>\n  ),\n  ul: ({ node, children, className, ...props }) => (\n    <ul className={cn('ml-4 list-outside list-disc', className)} {...props}>\n      {children}\n    </ul>\n  ),\n  hr: ({ node, className, ...props }) => (\n    <hr className={cn('my-6 border-border', className)} {...props} />\n  ),\n  strong: ({ node, children, className, ...props }) => (\n    <span className={cn('font-semibold', className)} {...props}>\n      {children}\n    </span>\n  ),\n  a: ({ node, children, className, ...props }) => (\n    <a\n      className={cn('font-medium text-primary underline', className)}\n      rel=\"noreferrer\"\n      target=\"_blank\"\n      {...props}\n    >\n      {children}\n    </a>\n  ),\n  h1: ({ node, children, className, ...props }) => (\n    <h1\n      className={cn('mt-6 mb-2 font-semibold text-3xl', className)}\n      {...props}\n    >\n      {children}\n    </h1>\n  ),\n  h2: ({ node, children, className, ...props }) => (\n    <h2\n      className={cn('mt-6 mb-2 font-semibold text-2xl', className)}\n      {...props}\n    >\n      {children}\n    </h2>\n  ),\n  h3: ({ node, children, className, ...props }) => (\n    <h3 className={cn('mt-6 mb-2 font-semibold text-xl', className)} {...props}>\n      {children}\n    </h3>\n  ),\n  h4: ({ node, children, className, ...props }) => (\n    <h4 className={cn('mt-6 mb-2 font-semibold text-lg', className)} {...props}>\n      {children}\n    </h4>\n  ),\n  h5: ({ node, children, className, ...props }) => (\n    <h5\n      className={cn('mt-6 mb-2 font-semibold text-base', className)}\n      {...props}\n    >\n      {children}\n    </h5>\n  ),\n  h6: ({ node, children, className, ...props }) => (\n    <h6 className={cn('mt-6 mb-2 font-semibold text-sm', className)} {...props}>\n      {children}\n    </h6>\n  ),\n  table: ({ node, children, className, ...props }) => (\n    <div className=\"my-4 overflow-x-auto\">\n      <table\n        className={cn('w-full border-collapse border border-border', className)}\n        {...props}\n      >\n        {children}\n      </table>\n    </div>\n  ),\n  thead: ({ node, children, className, ...props }) => (\n    <thead className={cn('bg-muted/50', className)} {...props}>\n      {children}\n    </thead>\n  ),\n  tbody: ({ node, children, className, ...props }) => (\n    <tbody className={cn('divide-y divide-border', className)} {...props}>\n      {children}\n    </tbody>\n  ),\n  tr: ({ node, children, className, ...props }) => (\n    <tr className={cn('border-border border-b', className)} {...props}>\n      {children}\n    </tr>\n  ),\n  th: ({ node, children, className, ...props }) => (\n    <th\n      className={cn('px-4 py-2 text-left font-semibold text-sm', className)}\n      {...props}\n    >\n      {children}\n    </th>\n  ),\n  td: ({ node, children, className, ...props }) => (\n    <td className={cn('px-4 py-2 text-sm', className)} {...props}>\n      {children}\n    </td>\n  ),\n  blockquote: ({ node, children, className, ...props }) => (\n    <blockquote\n      className={cn(\n        'my-4 border-muted-foreground/30 border-l-4 pl-4 text-muted-foreground italic',\n        className\n      )}\n      {...props}\n    >\n      {children}\n    </blockquote>\n  ),\n  code: ({ node, className, ...props }) => {\n    const inline = node?.position?.start.line === node?.position?.end.line;\n\n    if (!inline) {\n      return <code className={className} {...props} />;\n    }\n\n    return (\n      <code\n        className={cn(\n          'rounded bg-muted px-1.5 py-0.5 font-mono text-sm',\n          className\n        )}\n        {...props}\n      />\n    );\n  },\n  pre: ({ node, className, children }) => {\n    let language = 'javascript';\n\n    if (typeof node?.properties?.className === 'string') {\n      language = node.properties.className.replace('language-', '');\n    }\n\n    // Extract code content from children safely\n    let code = '';\n    if (\n      isValidElement(children) &&\n      children.props &&\n      typeof children.props.children === 'string'\n    ) {\n      code = children.props.children;\n    } else if (typeof children === 'string') {\n      code = children;\n    }\n\n    return (\n      <CodeBlock\n        className={cn('my-4 h-auto', className)}\n        code={code}\n        language={language}\n      >\n        <CodeBlockCopyButton\n          onCopy={() => console.log('Copied code to clipboard')}\n          onError={() => console.error('Failed to copy code to clipboard')}\n        />\n      </CodeBlock>\n    );\n  },\n};\n\nexport const Response = memo(\n  ({\n    className,\n    options,\n    children,\n    allowedImagePrefixes,\n    allowedLinkPrefixes,\n    defaultOrigin,\n    parseIncompleteMarkdown: shouldParseIncompleteMarkdown = true,\n    ...props\n  }: ResponseProps) => {\n    // Parse the children to remove incomplete markdown tokens if enabled\n    const parsedChildren =\n      typeof children === 'string' && shouldParseIncompleteMarkdown\n        ? parseIncompleteMarkdown(children)\n        : children;\n\n    return (\n      <div\n        className={cn(\n          'size-full [&>*:first-child]:mt-0 [&>*:last-child]:mb-0',\n          className\n        )}\n        {...props}\n      >\n        <HardenedMarkdown\n          allowedImagePrefixes={allowedImagePrefixes ?? ['*']}\n          allowedLinkPrefixes={allowedLinkPrefixes ?? ['*']}\n          components={components}\n          defaultOrigin={defaultOrigin}\n          rehypePlugins={[rehypeKatex]}\n          remarkPlugins={[remarkGfm, remarkMath]}\n          {...options}\n        >\n          {parsedChildren}\n        </HardenedMarkdown>\n      </div>\n    );\n  },\n  (prevProps, nextProps) => prevProps.children === nextProps.children\n);\n\nResponse.displayName = 'Response';\n","import {\n  Avatar,\n  AvatarFallback,\n  AvatarImage,\n} from '@/components/ui/avatar';\nimport { cn } from '@/lib/utils';\nimport type { UIMessage } from 'ai';\nimport type { ComponentProps, HTMLAttributes } from 'react';\n\nexport type MessageProps = HTMLAttributes<HTMLDivElement> & {\n  from: UIMessage['role'];\n};\n\nexport const Message = ({ className, from, ...props }: MessageProps) => (\n  <div\n    className={cn(\n      'group flex w-full items-end justify-end gap-2 py-4',\n      from === 'user' ? 'is-user flex-row-reverse justify-end' : 'is-assistant flex-row-reverse justify-end',\n      '[&>div]:max-w-[80%]',\n      className\n    )}\n    {...props}\n  />\n);\n\nexport type MessageContentProps = HTMLAttributes<HTMLDivElement>;\n\nexport const MessageContent = ({\n  children,\n  className,\n  ...props\n}: MessageContentProps) => (\n  <div\n    className={cn(\n      'flex flex-col gap-2 overflow-hidden rounded-lg py-3 text-foreground text-sm',\n      'group-[.is-user]:bg-secondary group-[.is-user]:text-primary-foreground group-[.is-user]:px-4',\n      'group-[.is-assistant]:bg-transparent group-[.is-assistant]:text-foreground',\n      className\n    )}\n    {...props}\n  >\n    <div className=\"is-user:dark\">{children}</div>\n  </div>\n);\n\nexport type MessageAvatarProps = ComponentProps<typeof Avatar> & {\n  src: string;\n  name?: string;\n};\n\nexport const MessageAvatar = ({\n  src,\n  name,\n  className,\n  ...props\n}: MessageAvatarProps) => (\n  <Avatar\n    className={cn('size-8 ring ring-1 ring-border', className)}\n    {...props}\n  >\n    <AvatarImage alt=\"\" className=\"mt-0 mb-0\" src={src} />\n    <AvatarFallback>{name?.slice(0, 2) || 'ME'}</AvatarFallback>\n  </Avatar>\n);\n","'use client';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Tooltip,\n  TooltipContent,\n  TooltipProvider,\n  TooltipTrigger,\n} from '@/components/ui/tooltip';\nimport { cn } from '@/lib/utils';\nimport type { ComponentProps } from 'react';\n\nexport type ActionsProps = ComponentProps<'div'>;\n\nexport const Actions = ({ className, children, ...props }: ActionsProps) => (\n  <div className={cn('flex items-center gap-1', className)} {...props}>\n    {children}\n  </div>\n);\n\nexport type ActionProps = ComponentProps<typeof Button> & {\n  tooltip?: string;\n  label?: string;\n};\n\nexport const Action = ({\n  tooltip,\n  children,\n  label,\n  className,\n  variant = 'ghost',\n  size = 'sm',\n  ...props\n}: ActionProps) => {\n  const button = (\n    <Button\n      className={cn(\n        'size-9 p-1.5 text-muted-foreground hover:text-foreground',\n        className\n      )}\n      size={size}\n      type=\"button\"\n      variant={variant}\n      {...props}\n    >\n      {children}\n      <span className=\"sr-only\">{label || tooltip}</span>\n    </Button>\n  );\n\n  if (tooltip) {\n    return (\n      <TooltipProvider>\n        <Tooltip>\n          <TooltipTrigger asChild>{button}</TooltipTrigger>\n          <TooltipContent>\n            <p>{tooltip}</p>\n          </TooltipContent>\n        </Tooltip>\n      </TooltipProvider>\n    );\n  }\n\n  return button;\n};\n","'use client';\n\nimport { useControllableState } from '@radix-ui/react-use-controllable-state';\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from '@/components/ui/collapsible';\nimport { cn } from '@/lib/utils';\nimport { BrainIcon, ChevronDownIcon } from 'lucide-react';\nimport type { ComponentProps } from 'react';\nimport { createContext, memo, useContext, useEffect, useState } from 'react';\nimport { Response } from './response';\n\ntype ReasoningContextValue = {\n  isStreaming: boolean;\n  isOpen: boolean;\n  setIsOpen: (open: boolean) => void;\n  duration: number;\n};\n\nconst ReasoningContext = createContext<ReasoningContextValue | null>(null);\n\nconst useReasoning = () => {\n  const context = useContext(ReasoningContext);\n  if (!context) {\n    throw new Error('Reasoning components must be used within Reasoning');\n  }\n  return context;\n};\n\nexport type ReasoningProps = ComponentProps<typeof Collapsible> & {\n  isStreaming?: boolean;\n  open?: boolean;\n  defaultOpen?: boolean;\n  onOpenChange?: (open: boolean) => void;\n  duration?: number;\n};\n\nconst AUTO_CLOSE_DELAY = 1000;\n\nexport const Reasoning = memo(\n  ({\n    className,\n    isStreaming = false,\n    open,\n    defaultOpen = false,\n    onOpenChange,\n    duration: durationProp,\n    children,\n    ...props\n  }: ReasoningProps) => {\n    const [isOpen, setIsOpen] = useControllableState({\n      prop: open,\n      defaultProp: defaultOpen,\n      onChange: onOpenChange,\n    });\n    const [duration, setDuration] = useControllableState({\n      prop: durationProp,\n      defaultProp: 0,\n    });\n\n    const [hasAutoClosedRef, setHasAutoClosedRef] = useState(false);\n    const [startTime, setStartTime] = useState<number | null>(null);\n\n    // Track duration when streaming starts and ends\n    useEffect(() => {\n      if (isStreaming) {\n        if (startTime === null) {\n          setStartTime(Date.now());\n        }\n      } else if (startTime !== null) {\n        setDuration(Math.round((Date.now() - startTime) / 1000));\n        setStartTime(null);\n      }\n    }, [isStreaming, startTime, setDuration]);\n\n    // Auto-open when streaming starts, auto-close when streaming ends (once only)\n    useEffect(() => {\n      if (isStreaming && !isOpen) {\n        setIsOpen(true);\n      } else if (!isStreaming && isOpen && !defaultOpen && !hasAutoClosedRef) {\n        // Add a small delay before closing to allow user to see the content\n        const timer = setTimeout(() => {\n          setIsOpen(false);\n          setHasAutoClosedRef(true);\n        }, AUTO_CLOSE_DELAY);\n        return () => clearTimeout(timer);\n      }\n    }, [isStreaming, isOpen, defaultOpen, setIsOpen, hasAutoClosedRef]);\n\n    const handleOpenChange = (newOpen: boolean) => {\n      setIsOpen(newOpen);\n    };\n\n    return (\n      <ReasoningContext.Provider\n        value={{ isStreaming, isOpen, setIsOpen, duration }}\n      >\n        <Collapsible\n          className={cn('not-prose mb-4', className)}\n          onOpenChange={handleOpenChange}\n          open={isOpen}\n          {...props}\n        >\n          {children}\n        </Collapsible>\n      </ReasoningContext.Provider>\n    );\n  }\n);\n\nexport type ReasoningTriggerProps = ComponentProps<\n  typeof CollapsibleTrigger\n> & {\n  title?: string;\n};\n\nexport const ReasoningTrigger = memo(\n  ({\n    className,\n    title = 'Reasoning',\n    children,\n    ...props\n  }: ReasoningTriggerProps) => {\n    const { isStreaming, isOpen, duration } = useReasoning();\n\n    return (\n      <CollapsibleTrigger\n        className={cn(\n          'flex items-center gap-2 text-muted-foreground text-sm',\n          className\n        )}\n        {...props}\n      >\n        {children ?? (\n          <>\n            <BrainIcon className=\"size-4\" />\n            {isStreaming || duration === 0 ? (\n              <p>Thinking...</p>\n            ) : (\n              <p>Thought for {duration} seconds</p>\n            )}\n            <ChevronDownIcon\n              className={cn(\n                'size-4 text-muted-foreground transition-transform',\n                isOpen ? 'rotate-180' : 'rotate-0'\n              )}\n            />\n          </>\n        )}\n      </CollapsibleTrigger>\n    );\n  }\n);\n\nexport type ReasoningContentProps = ComponentProps<\n  typeof CollapsibleContent\n> & {\n  children: string;\n};\n\nexport const ReasoningContent = memo(\n  ({ className, children, ...props }: ReasoningContentProps) => (\n    <CollapsibleContent\n      className={cn(\n        'mt-4 text-sm',\n        'data-[state=closed]:fade-out-0 data-[state=closed]:slide-out-to-top-2 data-[state=open]:slide-in-from-top-2 text-popover-foreground outline-none data-[state=closed]:animate-out data-[state=open]:animate-in',\n        className\n      )}\n      {...props}\n    >\n      <Response className=\"grid gap-2\">{children}</Response>\n    </CollapsibleContent>\n  )\n);\n\nReasoning.displayName = 'Reasoning';\nReasoningTrigger.displayName = 'ReasoningTrigger';\nReasoningContent.displayName = 'ReasoningContent';\n","'use client';\n\nimport {\n  Collapsible,\n  CollapsibleContent,\n  CollapsibleTrigger,\n} from '@/components/ui/collapsible';\nimport { cn } from '@/lib/utils';\nimport { BookIcon, ChevronDownIcon } from 'lucide-react';\nimport type { ComponentProps } from 'react';\n\nexport type SourcesProps = ComponentProps<'div'>;\n\nexport const Sources = ({ className, ...props }: SourcesProps) => (\n  // @ts-ignore\n  <Collapsible\n    className={cn('not-prose mb-4 text-primary text-xs', className)}\n    {...props}\n  />\n);\n\nexport type SourcesTriggerProps = ComponentProps<typeof CollapsibleTrigger> & {\n  count: number;\n};\n\nexport const SourcesTrigger = ({\n  className,\n  count,\n  children,\n  ...props\n}: SourcesTriggerProps) => (\n  <CollapsibleTrigger className=\"flex items-center gap-2\" {...props}>\n    {children ?? (\n      <>\n        <p className=\"font-medium\">Used {count} sources</p>\n        <ChevronDownIcon className=\"h-4 w-4\" />\n      </>\n    )}\n  </CollapsibleTrigger>\n);\n\nexport type SourcesContentProps = ComponentProps<typeof CollapsibleContent>;\n\nexport const SourcesContent = ({\n  className,\n  ...props\n}: SourcesContentProps) => (\n  <CollapsibleContent\n    className={cn(\n      'mt-3 flex w-fit flex-col gap-2',\n      'data-[state=closed]:fade-out-0 data-[state=closed]:slide-out-to-top-2 data-[state=open]:slide-in-from-top-2 outline-none data-[state=closed]:animate-out data-[state=open]:animate-in',\n      className\n    )}\n    {...props}\n  />\n);\n\nexport type SourceProps = ComponentProps<'a'>;\n\nexport const Source = ({ href, title, children, ...props }: SourceProps) => (\n  <a\n    className=\"flex items-center gap-2\"\n    href={href}\n    rel=\"noreferrer\"\n    target=\"_blank\"\n    {...props}\n  >\n    {children ?? (\n      <>\n        <BookIcon className=\"h-4 w-4\" />\n        <span className=\"block font-medium\">{title}</span>\n      </>\n    )}\n  </a>\n);\n","\"use client\"\n\nimport { DynamicToolUIPart, UIMessage } from \"ai\"\nimport { Message, MessageContent } from '@/components/ai-elements/message'\nimport { Actions, Action } from '@/components/ai-elements/actions'\nimport { Response } from '@/components/ai-elements/response'\nimport { Reasoning, ReasoningTrigger, ReasoningContent } from \"@/components/ai-elements/reasoning\"\nimport { Source, Sources, SourcesContent, SourcesTrigger } from \"@/components/ai-elements/source\"\nimport { RefreshCcwIcon, CopyIcon } from \"lucide-react\"\nimport { cn } from \"@/lib/utils\"\nimport Image from \"next/image\"\nimport { useToast } from \"@/components/ui/use-toast\"\n\ninterface MessageRendererProps {\n  messages: UIMessage[]\n  status?: \"streaming\" | \"idle\" | \"error\" | \"submitted\" | \"ready\"\n  className?: string\n  showActions?: boolean\n  onRegenerate?: () => void\n  onAddToolResult?: (args: { tool: string; toolCallId: string; output: string }) => void\n  UntypedToolPartComponent?: React.ComponentType<{\n    untypedToolPart: DynamicToolUIPart\n    callId: string\n    addToContext: (item: any) => void\n  }>\n  addToContext?: (item: any) => void\n  writeAccess?: boolean\n  config?: {\n    marginTopFirstMessage?: string\n    customAssistantClassnames?: string\n  }\n}\n\nexport function MessageRenderer({\n  messages,\n  status = \"idle\",\n  className,\n  showActions = true,\n  onRegenerate,\n  onAddToolResult,\n  UntypedToolPartComponent,\n  addToContext,\n  writeAccess = true,\n  config\n}: MessageRendererProps) {\n  const { toast } = useToast()\n\n  return (\n    <>\n      {messages?.map((message, messageIndex) => {\n        const isFirstMessage = messageIndex === 0\n        const messageMetadata = message.metadata as any\n        const isLastMessage = messageIndex === messages.length - 1\n\n        return (\n          <Message\n            className={cn(\n              message.role === 'assistant' && (\n                config?.customAssistantClassnames ? config?.customAssistantClassnames : ''\n              ),\n              isFirstMessage && (\n                config?.marginTopFirstMessage ? config?.marginTopFirstMessage : 'mt-12'\n              ), className\n            )}\n            from={message.role}\n            key={message.id}\n          >\n            <MessageContent>\n              {message.parts.map((part, i) => {\n                if (part.type === 'step-start') {\n                  return null\n                }\n\n                if (part.type === 'text') {\n                  return (\n                    <div key={`${message.id}-${i}`}>\n                      <Response className=\"chat-response-container\">\n                        {part.text}\n                      </Response>\n                    </div>\n                  )\n                }\n\n                if (part.type === 'tool-askForConfirmation' && onAddToolResult) {\n                  const callId = part.toolCallId\n\n                  switch (part.state) {\n                    case 'input-streaming':\n                      return (\n                        <div key={callId}>Loading confirmation request...</div>\n                      )\n                    case 'input-available':\n                      return (\n                        <div key={callId}>\n                          {(part.input as { message: string }).message}\n                          <div>\n                            <button\n                              onClick={() =>\n                                onAddToolResult({\n                                  tool: 'askForConfirmation',\n                                  toolCallId: callId,\n                                  output: 'Yes, confirmed',\n                                })\n                              }\n                            >\n                              Yes\n                            </button>\n                            <button\n                              onClick={() =>\n                                onAddToolResult({\n                                  tool: 'askForConfirmation',\n                                  toolCallId: callId,\n                                  output: 'No, denied',\n                                })\n                              }\n                            >\n                              No\n                            </button>\n                          </div>\n                        </div>\n                      )\n                    case 'output-available':\n                      return (\n                        <div key={callId}>\n                          Tool call allowed: {part.output as string}\n                        </div>\n                      )\n                    case 'output-error':\n                      return <div key={callId}>Error: {part.errorText}</div>\n                  }\n                }\n\n                if (\n                  (part.type.startsWith('tool-') || part.type === 'dynamic-tool') &&\n                  UntypedToolPartComponent &&\n                  addToContext\n                ) {\n                  const untypedToolPart = part as DynamicToolUIPart\n                  const callId = untypedToolPart.toolCallId\n                  return (\n                    <UntypedToolPartComponent\n                      key={callId}\n                      untypedToolPart={untypedToolPart}\n                      callId={callId}\n                      addToContext={addToContext}\n                    />\n                  )\n                }\n\n                if (part.type === 'file') {\n                  if (part.mediaType?.startsWith('image/')) {\n                    return (\n                      <Image\n                        key={`${message.id}-${i}`}\n                        src={part.url}\n                        width={300}\n                        height={300}\n                        alt={\"Generated image\"}\n                      />\n                    )\n                  }\n                }\n\n                if (part.type === 'source-url') {\n                  return (\n                    <Sources key={`${message.id}-${i}`}>\n                      <SourcesTrigger\n                        count={message.parts.filter(\n                          (part) => part.type === 'source-url'\n                        ).length}\n                      />\n                      <SourcesContent key={`${message.id}`}>\n                        {message.parts.map((part, i) => {\n                          switch (part.type) {\n                            case 'source-url':\n                              return (\n                                <Source\n                                  key={`${message.id}-${i}`}\n                                  href={part.url}\n                                  title={part.title}\n                                />\n                              )\n                          }\n                        })}\n                      </SourcesContent>\n                    </Sources>\n                  )\n                }\n\n                if (part.type === 'reasoning') {\n                  return (\n                    <Reasoning\n                      key={`${message.id}-${i}`}\n                      className=\"w-full\"\n                      isStreaming={status === 'streaming'}\n                    >\n                      <ReasoningTrigger />\n                      <ReasoningContent>{part.text}</ReasoningContent>\n                    </Reasoning>\n                  )\n                }\n\n                return null\n              })}\n\n              {showActions && message.role === 'assistant' && (\n                <Actions className=\"mt-2\">\n                  {onRegenerate && (\n                    <Action\n                      onClick={() => onRegenerate()}\n                      label=\"Retry\"\n                      disabled={!writeAccess}\n                    >\n                      <RefreshCcwIcon className=\"size-3\" />\n                    </Action>\n                  )}\n                  <Action\n                    onClick={() => {\n                      navigator.clipboard.writeText(\n                        message.parts.map((part: any) => part?.text || \"\").join('\\n')\n                      )\n                      toast({\n                        title: \"Copied message\",\n                        description: \"The message was copied to your clipboard.\",\n                      })\n                    }}\n                    label=\"Copy\"\n                  >\n                    <CopyIcon className=\"size-3\" />\n                  </Action>\n                  {messageMetadata?.totalTokens && (\n                    <small className=\"text-muted-foreground\">\n                      {Intl.NumberFormat('en-US').format(messageMetadata?.totalTokens)} tokens\n                    </small>\n                  )}\n                </Actions>\n              )}\n            </MessageContent>\n          </Message>\n        )\n      })}\n    </>\n  )\n}\n","import { cva, type VariantProps } from \"class-variance-authority\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n        info: \"border-info/50 text-info dark:border-info [&>svg]:text-info\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  },\n);\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n));\nAlert.displayName = \"Alert\";\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n));\nAlertTitle.displayName = \"AlertTitle\";\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n));\nAlertDescription.displayName = \"AlertDescription\";\n\nexport { Alert, AlertTitle, AlertDescription };\n","\"use client\";\n\nimport * as CollapsiblePrimitive from \"@radix-ui/react-collapsible\";\n\nconst Collapsible = CollapsiblePrimitive.Root;\n\nconst CollapsibleTrigger = CollapsiblePrimitive.CollapsibleTrigger;\n\nconst CollapsibleContent = CollapsiblePrimitive.CollapsibleContent;\n\nexport { Collapsible, CollapsibleTrigger, CollapsibleContent };\n","\"use client\";\n\nimport * as TabsPrimitive from \"@radix-ui/react-tabs\";\nimport * as React from \"react\";\n\nimport { cn } from \"@/lib/utils\";\n\nconst Tabs = TabsPrimitive.Root;\n\nconst TabsList = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.List>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.List>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.List\n    ref={ref}\n    className={cn(\n      \"inline-flex h-10 items-center justify-center rounded-md bg-muted p-1 text-muted-foreground\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsList.displayName = TabsPrimitive.List.displayName;\n\nconst TabsTrigger = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Trigger>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"inline-flex items-center justify-center whitespace-nowrap rounded-sm px-3 py-1.5 text-sm font-medium ring-offset-background transition-all focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 data-[state=active]:bg-background data-[state=active]:text-foreground data-[state=active]:shadow-sm\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsTrigger.displayName = TabsPrimitive.Trigger.displayName;\n\nconst TabsContent = React.forwardRef<\n  React.ElementRef<typeof TabsPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof TabsPrimitive.Content>\n>(({ className, ...props }, ref) => (\n  <TabsPrimitive.Content\n    ref={ref}\n    className={cn(\n      \"mt-2 ring-offset-background focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2\",\n      className,\n    )}\n    {...props}\n  />\n));\nTabsContent.displayName = TabsPrimitive.Content.displayName;\n\nexport { Tabs, TabsList, TabsTrigger, TabsContent };\n","import { useEffect, useState, useContext } from \"react\";\nimport Uppy from \"@uppy/core\";\nimport AwsS3 from \"@uppy/aws-s3\";\nimport \"@uppy/core/dist/style.min.css\";\nimport \"@uppy/dashboard/dist/style.min.css\";\nimport '@uppy/core/dist/style.min.css';\nimport '@uppy/dashboard/dist/style.min.css';\nimport { getToken } from \"@/util/api\";\nimport { ConfigContext } from \"@/components/config-context\";\n\ninterface InitializeOptions {\n    backend: string;\n    callbacks?: {\n        uploadSuccess?: (response: {\n            file: any | null;\n            url: string\n            key: string\n        }) => void;\n    };\n    fileKey?: string;\n    fileKeyPrefix?: string;\n    maxNumberOfFiles?: number;\n    uppyOptions?: {\n        id?: string;\n        allowedFileTypes: string[];\n    };\n    useName?: boolean;\n}\n\nexport const initializeUppy = async (options: InitializeOptions): Promise<Uppy> => {\n    if (!options.backend) {\n        throw new Error(\"No backend set.\")\n    }\n    const { callbacks, maxNumberOfFiles, uppyOptions } = options || {};\n    const { uploadSuccess } = callbacks || {};\n    const { allowedFileTypes, id } = uppyOptions || {};\n    const token = await getToken()\n\n    const uppy = new Uppy({\n        autoProceed: true,\n        debug: false,\n        id: id || \"uppy\",\n        restrictions: {\n            maxNumberOfFiles: maxNumberOfFiles || 5,\n            allowedFileTypes: allowedFileTypes || [\".heic\", \".jpg\", \".jpeg\", \".png\", \".webp\", \".svg\"],\n        }\n    })\n        .use(AwsS3, {\n            id: \"Exulu\",\n            endpoint: options.backend,\n            headers: {      \n                Authorization: `Bearer ${token}`,\n                Session: localStorage.getItem(\"session\") ?? \"\",\n            }\n        })\n        .on(\"file-added\", async (file) => {\n            console.debug(\"added\", file);\n        })\n        .on(\"upload-error\", (file, error) => {\n            if (!file?.id) {\n                return;\n            }\n            uppy.removeFile(file?.id);\n            console.error(\"error\", error);\n        })\n        .on(\"upload-success\", (file, response) => {\n            if (!response.uploadURL) {\n                return;\n            }\n            if (uploadSuccess) {\n                console.log(\"response\", response)\n                uploadSuccess({\n                    file: file,\n                    key: response.uploadURL.split(\"/\").pop() || \"\",\n                    url: response.uploadURL,\n                });\n            }\n        });\n\n    return uppy;\n};\n\nfunction useUppy(options: InitializeOptions, deps: any[] = []) {\n    const configContext = useContext(ConfigContext);\n    const [uppy, setUppy] = useState<Uppy | undefined>(undefined);\n    useEffect(() => {\n        const initUppy = async () => {\n            const uppyInstance = await initializeUppy({\n                ...options,\n                backend: configContext?.backend || \"\",\n            });\n            setUppy(uppyInstance);\n        };\n        initUppy()\n        return () => {\n            if (uppy) {\n                uppy.destroy();\n                setUppy(undefined);\n            }\n        };\n    }, [...deps]);\n\n    return uppy;\n}\n\nexport default useUppy;\n","import useUppy from \"@/hooks/use-uppy\";\nimport { Dashboard } from '@uppy/react';\nimport { useContext, useEffect, useState } from \"react\"\nimport { X, File, ImageIcon, FileText, FilePlus, Download, LoaderIcon, FileWarning, Upload, PlusSquareIcon, EyeIcon, PlusIcon, ChevronRightIcon, ChevronLeftIcon } from \"lucide-react\"\nimport { Button } from \"@/components/ui/button\"\nimport {\n  Dialog,\n  DialogContent,\n  DialogDescription,\n  DialogHeader,\n  DialogTitle,\n  DialogTrigger,\n} from \"@/components/ui/dialog\"\nimport { ScrollArea } from \"@/components/ui/scroll-area\"\nimport '@uppy/core/dist/style.min.css';\nimport '@uppy/dashboard/dist/style.min.css';\nimport { files, S3FileListOutput } from \"@/util/api\"\nimport { useTheme } from \"next-themes\";\nimport { ConfigContext } from \"./config-context\";\nimport { useQuery as useTanstackQuery, useMutation as useTanstackMutation } from \"@tanstack/react-query\";\nimport { Loading } from \"./ui/loading\";\nimport { allFileTypes } from \"@/types/models/agent\";\nimport { Input } from \"./ui/input\";\nimport { DoubleArrowLeftIcon } from \"@radix-ui/react-icons\";\nimport { Card, CardContent, CardHeader, CardTitle } from \"./ui/card\";\nimport { Skeleton } from \"./ui/skeleton\";\n\nexport function FileDataCard({ s3key, children }: { s3key: string, children?: React.ReactNode }) {\n  const { data, isLoading, error, refetch } = useTanstackQuery({\n    queryKey: ['fileObject', s3key],\n    queryFn: async () => {\n      if (!s3key) {\n        return null;\n      }\n      const result = await files.object(s3key);\n      return result;\n    },\n    enabled: s3key !== undefined && s3key !== null,\n  })\n\n  useEffect(() => {\n    if (s3key) {\n      refetch();\n    }\n  }, [s3key]);\n\n  if (!s3key) {\n    return <Card>\n      <CardContent className=\"p-3 flex\">\n        <p className=\"text-sm text-muted-foreground m-auto\">No file selected</p>\n        {children}\n      </CardContent>\n    </Card>;\n  }\n\n  return <Card>\n    <CardHeader className=\"pb-3\">\n      <CardTitle className=\"text-sm truncate\">{s3key.split(\"_EXULU_\").pop()}</CardTitle>\n    </CardHeader>\n    <CardContent className=\"pt-0\">\n      {\n        isLoading && (\n          <div className=\"space-y-2\">\n            <Skeleton className=\"h-4 w-full\" />\n            <Skeleton className=\"h-4 w-2/3\" />\n          </div>\n        )\n      }\n      {!isLoading && data && (\n        <div className=\"space-y-2\">\n          <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n            <span className=\"capitalize\">{data?.ContentType.split(\"/\").pop()}</span>\n            <span>{(data?.ContentLength / 1024 / 1024).toFixed(2)} MB</span>\n          </div>\n          <div className=\"flex items-center justify-between text-xs text-muted-foreground\">\n            <span>Last modified: {new Date(data?.LastModified).toLocaleDateString(\"en-US\", { year: \"numeric\", month: \"long\", day: \"numeric\", hour: \"2-digit\", minute: \"2-digit\" })}</span>\n            <Button\n              variant=\"secondary\"\n              size=\"sm\"\n              type=\"button\"\n              className=\"h-7 px-2\"\n              onClick={() => {\n                files.download(s3key).then(async res => {\n                  console.log(\"res\", res);\n                  const json = await res.json()\n                  console.log(\"res\", json);\n                  const downloadUrl = json.url;\n                  window.open(downloadUrl, '_blank');\n                  return;\n                })\n              }}>\n              <span className=\"mr-1 text-xs\">View</span>\n              <Download className=\"h-3 w-3\" />\n            </Button>\n          </div>\n        </div>\n      )}\n      {\n        !isLoading && error && (\n          <p className=\"text-xs text-muted-foreground\">{error.message}</p>\n        )\n      }\n      {children}\n    </CardContent>\n  </Card>\n}\n\nexport default function UppyDashboard({ id, allowedFileTypes, dependencies, onConfirm, selectionLimit, buttonText }: {\n  id: string,\n  buttonText?: string,\n  allowedFileTypes?: allFileTypes[],\n  selectionLimit: number,\n  dependencies: any[],\n  onConfirm: (keys: string[]) => void\n}) {\n  const [open, setOpen] = useState(false)\n  return <Dialog open={open} onOpenChange={setOpen}>\n    <DialogTrigger asChild>\n      <Button variant=\"outline\">\n        {buttonText && (\n          <span className=\"mr-2\">{buttonText}</span>\n        )\n        }\n        <FilePlus className=\"h-4 w-4\" />\n      </Button>\n    </DialogTrigger>\n    <DialogContent className=\"sm:max-w-[900px]\">\n      <DialogHeader>\n        <DialogTitle>File Gallery</DialogTitle>\n        <DialogDescription>Browse your previously uploaded files or upload new ones.</DialogDescription>\n      </DialogHeader>\n      <FileGalleryAndUpload\n        id={id}\n        allowedFileTypes={allowedFileTypes}\n        dependencies={dependencies}\n        selectionLimit={selectionLimit}\n        onConfirm={(data) => {\n          onConfirm(data)\n          setOpen(false)\n        }}\n      />\n    </DialogContent>\n  </Dialog>;\n}\n\nexport const FileGalleryAndUpload = ({ id, allowedFileTypes, dependencies, onConfirm, selectionLimit }: {\n  id: string,\n  allowedFileTypes?: allFileTypes[],\n  dependencies: any[],\n  selectionLimit: number,\n  onConfirm: (keys: string[]) => void\n}) => {\n\n  if (!allowedFileTypes) {\n    allowedFileTypes = [\n      '.png',\n      '.jpg',\n      '.jpeg',\n      '.gif',\n      '.webp',\n      '.pdf',\n      '.docx',\n      '.xlsx',\n      '.xls',\n      '.csv',\n      '.pptx',\n      '.ppt',\n      '.mp3',\n      '.wav',\n      '.m4a',\n      '.mp4',\n      '.mpeg',\n      '.mp4',\n      '.m4a',\n      '.mp3',\n      '.mpeg',\n      '.wav'\n    ]\n  }\n\n  const [search, setSearch] = useState<string | undefined>(undefined)\n  const [previousContinuationToken, setPreviousContinuationToken] = useState<string | undefined>(undefined)\n  const [currentContinuationToken, setCurrentContinuationToken] = useState<string | undefined>(undefined)\n  const configContext = useContext(ConfigContext);\n  const [selected, setSelected] = useState<string[]>([])\n\n  const addSelected = (key: string) => {\n    if (selected.includes(key)) {\n      setSelected(selected.filter((s) => s !== key))\n      return;\n    }\n    if (selectionLimit === 1) {\n      setSelected([key])\n      return;\n    }\n    if (selected.length >= selectionLimit) {\n      return;\n    }\n    setSelected([...selected, key])\n  }\n\n  const deleteFile = useTanstackMutation({\n    mutationFn: async ({ key }: { key: string }) => {\n      await files.delete(key)\n      refetch();\n      return;\n    }\n  })\n\n  const { data, isLoading: loading, error, refetch } = useTanstackQuery({\n    queryKey: ['filesQuery', search, currentContinuationToken],\n    staleTime: 30000,\n    queryFn: async (): Promise<S3FileListOutput> => {\n      return files.list({\n        search,\n        continuationToken: currentContinuationToken\n      })\n    },\n  })\n\n  console.log(\"!! data !!\", data)\n\n  const { theme } = useTheme()\n  const uppy = useUppy(\n    {\n      backend: configContext?.backend || \"\",\n      uppyOptions: {\n        id,\n        allowedFileTypes\n      },\n      callbacks: {\n        uploadSuccess: async (data) => {\n          console.log(\"data\", data)\n          /* \n          We no longer create items automatically for files uploaded via uppy.\n          const item = {\n            name: data.file.name,\n            type: data.file.type,\n            rights_mode: \"private\",\n            s3key: `${user?.id}/${data.key}`\n          }\n          await createItemMutation({ variables: { input: item } }) */\n        },\n      },\n      maxNumberOfFiles: 10,\n    },\n    dependencies,\n  );\n\n  useEffect(() => {\n    refetch();\n  }, [search, currentContinuationToken]);\n\n  // Loading state\n  if (!uppy) {\n    return null;\n  }\n\n  return <>\n    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-4 mt-4\">\n      {/* Left side - Gallery of previously uploaded files */}\n      <div className=\"border rounded-lg p-4\">\n        <h3 className=\"text-sm font-medium mb-3\">Previously Uploaded Files</h3>\n\n        {/* search */}\n        <Input\n          placeholder=\"Search files...\"\n          value={search}\n          onChange={(e) => setSearch(e.target.value)}\n          className=\"mb-3\"\n        />\n        <div className=\"flex items-center justify-between text-xs text-muted-foreground pb-2\">\n          <span>{selected.length} / {selectionLimit} files selected</span>\n          <span>Allowed file types: {allowedFileTypes?.map((type) => type).join(\", \")}</span>\n        </div>\n        <ScrollArea>\n          {loading && (\n            <div className=\"flex items-center justify-center h-full w-full grid grid-cols-2 sm:grid-cols-3 gap-3\">\n              <Skeleton className=\"h-[120px] w-full\" />\n              <Skeleton className=\"h-[120px] w-full\" />\n              <Skeleton className=\"h-[120px] w-full\" />\n              <Skeleton className=\"h-[120px] w-full\" />\n              <Skeleton className=\"h-[120px] w-full\" />\n              <Skeleton className=\"h-[120px] w-full\" />\n              <Skeleton className=\"h-[120px] w-full\" />\n              <Skeleton className=\"h-[120px] w-full\" />\n              <Skeleton className=\"h-[120px] w-full\" />\n            </div>\n          )}\n          <div className=\"grid grid-cols-2 sm:grid-cols-3 gap-3\">\n            {\n              !loading && !data?.Contents?.length && (\n                <div className=\"col-span-full flex flex-col items-center justify-center py-12 text-center\">\n                  <FileWarning className=\"h-12 w-12 text-muted-foreground/50 mb-3\" />\n                  <p className=\"text-sm font-medium text-muted-foreground\">Nothing to see here... yet!</p>\n                  <p className=\"text-xs text-muted-foreground/75 mt-1\">Upload some files to get started</p>\n                </div>\n              )\n            }\n            {data?.Contents?.map((item: S3FileListOutput[\"Contents\"][0]) => {\n              return (\n                <FileItem s3Key={item.Key} onSelect={addSelected} active={selected.some((s) => s === item.Key)} onRemove={() => {\n                  deleteFile.mutate({\n                    key: item.Key\n                  })\n                }} disabled={!allowedFileTypes ? false : !allowedFileTypes?.some((type) => item.Key.endsWith(type))} />\n              )\n            })}\n          </div>\n\n          <div className=\"flex items-center space-x-6 lg:space-x-8 pt-3\">\n            <div className=\"flex items-center space-x-2\">\n              <Button\n                variant=\"outline\"\n                className=\"hidden size-8 p-0 lg:flex\"\n                onClick={() => {\n                  setCurrentContinuationToken(undefined)\n                }}\n                disabled={\n                  !currentContinuationToken ||\n                  loading\n                }\n              >\n                <span className=\"sr-only\">Go to first page</span>\n                <DoubleArrowLeftIcon className=\"size-4\" />\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"size-8 p-0\"\n                onClick={() => {\n                  setCurrentContinuationToken(previousContinuationToken)\n                }}\n                disabled={\n                  !currentContinuationToken ||\n                  loading\n                }\n              >\n                <span className=\"sr-only\">Go to previous page</span>\n                <ChevronLeftIcon className=\"size-4\" />\n              </Button>\n              <Button\n                variant=\"outline\"\n                className=\"size-8 p-0\"\n                onClick={() => {\n                  setPreviousContinuationToken(currentContinuationToken)\n                  setCurrentContinuationToken(data?.NextContinuationToken)\n                }}\n                disabled={\n                  !data?.NextContinuationToken ||\n                  loading\n                }>\n                <span className=\"sr-only\">Go to next page</span>\n                <ChevronRightIcon className=\"size-4\" />\n              </Button>\n            </div>\n          </div>\n        </ScrollArea>\n      </div>\n      {/* Right side - Upload area */}\n      <div className=\"border rounded-lg p-4\">\n        <h3 className=\"text-sm font-medium mb-3\">Upload New Files</h3>\n        <Dashboard uppy={uppy} theme={theme === \"dark\" ? \"dark\" : \"light\"} />\n      </div>\n    </div>\n    <div className=\"flex justify-end\">\n      <Button variant=\"outline\" onClick={() => {\n        onConfirm(selected)\n        setSelected([])\n      }}>\n        Confirm\n      </Button>\n    </div>\n  </>\n}\n\nexport const FileItem = ({ s3Key, onSelect, onRemove, active, disabled, addToContext }: {\n  s3Key: string,\n  onSelect?: (key: string) => void,\n  onRemove?: (key: string) => void,\n  active: boolean,\n  disabled: boolean,\n  addToContext?: (key: string) => void\n}) => {\n  const getFileIcon = (s3Key: string) => {\n    if (!s3Key) {\n      return <FileText className=\"h-6 w-6 text-gray-500\" />\n    }\n    if (\n      s3Key.toLowerCase().endsWith(\"jpg\") ||\n      s3Key.toLowerCase().endsWith(\"jpeg\") ||\n      s3Key.toLowerCase().endsWith(\"png\") ||\n      s3Key.toLowerCase().endsWith(\"svg\")\n    ) {\n      return <ImageIcon className=\"h-6 w-6 text-blue-500\" />\n    } else if (s3Key.endsWith(\"pdf\")) {\n      return <File className=\"h-6 w-6 text-red-500\" />\n    } else if (s3Key.endsWith(\"xls\") || s3Key.endsWith(\"xlsx\") || s3Key.endsWith(\"csv\")) {\n      return <FileText className=\"h-6 w-6 text-green-500\" />\n    } else if (s3Key.endsWith(\"ppt\") || s3Key.endsWith(\"pptx\")) {\n      return <FileText className=\"h-6 w-6 text-orange-500\" />\n    } else {\n      return <FileText className=\"h-6 w-6 text-gray-500\" />\n    }\n  }\n\n  return (\n    <div\n      key={s3Key}\n      className={`${disabled ? 'opacity-50' : ''} group relative rounded-lg p-2 hover:bg-muted transition-colors cursor-pointer ${active ? 'border border-purple-500' : 'border'}`}\n      onClick={() => {\n        if (!disabled && onSelect) {\n          onSelect(s3Key)\n        }\n      }}>\n      <div className=\"aspect-square relative mb-2 bg-muted/50 rounded-md overflow-hidden flex items-center justify-center\">\n        {(\n          s3Key && (\n            s3Key.toLowerCase().endsWith(\"jpg\") ||\n            s3Key.toLowerCase().endsWith(\"jpeg\") ||\n            s3Key.toLowerCase().endsWith(\"png\") ||\n            s3Key.toLowerCase().endsWith(\"svg\")\n          )\n        ) ? (\n          <SecureImageRenderComponent fileKey={s3Key} />\n        ) : (\n          <div className=\"flex flex-col items-center justify-center h-full\">\n            {getFileIcon(s3Key)}\n            <span className=\"text-xs text-muted-foreground mt-1 text-center\">{s3Key ? s3Key.split(\"_EXULU_\").pop() : s3Key}</span>\n          </div>\n        )}\n      </div>\n      <p className=\"text-xs truncate\">{s3Key ? s3Key.split(\"_EXULU_\").pop() : s3Key}</p>\n      <div className=\"opacity-0 group-hover:opacity-100 flex absolute top-1 right-1\">\n\n        {addToContext && (\n          <Button variant=\"ghost\" size=\"icon\" type=\"button\" className=\"h-6 w-6 bg-background/80 hover:bg-background\" onClick={() => {\n            addToContext(s3Key)\n          }}>\n            <PlusIcon className=\"h-3 w-3\" />\n            <span className=\"sr-only\">Add</span>\n          </Button>\n        )}\n\n        <Button\n          variant=\"ghost\"\n          size=\"icon\"\n          type=\"button\"\n          className=\"h-6 w-6 bg-background/80 hover:bg-background\"\n          onClick={() => {\n            files.download(s3Key).then(async res => {\n              console.log(\"res\", res);\n              const json = await res.json()\n              console.log(\"res\", json);\n              const downloadUrl = json.url;\n              window.open(downloadUrl, '_blank');\n              return;\n            })\n          }}>\n          <Download className=\"h-3 w-3\" />\n          <span className=\"sr-only\">View</span>\n        </Button>\n\n        {onRemove && (\n          <Button\n            onClick={(e) => {\n              e.stopPropagation()\n              onRemove(s3Key)\n            }}\n            variant=\"ghost\"\n            type=\"button\"\n            size=\"icon\"\n            className=\"h-6 w-6 opacity-0 group-hover:opacity-100 bg-background/80 hover:bg-background ml-1\">\n            <X className=\"h-3 w-3\" />\n            <span className=\"sr-only\">Remove</span>\n          </Button>\n        )}\n      </div>\n    </div>\n  )\n}\n\nlet signedUrlCache: {\n  [key: string]: {\n    url: string;\n    expiresAt: number;\n  }\n} = {};\n\nexport const getPresignedUrl = async (fileKey: string) => {\n  if (signedUrlCache[fileKey]) {\n    if (signedUrlCache[fileKey].expiresAt < Date.now()) {\n      delete signedUrlCache[fileKey];\n    } else {\n      return signedUrlCache[fileKey].url;\n    }\n  }\n  const response = await files.download(fileKey)\n  const json = await response.json();\n  console.log(\"json\", json)\n  signedUrlCache[fileKey] = {\n    url: json.url,\n    expiresAt: Date.now() + 60 * 1000, // 1 minute\n  }\n  return json.url;\n}\n\nconst SecureImageRenderComponent = ({ fileKey }: { fileKey: string }) => {\n  // Gets a signed key to show the image\n  console.log(\"key\", fileKey)\n  const query = useTanstackQuery({\n    queryKey: ['imageQuery', fileKey],\n    staleTime: 30000,\n    queryFn: async () => {\n      return getPresignedUrl(fileKey)\n    },\n  })\n\n  if (query.isLoading) {\n    return <div><LoaderIcon /></div>\n  }\n\n  if (!query.isLoading && !query.data) {\n    return <div><FileWarning /></div>\n  }\n\n  return (<img\n    src={query.data}\n    alt={fileKey}\n    className=\"object-cover w-full h-full\"\n  />)\n\n}"],"names":["CodeBlockContext","createContext","code","CodeBlock","language","showLineNumbers","className","children","props","param","react_jsx_runtime__WEBPACK_IMPORTED_MODULE_0__","jsx","Provider","value","div","cn","jsxs","SyntaxHighlighter","codeTagProps","customStyle","margin","padding","fontSize","background","color","lineNumberStyle","paddingRight","minWidth","style","oneLight","oneDark","CodeBlockCopyButton","onCopy","onError","timeout","isCopied","setIsCopied","useState","useContext","copyToClipboard","navigator","clipboard","writeText","setTimeout","error","Icon","CheckIcon","CopyIcon","Button","onClick","size","variant","Conversation","StickToBottom","initial","resize","role","ConversationContent","Content","HardenedMarkdown","hardenReactMarkdown","ReactMarkdown","components","ol","node","li","ul","hr","strong","span","a","rel","target","h1","h2","h3","h4","h5","h6","table","thead","tbody","tr","th","td","blockquote","position","start","line","end","pre","properties","replace","isValidElement","console","log","Response","memo","options","allowedImagePrefixes","allowedLinkPrefixes","defaultOrigin","parseIncompleteMarkdown","shouldParseIncompleteMarkdown","parsedChildren","text","result","linkMatch","match","startIndex","lastIndexOf","substring","asteriskPairs","length","concat","underscorePairs","singleAsterisks","split","reduce","acc","char","index","prevChar","nextChar","singleUnderscores","includes","singleBacktickCount","i","isTripleStart","isTripleMiddle","isTripleEnd","tildePairs","rehypePlugins","rehypeKatex","remarkPlugins","remarkGfm","remarkMath","prevProps","nextProps","displayName","Message","from","jsx_runtime","MessageContent","Actions","Action","tooltip","label","button","type","TooltipProvider","Tooltip","TooltipTrigger","asChild","TooltipContent","p","ReasoningContext","useReasoning","context","Reasoning","isStreaming","open","defaultOpen","onOpenChange","duration","durationProp","isOpen","setIsOpen","useControllableState","prop","defaultProp","onChange","setDuration","hasAutoClosedRef","setHasAutoClosedRef","startTime","setStartTime","useEffect","Date","now","Math","round","timer","clearTimeout","Collapsible","newOpen","ReasoningTrigger","title","CollapsibleTrigger","Fragment","BrainIcon","ChevronDownIcon","ReasoningContent","CollapsibleContent","Sources","SourcesTrigger","count","SourcesContent","Source","href","BookIcon","MessageRenderer","messages","status","showActions","onRegenerate","onAddToolResult","UntypedToolPartComponent","addToContext","writeAccess","config","toast","useToast","map","message","messageIndex","messageMetadata","metadata","customAssistantClassnames","isFirstMessage","marginTopFirstMessage","parts","part","id","callId","toolCallId","state","input","tool","output","errorText","startsWith","untypedToolPart","mediaType","Image","src","url","width","height","alt","filter","disabled","RefreshCcwIcon","join","description","totalTokens","small","Intl","NumberFormat","format","alertVariants","cva","variants","default","destructive","info","defaultVariants","Alert","React","ref","AlertTitle","AlertDescription","CollapsiblePrimitive","Tabs","TabsPrimitive","TabsList","TabsTrigger","TabsContent","initializeUppy","localStorage","backend","callbacks","maxNumberOfFiles","uppyOptions","uploadSuccess","allowedFileTypes","token","getToken","uppy","Uppy","autoProceed","debug","restrictions","use","AwsS3","endpoint","headers","Authorization","Session","getItem","on","file","removeFile","response","uploadURL","key","pop","use_uppy","deps","configContext","ConfigContext","setUppy","undefined","initUppy","destroy","FileDataCard","s3key","data","isLoading","refetch","useTanstackQuery","queryKey","queryFn","files","object","enabled","Card","CardHeader","CardTitle","CardContent","Skeleton","ContentType","ContentLength","toFixed","LastModified","toLocaleDateString","year","month","day","hour","minute","download","then","res","json","downloadUrl","window","Download","UppyDashboard","dependencies","onConfirm","selectionLimit","buttonText","setOpen","Dialog","DialogTrigger","FilePlus","DialogContent","DialogHeader","DialogTitle","DialogDescription","FileGalleryAndUpload","search","setSearch","previousContinuationToken","setPreviousContinuationToken","currentContinuationToken","setCurrentContinuationToken","selected","setSelected","addSelected","s","deleteFile","useTanstackMutation","mutationFn","delete","loading","staleTime","list","continuationToken","theme","useTheme","useUppy","Input","placeholder","e","ScrollArea","Contents","FileWarning","FileItem","s3Key","item","Key","onSelect","active","some","onRemove","mutate","endsWith","DoubleArrowLeftIcon","ChevronLeftIcon","NextContinuationToken","ChevronRightIcon","Dashboard","toLowerCase","SecureImageRenderComponent","fileKey","ImageIcon","File","FileText","PlusIcon","stopPropagation","X","signedUrlCache","getPresignedUrl","expiresAt","query","LoaderIcon","img"],"sourceRoot":""}