"use strict";(()=>{var e={};e.id=4912,e.ids=[4912],e.modules={72934:e=>{e.exports=require("next/dist/client/components/action-async-storage.external.js")},54580:e=>{e.exports=require("next/dist/client/components/request-async-storage.external.js")},45869:e=>{e.exports=require("next/dist/client/components/static-generation-async-storage.external.js")},20399:e=>{e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},30517:e=>{e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},27790:e=>{e.exports=require("assert")},78893:e=>{e.exports=require("buffer")},61282:e=>{e.exports=require("child_process")},84770:e=>{e.exports=require("crypto")},80665:e=>{e.exports=require("dns")},17702:e=>{e.exports=require("events")},92048:e=>{e.exports=require("fs")},32615:e=>{e.exports=require("http")},35240:e=>{e.exports=require("https")},98216:e=>{e.exports=require("net")},19801:e=>{e.exports=require("os")},55315:e=>{e.exports=require("path")},86624:e=>{e.exports=require("querystring")},76162:e=>{e.exports=require("stream")},82452:e=>{e.exports=require("tls")},17360:e=>{e.exports=require("url")},21764:e=>{e.exports=require("util")},71568:e=>{e.exports=require("zlib")},8678:e=>{e.exports=import("pg")},78214:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{originalPathname:()=>E,patchFetch:()=>u,requestAsyncStorage:()=>c,routeModule:()=>p,serverHooks:()=>g,staticGenerationAsyncStorage:()=>d});var a=r(49303),n=r(88716),o=r(60670),i=r(19834),l=e([i]);i=(l.then?(await l)():l)[0];let p=new a.AppRouteRouteModule({definition:{kind:n.x.APP_ROUTE,page:"/api/auth/[...nextauth]/route",pathname:"/api/auth/[...nextauth]",filename:"route",bundlePath:"app/api/auth/[...nextauth]/route"},resolvedPagePath:"/Users/daniel.claessen/Desktop/Projects/exulu/frontend/app/api/auth/[...nextauth]/route.ts",nextConfigOutput:"standalone",userland:i}),{requestAsyncStorage:c,staticGenerationAsyncStorage:d,serverHooks:g}=p,E="/api/auth/[...nextauth]/route";function u(){return(0,o.patchFetch)({serverHooks:g,staticGenerationAsyncStorage:d})}s()}catch(e){s(e)}})},19579:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.d(t,{b:()=>x,d:()=>w});var a=r(14029),n=r(53797),o=r(55245),i=r(84770),l=r(1203),u=r(8678),p=r(98691),c=r(35515),d=r(30849),g=r(77234),E=e([u]);u=(E.then?(await E)():E)[0];let m=async e=>{let t=process.env.NEXTAUTH_SECRET,r=await (0,c.nO)({k:t,alg:"HS256",kty:"oct"});return await new d.N(e).setProtectedHeader({alg:"HS256"}).setIssuedAt().setExpirationTime("365d").sign(r)},w=new u.Pool({host:process.env.POSTGRES_DB_HOST,user:process.env.POSTGRES_DB_USER,port:parseInt(process.env.POSTGRES_DB_PORT||"5432",10),password:process.env.POSTGRES_DB_PASSWORD,database:process.env.POSTGRES_DB_NAME||"exulu",max:20,idleTimeoutMillis:3e4,connectionTimeoutMillis:2e3}),h=[(0,n.Z)({name:"Credentials",credentials:{email:{label:"Email",type:"email"},password:{label:"Password",type:"password"}},authorize:async e=>{if(!e?.email||!e?.password)return null;let t=await w.query("SELECT * FROM users WHERE email = $1",[e.email]);if(console.log("[NEXT AUTH] authorize res rows count:",t.rows.length),console.log("[NEXT AUTH] Full user object:",JSON.stringify(t.rows[0],null,2)),!t?.rows?.length)return null;for(let r of t.rows){let t=await p.ZP.compare(e.password,r.password);if(console.log("[NEXT AUTH] isMatch",t),t)return await w.query("UPDATE users SET last_used = $1 WHERE email = $2",[new Date,r.email]),r}}})];process.env.EMAIL_SERVER_HOST&&h.push((0,a.Z)({async sendVerificationRequest({identifier:e,token:t,url:r,provider:{server:s,from:a}}){var n;let{host:i}=new URL(r),l=(0,o.createTransport)(s);await l.sendMail({to:e,from:a,subject:`Sign in to ${i}`,text:(n={token:t,host:i},`
  Sign in to ${n.host}
  
  Sign in code: ${n.token}
  
  Keep in mind that this code will expire after 3 minutes. If you did not request this email you can safely ignore it.
  `),html:function(e){let{token:t,host:r}=e,s=r.replace(/\\./g,"&#8203;."),a={background:"#f9f9f9",text:"#444",mainBackground:"#fff"};return`
<body style="background: ${a.background};">
  <table width="100%" border="0" cellspacing="20" cellpadding="0"
    style="background: ${a.mainBackground}; max-width: 600px; margin: auto; border-radius: 10px;">
    <tr>
      <td align="center"
        style="padding: 10px 0px; font-size: 22px; font-family: Helvetica, Arial, sans-serif; color: ${a.text};">
        Sign in to <strong>${s}</strong>
      </td>
    </tr>
    <tr>
      <td align="center" style="padding: 20px 0;">
        <table border="0" cellspacing="0" cellpadding="0">
          <tr>
            <td align="center"><strong>Sign in code:</strong> ${t}</td>
          </tr>
        </table>
      </td>
    </tr>
    <tr>
      <td align="center"
        style="padding: 0px 0px 10px 0px; font-size: 16px; line-height: 22px; font-family: Helvetica, Arial, sans-serif; color: ${a.text};">
        Keep in mind that this code will expire after <strong><em>3 minutes</em></strong>. If you did not request this email you can safely ignore it.
      </td>
    </tr>
  </table>
</body>
  `}({token:t,host:i})})},generateVerificationToken:async()=>(0,i.randomInt)(1e5,999999).toString(),maxAge:180,server:{host:process.env.EMAIL_SERVER_HOST,port:parseInt(process.env.EMAIL_SERVER_PORT,10),auth:{user:process.env.EMAIL_SERVER_USER,pass:process.env.EMAIL_SERVER_PASSWORD}},from:process.env.EMAIL_FROM})),process.env.GOOGLE_CLIENT_ID&&process.env.GOOGLE_CLIENT_SECRET&&h.push((0,g.Z)({clientId:process.env.GOOGLE_CLIENT_ID,clientSecret:process.env.GOOGLE_CLIENT_SECRET,allowDangerousEmailAccountLinking:!0,authorization:{params:{prompt:"consent",access_type:"offline",response_type:"code",scope:"https://www.googleapis.com/auth/userinfo.profile https://www.googleapis.com/auth/directory.readonly https://www.googleapis.com/auth/user.emails.read https://www.googleapis.com/auth/admin.directory.group.readonly https://www.googleapis.com/auth/admin.directory.user.readonly https://www.googleapis.com/auth/userinfo.email openid"}}}));let x=async()=>({pages:{signIn:"/login"},adapter:(0,l.Z)(w),session:{strategy:"jwt"},jwt:{secret:process.env.NEXTAUTH_SECRET},providers:h,callbacks:{async signIn({account:e,profile:t,user:r}){let s=r.email;if(console.log("[EXULU] Sign in callback",e,t,r),e?.provider==="google"&&(s=t?.email),console.log("[EXULU] ALLOWED_EMAIL_DOMAINS",process.env.ALLOWED_EMAIL_DOMAINS),process.env.ALLOWED_EMAIL_DOMAINS){let e=process.env.ALLOWED_EMAIL_DOMAINS.split(",");if(e.push("exulu.com"),e.push("qventu.com"),!e.some(e=>s.endsWith(`@${e}`)))return!1}let a=await w.query("SELECT * FROM users WHERE email = $1",[s]);if(console.log("[EXULU] Sign in callback user query result",a),a.rows.length>0)return await w.query("UPDATE users SET last_used = $1 WHERE email = $2",[new Date,s]),!0;if(!a.rows.length&&e?.provider==="google"){let e=t?.given_name||"";return await w.query('INSERT INTO users ("email", "name", "createdAt", "updatedAt", "emailVerified", "last_used", "type", "super_admin") VALUES ($1, $2, $3, $4, $5, $6, $7, $8)',[s,e,new Date,new Date,new Date,new Date,"user",!1]),!0}return console.log("[NEXT AUTH] res.rows.length",a.rows.length),!!a.rows.length},async jwt({token:e,user:t}){e.uid=e.sub??"nosub";let r=await m({id:t?t.id:e.sub,email:t?t.email:e.email});return e.jwt=r,e},session:async({session:e,token:t})=>(t&&e.user&&(e.user.id=t.id,e.user.jwt=t.jwt,e.user.email=t.email),e)},secret:process.env.NEXTAUTH_SECRET});s()}catch(e){s(e)}})},19834:(e,t,r)=>{r.a(e,async(e,s)=>{try{r.r(t),r.d(t,{GET:()=>l,POST:()=>l,dynamic:()=>u});var a=r(75571),n=r.n(a),o=r(19579),i=e([o]);o=(i.then?(await i)():i)[0];let u="force-dynamic";async function l(e,t){let r=await (0,o.b)();return await n()(e,t,r)}s()}catch(e){s(e)}})},49303:(e,t,r)=>{e.exports=r(30517)}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[9276,3543],()=>r(78214));module.exports=s})();